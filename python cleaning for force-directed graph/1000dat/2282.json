{"hirable": null, "public_repos": 15, "is_suspicious": false, "updated_at": "2018-07-19 20:02:07", "id": 2282, "blog": "www.ensightenterprises.com", "followers": 1, "location": "Dallas, TX", "follower_list": [5877145], "type": "User", "commit_list": [{"repo_id": 33973886, "repo_owner_id": 2282, "commit_at": "2015-04-14 23:51:19-05:00", "committer_id": 2282, "message": "Initial Commit", "repo_description": "Imports LIMU csv data into a database", "generate_at": "2015-04-14 23:51:19-05:00", "author_id": 2282, "repo_name": "jcartwright/limu-importer"}, {"repo_id": 96122718, "repo_owner_id": 2282, "commit_at": "2017-07-03 11:08:08.000-05:00", "committer_id": 19864447, "message": "Update README.md\n\nShow successful completion of the problem", "repo_description": null, "generate_at": "2017-07-03 11:08:08.000-05:00", "author_id": 2282, "repo_name": "jcartwright/pe-poker"}, {"repo_id": 27595611, "repo_owner_id": 178386, "commit_at": "2014-12-04 17:03:07-06:00", "committer_id": 2282, "message": "WIP: add bank account, clean/sanitize json/hash keys", "repo_description": "Ruby client gem for Base Commerce ACH provider", "generate_at": "2014-12-04 17:03:07-06:00", "author_id": 2282, "repo_name": "midwire/basecomm_sdk"}, {"repo_id": 97720666, "repo_owner_id": 2282, "commit_at": "2017-07-19 08:47:57.000-05:00", "committer_id": 2282, "message": "Create CNAME", "repo_description": "GitHub Pages Repo", "generate_at": "2017-07-19 08:47:57.000-05:00", "author_id": 2282, "repo_name": "jcartwright/jcartwright.github.io"}, {"repo_id": 97720666, "repo_owner_id": 2282, "commit_at": "2017-07-22 10:34:17.000-05:00", "committer_id": 2282, "message": "Moving content from previous WP site\n\n- header/hero image\n- adjusting styles", "repo_description": "GitHub Pages Repo", "generate_at": "2017-07-22 10:34:17.000-05:00", "author_id": 2282, "repo_name": "jcartwright/jcartwright.github.io"}, {"repo_id": 97720666, "repo_owner_id": 2282, "commit_at": "2017-07-22 14:12:08.000-05:00", "committer_id": 2282, "message": "Wider content layout", "repo_description": "GitHub Pages Repo", "generate_at": "2017-07-22 14:12:08.000-05:00", "author_id": 2282, "repo_name": "jcartwright/jcartwright.github.io"}, {"repo_id": 97720666, "repo_owner_id": 2282, "commit_at": "2017-07-22 09:25:24.000-05:00", "committer_id": 2282, "message": "Setting up site with Slate theme (extracted)", "repo_description": "GitHub Pages Repo", "generate_at": "2017-07-22 09:24:59.000-05:00", "author_id": 2282, "repo_name": "jcartwright/jcartwright.github.io"}, {"repo_id": 97720666, "repo_owner_id": 2282, "commit_at": "2017-07-22 14:03:43.000-05:00", "committer_id": 2282, "message": "Adding home page content", "repo_description": "GitHub Pages Repo", "generate_at": "2017-07-22 14:03:43.000-05:00", "author_id": 2282, "repo_name": "jcartwright/jcartwright.github.io"}, {"repo_id": 65040922, "repo_owner_id": 2282, "commit_at": "2016-08-09 14:50:56-05:00", "committer_id": 2282, "message": "added mix.lock file", "repo_description": "Experimental Bot for Slack and HipChat integration with Rally (aka CA Agile Central) written in Elixir", "generate_at": "2016-08-09 14:50:56-05:00", "author_id": 2282, "repo_name": "jcartwright/rallybot"}, {"repo_id": 65040922, "repo_owner_id": 2282, "commit_at": "2016-08-05 15:47:14-05:00", "committer_id": 2282, "message": "setup basic slack bot", "repo_description": "Experimental Bot for Slack and HipChat integration with Rally (aka CA Agile Central) written in Elixir", "generate_at": "2016-08-05 15:47:14-05:00", "author_id": 2282, "repo_name": "jcartwright/rallybot"}, {"repo_id": 65040922, "repo_owner_id": 2282, "commit_at": "2016-08-05 13:36:07-05:00", "committer_id": 2282, "message": "Initial commit", "repo_description": "Experimental Bot for Slack and HipChat integration with Rally (aka CA Agile Central) written in Elixir", "generate_at": "2016-08-05 13:36:07-05:00", "author_id": 2282, "repo_name": "jcartwright/rallybot"}, {"repo_id": 94659087, "repo_owner_id": 2282, "commit_at": "2017-06-24 16:01:25.000-05:00", "committer_id": 19864447, "message": "Merge pull request #5 from jcartwright/update-readme\n\nUpdate README to explain my approach/assumptions", "repo_description": "Telnyx Code Challenge", "generate_at": "2017-06-24 16:01:25.000-05:00", "author_id": 2282, "repo_name": "jcartwright/telnyx"}, {"repo_id": 94659087, "repo_owner_id": 2282, "commit_at": "2017-06-24 16:00:00.000-05:00", "committer_id": null, "message": "Update README to explain my approach/assumptions", "repo_description": "Telnyx Code Challenge", "generate_at": "2017-06-24 14:52:36.000-05:00", "author_id": 2282, "repo_name": "jcartwright/telnyx"}, {"repo_id": 67099451, "repo_owner_id": 2282, "commit_at": "2016-09-01 22:12:49-05:00", "committer_id": 2282, "message": "Pt.2 Phoenix Framework project setup", "repo_description": "Phoenix/React Tutorial from https://blog.diacode.com/trello-clone-with-phoenix-and-react-pt-1", "generate_at": "2016-09-01 22:12:49-05:00", "author_id": 2282, "repo_name": "jcartwright/phoenix_trello"}, {"repo_id": 67099451, "repo_owner_id": 2282, "commit_at": "2016-09-01 00:02:03-05:00", "committer_id": 2282, "message": "initial setup & commit", "repo_description": "Phoenix/React Tutorial from https://blog.diacode.com/trello-clone-with-phoenix-and-react-pt-1", "generate_at": "2016-09-01 00:02:03-05:00", "author_id": 2282, "repo_name": "jcartwright/phoenix_trello"}, {"repo_id": 81043841, "repo_owner_id": 6734243, "commit_at": "2017-03-04 10:49:23-06:00", "committer_id": 19864447, "message": "Update README.md\n\nUpdate README to use db:schema:load", "repo_description": "A prototype of an ETL and API for Open Denton ", "generate_at": "2017-03-04 10:49:23-06:00", "author_id": 2282, "repo_name": "OpenDenton/denton_data"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-08 09:46:47-06:00", "committer_id": 2282, "message": "SettlementStatus helper method .settled?", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-08 09:46:47-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-07 17:01:38-06:00", "committer_id": 2282, "message": "Merge pull request #12 from midwire/fix/nested_response_arrays\n\nFix nested response arrays", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-07 17:01:38-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-07 16:51:22-06:00", "committer_id": 2282, "message": "Explain override for #from_json", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-07 16:51:22-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-07 16:49:19-06:00", "committer_id": 2282, "message": "Explain the override for #from_json", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-07 16:49:19-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-07 16:45:51-06:00", "committer_id": 2282, "message": "refactor to #deep_stringify_keys\n\n- fix nested array/hash parshing\n- extend specs to inspect attributes of nested objects", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-07 16:45:51-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-07 14:43:05-06:00", "committer_id": 2282, "message": "Improve regex match in specs", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-07 14:43:05-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-07 11:46:39-06:00", "committer_id": 2282, "message": "Merge pull request #11 from midwire/feature/response_helpers\n\nFeature - Response Helpers", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-07 11:46:39-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-07 11:23:08-06:00", "committer_id": 2282, "message": "Response Helper Methods\n\n- included response helpers in all relevant response classes\n- spec refactor to use approved, declined", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-07 11:23:08-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-06 18:15:40-06:00", "committer_id": 2282, "message": "Implement response helpers\n\n- approved?\n- retry?\n- declined?", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-06 18:15:40-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-06 13:54:58-06:00", "committer_id": 2282, "message": "Merge pull request #10 from midwire/feature/authorize_with_profile\n\nSupport authorization using a profile", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-06 13:54:58-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2015-01-06 13:52:17-06:00", "committer_id": 2282, "message": "Support authorization using a profile", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2015-01-06 13:52:17-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-12 09:36:39-06:00", "committer_id": 2282, "message": "simplecov works", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-12 09:36:39-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-12 09:32:36-06:00", "committer_id": 2282, "message": "test.env works", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-12 09:32:36-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-11 17:28:39-06:00", "committer_id": 2282, "message": "Merge pull request #9 from midwire/feature/nested-objects\n\nfeature/nested objects", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-11 17:28:39-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-11 17:27:37-06:00", "committer_id": 2282, "message": "Nested Objects\n\nimplement object wrappers for nested objects\nsettlement status\n- batch\n- transaction\ndeposit\n- ach_deposit\n- transaction\nfunding\n- funding_node\n- adjustment\n- transaction", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-11 17:27:37-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-11 16:24:07-06:00", "committer_id": 2282, "message": "Deposit w/Transactions\n\nwrap and inflate deposits into AchDeposit and Transactions", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-11 16:24:07-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-11 13:38:53-06:00", "committer_id": 2282, "message": "add trailing space to URL in env.test", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-11 13:38:53-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-11 13:37:59-06:00", "committer_id": 2282, "message": "Merge pull request #8 from midwire/feature/profile\n\nfeature/profile", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-11 13:37:59-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-11 13:33:47-06:00", "committer_id": 2282, "message": "Profiles\n\nbetter spec for profile delete request", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-11 13:33:47-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-11 13:31:36-06:00", "committer_id": 2282, "message": "Profiles\n\nimplemented profile request/response\nimplemented get_profile method\nimplemented create/update profile request/response\nimplemented create_profile and update_profile methods\nimplemented delete profile request/response\nimplemented delete_profile method", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-11 13:31:36-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-09 16:12:30-06:00", "committer_id": 2282, "message": "Merge pull request #7 from midwire/feature/deposit-and-funding\n\nFeature/deposit and funding", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-09 16:12:30-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-09 16:11:57-06:00", "committer_id": 2282, "message": "Deposit & Funding\n\nimplement deposit request/response\nimplement deposit_transaction method\nimplement funding request/response\nimplement funding_transaction method\nmisc\n- add vcr for majority of specs\n- update README", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-09 16:11:57-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-09 15:24:53-06:00", "committer_id": 2282, "message": "Deposit\n\nimplement deposit request/response\nimplement deposit_transaction method", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-09 15:24:53-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-09 13:05:57-06:00", "committer_id": 2282, "message": "Merge pull request #6 from midwire/feature/inquire-and-status\n\nInquire & Settlement Status", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-09 13:05:57-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-09 13:03:29-06:00", "committer_id": 2282, "message": "Inquire & Settlement Status\n\n* implement inquire request/response\n* implement inquire_transaction method\n* implement settlement status request/response\n* implement settlement_status_transaction method", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-09 13:03:29-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-09 11:03:00-06:00", "committer_id": 2282, "message": "add missing void spec", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-09 11:03:00-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-09 10:41:14-06:00", "committer_id": 2282, "message": "Merge pull request #5 from midwire/feature/refund\n\nRefund", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-09 10:41:14-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-09 10:39:34-06:00", "committer_id": 2282, "message": "Refund\n\n* implement refund request/response\n* implement refund_transaction method", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-09 10:39:34-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-09 09:31:26-06:00", "committer_id": 2282, "message": "Merge pull request #4 from midwire/feature/refund\n\nadd vcr support", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-09 09:31:26-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-09 09:29:54-06:00", "committer_id": 2282, "message": "add vcr support", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-09 09:29:54-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-08 16:42:25-06:00", "committer_id": 2282, "message": "Merge pull request #3 from midwire/feature/capture-and-void\n\nfeature/capture and void", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-08 16:42:25-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-08 16:40:30-06:00", "committer_id": 2282, "message": "Void\n\nadd support for void transaction", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-08 16:40:30-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-08 16:19:17-06:00", "committer_id": 2282, "message": "Capture and Void", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-08 16:19:17-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-08 16:18:21-06:00", "committer_id": 2282, "message": "Merge pull request #2 from midwire/feature/authorizations\n\nfeature/authorizations", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-08 16:18:21-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-08 16:15:14-06:00", "committer_id": 2282, "message": "CardconnectSdk Authorizations\n\n* implemented authorization request & response\n* implemented authorize_transaction", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-08 16:15:14-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-06 13:42:59-06:00", "committer_id": 2282, "message": "WIP add authorizations", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-06 13:42:59-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-06 11:41:07-06:00", "committer_id": 2282, "message": "remove url load from config in ping method, use #url attribute", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-06 11:41:07-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-05 17:17:25-06:00", "committer_id": 2282, "message": "spec connection/ping to sandbox service", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-05 17:17:25-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 27602549, "repo_owner_id": 125834, "commit_at": "2014-12-05 14:51:46-06:00", "committer_id": 2282, "message": "add .ruby-version, ignore vendor/ruby and .env's", "repo_description": "A Ruby SDK for Card Connect payment services", "generate_at": "2014-12-05 14:51:46-06:00", "author_id": 2282, "repo_name": "msegvich/cardconnect_sdk"}, {"repo_id": 69296519, "repo_owner_id": 2282, "commit_at": "2016-09-26 16:59:37-05:00", "committer_id": 2282, "message": "Add @docs for all public functions\n\n* Add documentation via @doc\n* Add doctests via iex> examples", "repo_description": null, "generate_at": "2016-09-26 16:59:37-05:00", "author_id": 2282, "repo_name": "jcartwright/elixir-yatzy"}, {"repo_id": 69296519, "repo_owner_id": 2282, "commit_at": "2016-09-26 16:30:39-05:00", "committer_id": 2282, "message": "Improve test coverage", "repo_description": null, "generate_at": "2016-09-26 16:30:39-05:00", "author_id": 2282, "repo_name": "jcartwright/elixir-yatzy"}, {"repo_id": 69296519, "repo_owner_id": 2282, "commit_at": "2016-09-26 16:21:59-05:00", "committer_id": 2282, "message": "Support chance/5 and chance/1 when is_list\n\n* provide consistent interface for chance function", "repo_description": null, "generate_at": "2016-09-26 16:21:59-05:00", "author_id": 2282, "repo_name": "jcartwright/elixir-yatzy"}, {"repo_id": 69296519, "repo_owner_id": 2282, "commit_at": "2016-09-26 16:18:05-05:00", "committer_id": 2282, "message": "Make test names consistent", "repo_description": null, "generate_at": "2016-09-26 16:18:05-05:00", "author_id": 2282, "repo_name": "jcartwright/elixir-yatzy"}, {"repo_id": 69296519, "repo_owner_id": 2282, "commit_at": "2016-09-26 16:16:43-05:00", "committer_id": 2282, "message": "Remove unused code\n\n* unused @initial_value module attribute\n* usused default acc value in Enum.reduce", "repo_description": null, "generate_at": "2016-09-26 16:16:43-05:00", "author_id": 2282, "repo_name": "jcartwright/elixir-yatzy"}, {"repo_id": 69296519, "repo_owner_id": 2282, "commit_at": "2016-09-26 16:13:08-05:00", "committer_id": 2282, "message": "Refactor ‘face value’ functions\n\n* private function score_the_dice\n* refactor functions to accept 5 die or list, and call score_the_dice internally", "repo_description": null, "generate_at": "2016-09-26 16:13:08-05:00", "author_id": 2282, "repo_name": "jcartwright/elixir-yatzy"}, {"repo_id": 69296519, "repo_owner_id": 2282, "commit_at": "2016-09-26 15:34:51-05:00", "committer_id": 2282, "message": "Refactor Yatzy.yatzy function\n\n* yatzy/5 calls yatzy/1 with guard\n* don’t use exceptions for flow control\n* use built-in Enum.all? method instead of Enum.reject |> Enum.count\n* use &(…) shorthand for anonymous function", "repo_description": null, "generate_at": "2016-09-26 15:34:51-05:00", "author_id": 2282, "repo_name": "jcartwright/elixir-yatzy"}, {"repo_id": 69296519, "repo_owner_id": 2282, "commit_at": "2016-09-26 14:39:37-05:00", "committer_id": 2282, "message": "Refactor Yatzy.chance to use built-in functions\n\n* Remove Math.sum function\n* Use Enum.reduce instead of redundant pipe operations", "repo_description": null, "generate_at": "2016-09-26 14:39:37-05:00", "author_id": 2282, "repo_name": "jcartwright/elixir-yatzy"}, {"repo_id": 69296519, "repo_owner_id": 2282, "commit_at": "2016-09-26 14:03:38-05:00", "committer_id": 2282, "message": "initial commit", "repo_description": null, "generate_at": "2016-09-26 14:03:38-05:00", "author_id": 2282, "repo_name": "jcartwright/elixir-yatzy"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-31 16:15:21-05:00", "committer_id": 2282, "message": "Cleanup Tests\n\n- remove unused import & aliases\n- shingle unused variables", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-31 16:15:21-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-31 16:07:53-05:00", "committer_id": 2282, "message": "Cleanup Examples\n\n- oraganize aliases\n- update Setup instructions", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-31 16:07:53-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-31 16:04:42-05:00", "committer_id": 2282, "message": "Implement RallyCollection find/6", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-31 16:04:42-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-26 17:51:30-05:00", "committer_id": 2282, "message": "Implement get_ref/1 on Rallyties Module\n\nIssue #21", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-26 17:51:30-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-26 17:10:35-05:00", "committer_id": 2282, "message": "Example: Create Defect", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-26 17:10:35-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-26 16:41:32-05:00", "committer_id": 2282, "message": "Support read with fetch", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-26 16:41:32-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-26 16:41:15-05:00", "committer_id": 2282, "message": "Support delete by _ref", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-26 16:41:15-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-21 16:41:59-05:00", "committer_id": 2282, "message": "Support :true/:false atoms as the fetch value", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-21 16:41:59-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-19 16:34:26-05:00", "committer_id": 2282, "message": "Example: Rename Tag\n\n* Tidying up the example", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-19 16:34:26-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-19 16:22:37-05:00", "committer_id": 2282, "message": "Examples\n\n* Rename Tag", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-19 16:22:37-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-19 16:22:11-05:00", "committer_id": 2282, "message": "Use @deleteable_types in RallyDelete", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-19 16:22:11-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-18 15:18:02-05:00", "committer_id": 2282, "message": "Update doctest to Elixir 1.3.4", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-18 15:18:02-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-17 14:42:23-05:00", "committer_id": 2282, "message": "Implement RallyCollection.remove", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-17 14:42:23-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-14 16:54:39-05:00", "committer_id": 2282, "message": "Remove @tag :wip", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-14 16:54:39-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-14 16:54:20-05:00", "committer_id": 2282, "message": "Implement RallyCollection read and add", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-14 16:54:20-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-12 17:16:44-05:00", "committer_id": 2282, "message": "Refactor Projects and Defect to use RallyQuery\n\n- simplify and DRY logic into RallyQuery functions", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-12 17:16:44-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-11 16:31:46-05:00", "committer_id": 2282, "message": "Implement Rally Defects#list", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-11 16:31:46-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-11 13:20:06-05:00", "committer_id": 2282, "message": "Implement Rally Delete", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-11 13:20:06-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-07 16:32:04-05:00", "committer_id": 2282, "message": "Refactor queryable & createable types to Rallyties", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-07 16:32:04-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-07 16:09:58-05:00", "committer_id": 2282, "message": "DRY some shared functions into Rallyties module", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-07 16:09:58-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-07 15:27:12-05:00", "committer_id": 2282, "message": "Scope new defects to test project", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-07 15:27:12-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-07 14:56:04-05:00", "committer_id": 2282, "message": "Test failed update with validation", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-07 14:56:04-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-07 14:13:59-05:00", "committer_id": 2282, "message": "Cleanup queryable_types", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-07 14:13:59-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-10-07 14:13:40-05:00", "committer_id": 2282, "message": "Implement Rally Update", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-10-07 14:13:40-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-23 17:03:33-05:00", "committer_id": 2282, "message": "Implement Create capabilities", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-23 17:03:33-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-20 16:57:22-05:00", "committer_id": 2282, "message": "Implement get_security_token", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-20 16:57:22-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-20 12:54:43-05:00", "committer_id": 2282, "message": "Cleanup of unused code, variables, and aliases", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-20 12:54:43-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-20 12:36:33-05:00", "committer_id": 2282, "message": "Support complex order options in queries", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-20 12:36:33-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-19 15:54:35-05:00", "committer_id": 2282, "message": "Rerun hex.build", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-19 15:54:35-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-19 15:53:53-05:00", "committer_id": 2282, "message": "Ignore dev config", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-19 15:53:53-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-19 15:24:52-05:00", "committer_id": 2282, "message": "Mask header in cassettes", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-19 15:24:52-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-19 14:51:31-05:00", "committer_id": 2282, "message": "Removing api key from tests", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-19 14:51:31-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-16 13:08:04-05:00", "committer_id": 2282, "message": "Support project scoping on queries", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-16 13:08:04-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-15 16:51:01-05:00", "committer_id": 2282, "message": "Support workspace option to scope queries", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-15 16:51:01-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-13 20:42:12-05:00", "committer_id": 2282, "message": "More implementation for Projects and Workspaces", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-13 20:42:12-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-12 19:26:25-05:00", "committer_id": 2282, "message": "Implement RallyQuery.find/4 support fetch", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-12 19:26:25-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-12 16:43:34-05:00", "committer_id": 2282, "message": "[wip] RallyQuery & QueryResult\n\nStart implementation of the general RallyQuery and QueryResult wrapper.\n\nRefactor RallyApi.get to return tuple {:ok, result} or {:error, reason}", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-12 16:43:34-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-02 16:55:19-05:00", "committer_id": 2282, "message": "Add Projects.find test for nested object query\n\n* query Projects for (Owner.LastName)\n* handle multiple results", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-02 16:55:19-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-02 16:53:54-05:00", "committer_id": 2282, "message": "Code comments and readability", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-02 16:53:54-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-02 16:22:53-05:00", "committer_id": 2282, "message": "Implementing Workspaces and Projects", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-02 16:22:53-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-02 16:20:13-05:00", "committer_id": 2282, "message": "README work-in-progress", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-02 16:20:13-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-09-02 16:19:49-05:00", "committer_id": 2282, "message": "Add exvcr for tests", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-09-02 16:19:49-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-08-31 14:58:52-05:00", "committer_id": 2282, "message": "RallyApi.Client implemented", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-08-31 14:58:52-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-08-31 11:44:52-05:00", "committer_id": 2282, "message": "Rally custom headers", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-08-31 11:44:52-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-08-30 21:29:37-05:00", "committer_id": 2282, "message": "Add @doc to authorization_header function", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-08-30 21:29:37-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-08-30 16:47:46-05:00", "committer_id": 2282, "message": "authorization headers", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-08-30 16:47:46-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 66963407, "repo_owner_id": 2282, "commit_at": "2016-08-30 12:43:46-05:00", "committer_id": 2282, "message": "initial commit", "repo_description": "A toolkit wrapping Rally's REST webservice for Elixir", "generate_at": "2016-08-30 12:43:46-05:00", "author_id": 2282, "repo_name": "jcartwright/rally_api"}, {"repo_id": 48458322, "repo_owner_id": 2282, "commit_at": "2016-01-04 11:55:47-06:00", "committer_id": 2282, "message": "adding authentication", "repo_description": "Programming Phoenix Tutorial", "generate_at": "2016-01-04 11:55:47-06:00", "author_id": 2282, "repo_name": "jcartwright/rumbl"}], "bio": null, "commits": 112, "company": "Ensight Enterprises, LLC", "following_list": [], "public_gists": 1, "name": "Jason Cartwright", "created_at": "2008-03-05 17:13:21", "email": "jason@ensightenterprises.com", "following": 0, "login": "jcartwright", "repo_list": [{"fork": true, "license": null, "has_wiki": true, "description": "A prototype of an ETL and API for Open Denton ", "language": "Ruby", "default_branch": "master", "created_at": "2017-03-04 16:01:44", "forks_count": 0, "updated_at": "2017-03-04 16:01:45", "pushed_at": "2017-03-04 22:13:32", "full_name": "jcartwright/denton_data", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 83905576, "size": 124}, {"fork": false, "license": null, "has_wiki": true, "description": null, "language": "Elixir", "default_branch": "master", "created_at": "2016-09-26 22:01:49", "forks_count": 0, "updated_at": "2016-09-26 22:02:18", "pushed_at": "2016-09-26 22:02:17", "full_name": "jcartwright/elixir-yatzy", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 69296519, "size": 5}, {"fork": false, "license": "Creative Commons Zero v1.0 Universal", "has_wiki": true, "description": "GitHub Pages Repo", "language": "CSS", "default_branch": "master", "created_at": "2017-07-19 13:41:02", "forks_count": 0, "updated_at": "2017-07-22 14:25:33", "pushed_at": "2017-07-22 19:12:14", "full_name": "jcartwright/jcartwright.github.io", "open_issues": 4, "stargazers_count": 0, "owner_id": 2282, "id": 97720666, "size": 231}, {"fork": false, "license": "MIT License", "has_wiki": true, "description": "Imports LIMU csv data into a database", "language": "Ruby", "default_branch": "master", "created_at": "2015-04-15 04:52:29", "forks_count": 0, "updated_at": "2015-04-15 04:53:00", "pushed_at": "2015-04-15 04:53:00", "full_name": "jcartwright/limu-importer", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 33973886, "size": 104}, {"fork": true, "license": "MIT License", "has_wiki": true, "description": "Ruby wrapper for the LinkedIn API", "language": "Ruby", "default_branch": "master", "created_at": "2013-09-14 17:06:33", "forks_count": 1, "updated_at": "2013-10-02 21:23:40", "pushed_at": "2013-10-02 21:23:38", "full_name": "jcartwright/linkedin", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 12832823, "size": 607}, {"fork": true, "license": "MIT License", "has_wiki": true, "description": "Monologue is a basic blogging engine. It is a Rails mountable engine you can mount in your already existing Rails app, or a in a new one! Enjoy.", "language": "Ruby", "default_branch": "master", "created_at": "2014-12-16 03:15:09", "forks_count": 0, "updated_at": "2014-12-16 03:15:09", "pushed_at": "2014-12-05 02:25:46", "full_name": "jcartwright/monologue", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 28068178, "size": 3933}, {"fork": false, "license": null, "has_wiki": true, "description": null, "language": "Ruby", "default_branch": "master", "created_at": "2017-07-03 15:01:10", "forks_count": 0, "updated_at": "2017-07-03 16:01:34", "pushed_at": "2017-07-03 16:30:46", "full_name": "jcartwright/pe-poker", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 96122718, "size": 30}, {"fork": false, "license": null, "has_wiki": true, "description": "Phoenix/React Tutorial from https://blog.diacode.com/trello-clone-with-phoenix-and-react-pt-1", "language": "JavaScript", "default_branch": "master", "created_at": "2016-09-01 05:00:50", "forks_count": 0, "updated_at": "2016-09-01 05:02:22", "pushed_at": "2016-09-02 03:12:56", "full_name": "jcartwright/phoenix_trello", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 67099451, "size": 13084}, {"fork": false, "license": null, "has_wiki": true, "description": "Experimental Bot for Slack and HipChat integration with Rally (aka CA Agile Central) written in Elixir", "language": "Elixir", "default_branch": "master", "created_at": "2016-08-05 18:36:06", "forks_count": 1, "updated_at": "2016-08-10 21:49:06", "pushed_at": "2016-08-09 19:51:01", "full_name": "jcartwright/rallybot", "open_issues": 7, "stargazers_count": 0, "owner_id": 2282, "id": 65040922, "size": 4}, {"fork": false, "license": null, "has_wiki": true, "description": "A toolkit wrapping Rally's REST webservice for Elixir", "language": "Elixir", "default_branch": "master", "created_at": "2016-08-30 17:38:32", "forks_count": 0, "updated_at": "2017-06-13 17:55:46", "pushed_at": "2016-11-20 00:52:22", "full_name": "jcartwright/rally_api", "open_issues": 11, "stargazers_count": 0, "owner_id": 2282, "id": 66963407, "size": 133}, {"fork": false, "license": null, "has_wiki": true, "description": "Programming Phoenix Tutorial", "language": "Elixir", "default_branch": "master", "created_at": "2015-12-22 23:09:02", "forks_count": 0, "updated_at": "2015-12-22 23:10:47", "pushed_at": "2016-01-05 17:45:44", "full_name": "jcartwright/rumbl", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 48458322, "size": 55}, {"fork": true, "license": null, "has_wiki": true, "description": "Slack clone built with Elixir, Phoenix, and React", "language": "JavaScript", "default_branch": "master", "created_at": "2017-07-05 20:42:14", "forks_count": 0, "updated_at": "2017-07-05 20:42:15", "pushed_at": "2016-11-21 01:44:59", "full_name": "jcartwright/sling", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 96359570, "size": 787}, {"fork": false, "license": null, "has_wiki": true, "description": "Telnyx Code Challenge", "language": "Elixir", "default_branch": "master", "created_at": "2017-06-18 01:52:28", "forks_count": 0, "updated_at": "2017-06-26 15:21:53", "pushed_at": "2017-06-24 21:02:02", "full_name": "jcartwright/telnyx", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 94659087, "size": 78}, {"fork": true, "license": "MIT License", "has_wiki": true, "description": "Simple Elixir wrapper for the GitHub API", "language": "Elixir", "default_branch": "master", "created_at": "2016-09-02 16:03:47", "forks_count": 0, "updated_at": "2016-09-02 16:03:48", "pushed_at": "2016-07-22 10:32:51", "full_name": "jcartwright/tentacat", "open_issues": 0, "stargazers_count": 0, "owner_id": 2282, "id": 67236505, "size": 373}, {"fork": true, "license": "MIT License", "has_wiki": true, "description": "Gem for slurping plain text stories into Trello", "language": "Ruby", "default_branch": "master", "created_at": "2015-04-10 16:57:14", "forks_count": 0, "updated_at": "2015-04-10 16:57:16", "pushed_at": "2015-04-17 14:22:15", "full_name": "jcartwright/trello_slurper-1", "open_issues": 1, "stargazers_count": 0, "owner_id": 2282, "id": 33739950, "size": 736}]}