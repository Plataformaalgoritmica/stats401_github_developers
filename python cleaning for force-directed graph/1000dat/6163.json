{"hirable": true, "public_repos": 40, "is_suspicious": false, "updated_at": "2018-04-09 17:41:18", "id": 6163, "blog": "", "followers": 62, "location": "Germany", "follower_list": [443, 1521, 2183, 2190, 2773, 4192, 4270, 7781, 8277, 9446, 13815, 14751, 17395, 19498, 19727, 26624, 27491, 31597, 32363, 34843, 37765, 46482, 59447, 67471, 153783, 168507, 185016, 273436, 663767, 1328233, 2398264, 690867, 492578, 1622093, 6269, 2190058, 236767, 1141, 3432, 83271, 2290484, 947001, 1406291, 13697, 196761, 796145, 5877145, 6673982, 5330316, 32268144, 307223, 10938976, 7304741, 33031, 1401179, 1031119, 353255, 5455156, 10776428, 1641895, 1121144, 659301], "type": "User", "commit_list": [{"repo_id": 11859481, "repo_owner_id": 4493, "commit_at": "2015-05-25 10:18:36+02:00", "committer_id": 6163, "message": "Correct \"normalisation\" of non-valued query parameters for signing", "repo_description": "A comprehensive Amazon Web Services SDK for Haskell.", "generate_at": "2015-05-25 10:18:36+02:00", "author_id": 6163, "repo_name": "brendanhay/amazonka"}, {"repo_id": 11859481, "repo_owner_id": 4493, "commit_at": "2015-04-16 12:01:59+02:00", "committer_id": 6163, "message": "Fix type change", "repo_description": "A comprehensive Amazon Web Services SDK for Haskell.", "generate_at": "2015-04-16 12:01:59+02:00", "author_id": 6163, "repo_name": "brendanhay/amazonka"}, {"repo_id": 11859481, "repo_owner_id": 4493, "commit_at": "2015-04-16 11:36:33+02:00", "committer_id": 6163, "message": "Make ErrorCode optional", "repo_description": "A comprehensive Amazon Web Services SDK for Haskell.", "generate_at": "2015-04-16 11:36:33+02:00", "author_id": 6163, "repo_name": "brendanhay/amazonka"}, {"repo_id": 11859481, "repo_owner_id": 4493, "commit_at": "2015-04-15 21:24:16+02:00", "committer_id": 6163, "message": "Add a sentence of documentation to `Base64`", "repo_description": "A comprehensive Amazon Web Services SDK for Haskell.", "generate_at": "2015-04-15 21:24:16+02:00", "author_id": 6163, "repo_name": "brendanhay/amazonka"}, {"repo_id": 11859481, "repo_owner_id": 4493, "commit_at": "2015-04-15 16:56:54+02:00", "committer_id": 6163, "message": "Expose Base64 constructor", "repo_description": "A comprehensive Amazon Web Services SDK for Haskell.", "generate_at": "2015-04-15 16:56:54+02:00", "author_id": 6163, "repo_name": "brendanhay/amazonka"}, {"repo_id": 1240329, "repo_owner_id": 5230873, "commit_at": "2013-08-24 10:02:05+02:00", "committer_id": 46149, "message": "Remove apparently dead `file!` method\n\n--\n\nFix automatic rebase.\n\nThe automatic rebase of 2a0327505200717148667d57c8690397853acc1b\nfailed and left garbage in the generator file.", "repo_description": "A sane Google Protocol Buffers library for Ruby", "generate_at": "2012-08-22 14:59:44+02:00", "author_id": 6163, "repo_name": "protobuf-ruby/beefcake"}, {"repo_id": 1240329, "repo_owner_id": 5230873, "commit_at": "2013-08-24 09:53:54+02:00", "committer_id": 46149, "message": "Add support for top-level enums", "repo_description": "A sane Google Protocol Buffers library for Ruby", "generate_at": "2012-08-22 14:59:20+02:00", "author_id": 6163, "repo_name": "protobuf-ruby/beefcake"}, {"repo_id": 1893270, "repo_owner_id": 6163, "commit_at": "2011-06-14 10:23:19+02:00", "committer_id": 6163, "message": "Version 0.1", "repo_description": "Haskell bindings to libhdfs", "generate_at": "2011-06-14 10:23:19+02:00", "author_id": 6163, "repo_name": "kim/hdfs-haskell"}, {"repo_id": 33675540, "repo_owner_id": 6163, "commit_at": "2015-05-10 23:40:19+02:00", "committer_id": 6163, "message": "Derive Foldable/Traversable for Array", "repo_description": "Haskell implementation of the Apache Kafka wire protocol", "generate_at": "2015-05-10 23:40:19+02:00", "author_id": 6163, "repo_name": "kim/kafka-protocol"}, {"repo_id": 33675540, "repo_owner_id": 6163, "commit_at": "2015-05-10 22:47:57+02:00", "committer_id": 6163, "message": "Mention missing module in exposed-modules", "repo_description": "Haskell implementation of the Apache Kafka wire protocol", "generate_at": "2015-05-10 22:47:57+02:00", "author_id": 6163, "repo_name": "kim/kafka-protocol"}, {"repo_id": 33675540, "repo_owner_id": 6163, "commit_at": "2015-05-10 16:35:39+02:00", "committer_id": 6163, "message": "Remove unused language pragma", "repo_description": "Haskell implementation of the Apache Kafka wire protocol", "generate_at": "2015-05-10 16:35:39+02:00", "author_id": 6163, "repo_name": "kim/kafka-protocol"}, {"repo_id": 33675540, "repo_owner_id": 6163, "commit_at": "2015-05-10 16:34:51+02:00", "committer_id": 6163, "message": "Make module exports appear in haddocks", "repo_description": "Haskell implementation of the Apache Kafka wire protocol", "generate_at": "2015-05-10 16:34:51+02:00", "author_id": 6163, "repo_name": "kim/kafka-protocol"}, {"repo_id": 33675540, "repo_owner_id": 6163, "commit_at": "2015-05-10 16:27:33+02:00", "committer_id": 6163, "message": "Scrap boilerplate by defining generic 'Req' and 'Resp' newtype wrappers", "repo_description": "Haskell implementation of the Apache Kafka wire protocol", "generate_at": "2015-05-10 16:08:14+02:00", "author_id": 6163, "repo_name": "kim/kafka-protocol"}, {"repo_id": 33675540, "repo_owner_id": 6163, "commit_at": "2015-04-23 14:28:51+02:00", "committer_id": 6163, "message": "Refine", "repo_description": "Haskell implementation of the Apache Kafka wire protocol", "generate_at": "2015-04-23 14:22:16+02:00", "author_id": 6163, "repo_name": "kim/kafka-protocol"}, {"repo_id": 33675540, "repo_owner_id": 6163, "commit_at": "2015-04-21 13:28:44+02:00", "committer_id": 6163, "message": "Redo using vinyl records (initial attempt)", "repo_description": "Haskell implementation of the Apache Kafka wire protocol", "generate_at": "2015-04-21 13:28:44+02:00", "author_id": 6163, "repo_name": "kim/kafka-protocol"}, {"repo_id": 33675540, "repo_owner_id": 6163, "commit_at": "2015-04-10 16:36:39+02:00", "committer_id": 6163, "message": "Lift API key and version to type-level, generalize Request/Response wrappers", "repo_description": "Haskell implementation of the Apache Kafka wire protocol", "generate_at": "2015-04-10 16:36:39+02:00", "author_id": 6163, "repo_name": "kim/kafka-protocol"}, {"repo_id": 33675540, "repo_owner_id": 6163, "commit_at": "2015-04-09 17:03:15+02:00", "committer_id": 6163, "message": "Initial", "repo_description": "Haskell implementation of the Apache Kafka wire protocol", "generate_at": "2015-04-09 17:03:15+02:00", "author_id": 6163, "repo_name": "kim/kafka-protocol"}, {"repo_id": 1950103, "repo_owner_id": 6163, "commit_at": "2011-11-27 15:48:32+01:00", "committer_id": 6163, "message": "Add `existsOrWatch`, `ifExists` and `takeOrWatch`; refactor a little using helper functions", "repo_description": "A little experiment: a zookept MVar", "generate_at": "2011-11-27 15:48:32+01:00", "author_id": 6163, "repo_name": "kim/zkvar"}, {"repo_id": 1950103, "repo_owner_id": 6163, "commit_at": "2011-11-26 13:58:34+01:00", "committer_id": 6163, "message": "Shorten function names, module should now be imported qualified", "repo_description": "A little experiment: a zookept MVar", "generate_at": "2011-11-26 13:58:34+01:00", "author_id": 6163, "repo_name": "kim/zkvar"}, {"repo_id": 1950103, "repo_owner_id": 6163, "commit_at": "2011-11-26 13:50:26+01:00", "committer_id": 6163, "message": "Add `watch` and `releaseZK`", "repo_description": "A little experiment: a zookept MVar", "generate_at": "2011-11-26 13:49:09+01:00", "author_id": 6163, "repo_name": "kim/zkvar"}, {"repo_id": 1950103, "repo_owner_id": 6163, "commit_at": "2011-11-24 09:06:52+01:00", "committer_id": 6163, "message": "Add children, exists, mkdir, mkdir_p, rm, rm_r", "repo_description": "A little experiment: a zookept MVar", "generate_at": "2011-11-24 09:06:52+01:00", "author_id": 6163, "repo_name": "kim/zkvar"}, {"repo_id": 1950103, "repo_owner_id": 6163, "commit_at": "2011-06-25 00:20:56+02:00", "committer_id": 6163, "message": "Add Readme", "repo_description": "A little experiment: a zookept MVar", "generate_at": "2011-06-25 00:20:56+02:00", "author_id": 6163, "repo_name": "kim/zkvar"}, {"repo_id": 1950103, "repo_owner_id": 6163, "commit_at": "2011-06-25 00:17:23+02:00", "committer_id": 6163, "message": "MVar-like interface", "repo_description": "A little experiment: a zookept MVar", "generate_at": "2011-06-25 00:17:23+02:00", "author_id": 6163, "repo_name": "kim/zkvar"}, {"repo_id": 1950103, "repo_owner_id": 6163, "commit_at": "2011-06-17 09:14:56+02:00", "committer_id": 6163, "message": "Hide zookeeper dependency", "repo_description": "A little experiment: a zookept MVar", "generate_at": "2011-06-17 09:14:56+02:00", "author_id": 6163, "repo_name": "kim/zkvar"}, {"repo_id": 1950103, "repo_owner_id": 6163, "commit_at": "2011-06-16 01:09:11+02:00", "committer_id": 6163, "message": "Version 0.1", "repo_description": "A little experiment: a zookept MVar", "generate_at": "2011-06-16 01:09:11+02:00", "author_id": 6163, "repo_name": "kim/zkvar"}, {"repo_id": 136009729, "repo_owner_id": 39906430, "commit_at": "2017-04-27 21:43:13.000+02:00", "committer_id": 6163, "message": "Import bonanza", "repo_description": null, "generate_at": "2017-04-27 21:25:34.000+02:00", "author_id": 6163, "repo_name": "wireappru/wire-server"}, {"repo_id": 136009729, "repo_owner_id": 39906430, "commit_at": "2017-04-06 16:17:35.000+02:00", "committer_id": 6163, "message": "Remove obsolete types-common-journal", "repo_description": null, "generate_at": "2017-04-06 16:17:35.000+02:00", "author_id": 6163, "repo_name": "wireappru/wire-server"}, {"repo_id": 1694487, "repo_owner_id": 23374, "commit_at": "2013-11-13 10:00:00+01:00", "committer_id": 6163, "message": "Use mkWeakIORef for finalization of `LocalPool`s\n\nThis is essentially rebasing #14 on top of #15, as the former had the same\n\"early finalizer\" issue.", "repo_description": "A high-performance striped resource pooling implementation for Haskell", "generate_at": "2013-11-13 10:00:00+01:00", "author_id": 6163, "repo_name": "bos/pool"}, {"repo_id": 1694487, "repo_owner_id": 23374, "commit_at": "2013-11-12 19:08:50+01:00", "committer_id": 6163, "message": "Prevent the finalizer to run early", "repo_description": "A high-performance striped resource pooling implementation for Haskell", "generate_at": "2013-11-12 19:08:50+01:00", "author_id": 6163, "repo_name": "bos/pool"}, {"repo_id": 1694487, "repo_owner_id": 23374, "commit_at": "2013-01-27 19:12:55+01:00", "committer_id": 6163, "message": "Implement tryTakeResource, tryWithResource", "repo_description": "A high-performance striped resource pooling implementation for Haskell", "generate_at": "2013-01-27 19:10:35+01:00", "author_id": 6163, "repo_name": "bos/pool"}, {"repo_id": 81935044, "repo_owner_id": 16047324, "commit_at": "2017-04-27 21:43:13+02:00", "committer_id": 6163, "message": "Import bonanza", "repo_description": "🇪🇺 Wire back-end services", "generate_at": "2017-04-27 21:25:34+02:00", "author_id": 6163, "repo_name": "wireapp/wire-server"}, {"repo_id": 81935044, "repo_owner_id": 16047324, "commit_at": "2017-04-06 16:17:35+02:00", "committer_id": 6163, "message": "Remove obsolete types-common-journal", "repo_description": "🇪🇺 Wire back-end services", "generate_at": "2017-04-06 16:17:35+02:00", "author_id": 6163, "repo_name": "wireapp/wire-server"}, {"repo_id": 81935044, "repo_owner_id": 16047324, "commit_at": "2017-08-08 23:13:27.000+02:00", "committer_id": 1105323, "message": "Provide `GET /calls/config`", "repo_description": "🇪🇺 Wire back-end services", "generate_at": "2017-04-26 14:20:22.000+02:00", "author_id": 6163, "repo_name": "wireapp/wire-server"}, {"repo_id": 6477452, "repo_owner_id": 4493, "commit_at": "2012-12-21 18:05:59+01:00", "committer_id": 6163, "message": "network-conduit patch got accepted, allow newer versions", "repo_description": "Concurrent and efficient implementation of statsd in Haskell", "generate_at": "2012-12-21 18:05:59+01:00", "author_id": 6163, "repo_name": "brendanhay/numbersd"}, {"repo_id": 6477452, "repo_owner_id": 4493, "commit_at": "2012-12-14 15:43:52+01:00", "committer_id": 6163, "message": "Add network-conduit constraint and aeson to test-suite", "repo_description": "Concurrent and efficient implementation of statsd in Haskell", "generate_at": "2012-12-14 15:43:52+01:00", "author_id": 6163, "repo_name": "brendanhay/numbersd"}, {"repo_id": 6477452, "repo_owner_id": 4493, "commit_at": "2012-12-14 15:31:35+01:00", "committer_id": 6163, "message": "Remove non-existent assets from 'data-files' section", "repo_description": "Concurrent and efficient implementation of statsd in Haskell", "generate_at": "2012-12-14 15:31:35+01:00", "author_id": 6163, "repo_name": "brendanhay/numbersd"}, {"repo_id": 6477452, "repo_owner_id": 4493, "commit_at": "2012-12-14 15:31:02+01:00", "committer_id": 6163, "message": "Constrain network-conduit to < 0.6.2\n\nv0.6.2 illegally attempts to set the NoDelay sockopt on UDP sockets", "repo_description": "Concurrent and efficient implementation of statsd in Haskell", "generate_at": "2012-12-14 15:31:02+01:00", "author_id": 6163, "repo_name": "brendanhay/numbersd"}, {"repo_id": 6477452, "repo_owner_id": 4493, "commit_at": "2012-12-14 15:29:22+01:00", "committer_id": 6163, "message": "Fix type signature", "repo_description": "Concurrent and efficient implementation of statsd in Haskell", "generate_at": "2012-12-14 15:29:22+01:00", "author_id": 6163, "repo_name": "brendanhay/numbersd"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-08-17 14:37:17+02:00", "committer_id": 6163, "message": "Add type synonym for EtcdT transformer", "repo_description": "Haskell etcd Client", "generate_at": "2016-08-17 14:37:17+02:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-08-17 14:11:10+02:00", "committer_id": 6163, "message": "More lenient HasEnv", "repo_description": "Haskell etcd Client", "generate_at": "2016-08-17 14:11:10+02:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-08-17 13:46:27+02:00", "committer_id": 6163, "message": "Allow any environment as long as it satisfies HasEnv", "repo_description": "Haskell etcd Client", "generate_at": "2016-08-17 13:46:27+02:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-08-12 15:02:40+02:00", "committer_id": 6163, "message": "Wrapping it up", "repo_description": "Haskell etcd Client", "generate_at": "2016-08-12 15:02:40+02:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-08-11 16:57:30+02:00", "committer_id": 6163, "message": "Only the happy case is captured in the types...", "repo_description": "Haskell etcd Client", "generate_at": "2016-08-11 16:57:30+02:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-08-11 15:40:09+02:00", "committer_id": 6163, "message": "More re-exports", "repo_description": "Haskell etcd Client", "generate_at": "2016-08-11 15:40:09+02:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-08-11 15:37:17+02:00", "committer_id": 6163, "message": "Add convenient re-exports", "repo_description": "Haskell etcd Client", "generate_at": "2016-08-11 15:37:17+02:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-08-11 15:37:06+02:00", "committer_id": 6163, "message": "Maybe Bool, oh boy", "repo_description": "Haskell etcd Client", "generate_at": "2016-08-11 15:37:06+02:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-08-11 12:19:55+02:00", "committer_id": 6163, "message": "Redo as basic `servant-client`", "repo_description": "Haskell etcd Client", "generate_at": "2016-08-11 12:19:55+02:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-13 22:17:27+01:00", "committer_id": 6163, "message": "Split into sum of functors again + make EtcdT a trivial type alias", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-13 22:17:27+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-13 14:38:38+01:00", "committer_id": 6163, "message": "Getting closer", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-13 14:38:38+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-10 14:10:25+01:00", "committer_id": 6163, "message": "Precisify synopsis", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-10 14:10:25+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-10 14:10:08+01:00", "committer_id": 6163, "message": "Cleanup interpreter", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-10 14:10:08+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-08 15:34:37+01:00", "committer_id": 6163, "message": "Juggle-Wuggle", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-08 15:34:37+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-02 10:23:56+01:00", "committer_id": 6163, "message": "Add KeyExists (ie. HEAD) operation", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-02 10:23:56+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-02 09:48:15+01:00", "committer_id": 6163, "message": "Throw ClientError instead of error", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-02 09:48:15+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-01 22:26:47+01:00", "committer_id": 6163, "message": "Remove redundant `newDirectory`", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-01 22:26:47+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-01 17:09:40+01:00", "committer_id": 6163, "message": "We don't actually need to create a directory for a sequential key\n\nHowever, if the node exists, but is not a directory, an error will be returned.", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-01 17:09:40+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-01 16:47:05+01:00", "committer_id": 6163, "message": "Consolidate exception types", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-01 16:47:05+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-01 14:14:12+01:00", "committer_id": 6163, "message": "Require action to be FreeT EtcdF IO a\n\nThis allows to run the combinators without \"restarting\" the client monad. IO\nactions can be lifted using \"lift\"", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-01 14:14:12+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-01 14:13:54+01:00", "committer_id": 6163, "message": "Add Util module", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-01 14:13:54+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-03-01 14:13:34+01:00", "committer_id": 6163, "message": "Export MonadClient", "repo_description": "Haskell etcd Client", "generate_at": "2016-03-01 14:13:34+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-29 15:54:37+01:00", "committer_id": 6163, "message": "First crude version of recipes", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-29 15:54:37+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-29 15:54:07+01:00", "committer_id": 6163, "message": "Make error matchers actual `Prism'`s", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-29 15:54:07+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-29 15:53:52+01:00", "committer_id": 6163, "message": "Keep it primitive", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-29 15:53:52+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-29 15:53:30+01:00", "committer_id": 6163, "message": "Log the current thread id", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-29 15:53:30+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-25 17:26:59+01:00", "committer_id": 6163, "message": "Remove MonadBaseControl, reverse transformer stack, add ephemeral node", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-25 17:26:59+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-25 17:26:24+01:00", "committer_id": 6163, "message": "Ignore tag", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-25 17:26:24+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-24 10:23:31+01:00", "committer_id": 6163, "message": "`MonadClient` + mtl shenanigans", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-24 10:23:31+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-23 16:03:03+01:00", "committer_id": 6163, "message": "Okay, scrap that", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-23 16:03:03+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-19 10:04:54+01:00", "committer_id": 6163, "message": "Add prisms for known errors to the keys API", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-19 10:04:54+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-18 16:38:19+01:00", "committer_id": 6163, "message": "Introduce `Post` primitive, `createInOrder` operation + `get'` with `GetOptions`", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-18 16:38:19+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-18 11:30:48+01:00", "committer_id": 6163, "message": "Treat `ErrorResponse` as a value (not an exception)", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-18 11:30:48+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-18 11:30:11+01:00", "committer_id": 6163, "message": "Make deconstructing `Response`s somewhat nicer", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-18 11:30:11+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-18 09:29:08+01:00", "committer_id": 6163, "message": "Rename repo", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-18 09:29:08+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 51933695, "repo_owner_id": 6163, "commit_at": "2016-02-17 16:41:16+01:00", "committer_id": 6163, "message": "Initial", "repo_description": "Haskell etcd Client", "generate_at": "2016-02-17 16:41:16+01:00", "author_id": 6163, "repo_name": "kim/etcdpp"}, {"repo_id": 2468636, "repo_owner_id": 95501, "commit_at": "2013-10-28 17:56:09+01:00", "committer_id": 6163, "message": "Use MonadSnap constraint", "repo_description": "Snap integration for the websockets library", "generate_at": "2013-10-28 17:56:09+01:00", "author_id": 6163, "repo_name": "jaspervdj/websockets-snap"}, {"repo_id": 2956839, "repo_owner_id": 49415, "commit_at": "2012-12-14 16:43:01+01:00", "committer_id": 6163, "message": "Don't attempt to disable Nagle's on UDP sockets\n\nsnoyberg/conduit@262fcdc introduced setting TCP_NODELAY without checking the\nsocket's type. This results in a runtime error if we've got a UDP socket.", "repo_description": "A streaming data library", "generate_at": "2012-12-14 16:43:01+01:00", "author_id": 6163, "repo_name": "snoyberg/conduit"}, {"repo_id": 1405839, "repo_owner_id": 6163, "commit_at": "2011-03-31 21:56:43+02:00", "committer_id": 6163, "message": "Move stuff around & bump version", "repo_description": "Haskell client for https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL", "generate_at": "2011-03-31 21:56:43+02:00", "author_id": 6163, "repo_name": "kim/handlersocket"}, {"repo_id": 1405839, "repo_owner_id": 6163, "commit_at": "2011-03-31 08:10:27+02:00", "committer_id": 6163, "message": "Let's call it a rewrite", "repo_description": "Haskell client for https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL", "generate_at": "2011-03-31 07:29:34+02:00", "author_id": 6163, "repo_name": "kim/handlersocket"}, {"repo_id": 1405839, "repo_owner_id": 6163, "commit_at": "2011-03-05 15:20:09+01:00", "committer_id": 6163, "message": "Add composite parameter Query", "repo_description": "Haskell client for https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL", "generate_at": "2011-03-05 15:16:48+01:00", "author_id": 6163, "repo_name": "kim/handlersocket"}, {"repo_id": 1405839, "repo_owner_id": 6163, "commit_at": "2011-02-24 09:03:22+01:00", "committer_id": 6163, "message": "Initial", "repo_description": "Haskell client for https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL", "generate_at": "2011-02-24 09:03:22+01:00", "author_id": 6163, "repo_name": "kim/handlersocket"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-09-04 00:44:34+02:00", "committer_id": 6163, "message": ".cabal refinements", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-09-04 00:44:34+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-09-04 00:34:33+02:00", "committer_id": 6163, "message": "Call it 0.1.", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-09-04 00:34:33+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-09-04 00:33:11+02:00", "committer_id": 6163, "message": "Rename Error to DecodeError", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-09-04 00:33:11+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-09-04 00:31:19+02:00", "committer_id": 6163, "message": "Export the Error type alias", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-09-04 00:31:19+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-09-04 00:27:42+02:00", "committer_id": 6163, "message": "Proper version constraints", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-09-04 00:27:42+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-09-04 00:20:01+02:00", "committer_id": 6163, "message": "Fix apt commands, export ze typen", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-09-04 00:20:01+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-09-04 00:10:30+02:00", "committer_id": 6163, "message": "Install libsnappy on travis", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-09-04 00:10:30+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-09-04 00:05:43+02:00", "committer_id": 6163, "message": "Add travis config", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-09-04 00:05:43+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-09-04 00:02:51+02:00", "committer_id": 6163, "message": "Prepare for public release", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-09-04 00:02:51+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-08-26 01:03:22+02:00", "committer_id": 6163, "message": "Drop folds and just provide some convenience encode/decode functions", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-08-26 01:03:22+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-08-21 23:10:36+02:00", "committer_id": 6163, "message": "Remove auxiliary lookup tables for crc32c\n\nSeems like the byte alignment gymnastics found in the LevelDB code is not\nnecessary outside C++.", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-08-21 23:10:36+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-08-21 22:58:16+02:00", "committer_id": 6163, "message": "Remove runtime errors", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-08-21 22:58:16+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-08-21 20:28:17+02:00", "committer_id": 6163, "message": "Add encodeChunks, improve decodeChunks", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-08-21 20:28:17+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-08-20 23:07:59+02:00", "committer_id": 6163, "message": "Add TODO", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-08-20 23:07:59+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2013-08-20 23:02:28+02:00", "committer_id": 6163, "message": "Initial naive implementation", "repo_description": "Snappy framing format for Haskell", "generate_at": "2013-08-20 23:02:28+02:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2017-02-07 16:35:54+01:00", "committer_id": 6163, "message": "Release v0.1.1", "repo_description": "Snappy framing format for Haskell", "generate_at": "2017-02-07 16:35:54+01:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2017-02-07 16:33:37+01:00", "committer_id": 6163, "message": "Adjust ghc options", "repo_description": "Snappy framing format for Haskell", "generate_at": "2017-02-07 16:33:37+01:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2017-02-07 16:32:34+01:00", "committer_id": 6163, "message": "Expose `Data.Digest.CRC32C` module\n\nAs requested in #1", "repo_description": "Snappy framing format for Haskell", "generate_at": "2017-02-07 16:31:24+01:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2017-02-07 16:32:33+01:00", "committer_id": 6163, "message": "Update license field in .cabal", "repo_description": "Snappy framing format for Haskell", "generate_at": "2017-02-07 16:30:42+01:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2017-02-07 16:32:33+01:00", "committer_id": 6163, "message": "Style", "repo_description": "Snappy framing format for Haskell", "generate_at": "2017-02-07 16:30:01+01:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2017-02-07 16:32:28+01:00", "committer_id": 6163, "message": "Add stack.yamls for GHC 7.10 and 8.0", "repo_description": "Snappy framing format for Haskell", "generate_at": "2017-02-07 16:29:12+01:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 12254165, "repo_owner_id": 6163, "commit_at": "2018-02-14 22:58:59.000+01:00", "committer_id": 19864447, "message": "Merge pull request #2 from herberteuler/master\n\nFix module description", "repo_description": "Snappy framing format for Haskell", "generate_at": "2018-02-14 22:58:59.000+01:00", "author_id": 6163, "repo_name": "kim/snappy-framing"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2013-03-10 22:34:54+01:00", "committer_id": 6163, "message": "Add travis conf", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2013-03-10 22:34:54+01:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2013-02-24 05:20:59+01:00", "committer_id": 6163, "message": "Non-blocking host connection pools, errors, formatting", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2013-02-24 05:20:59+01:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2013-01-27 22:57:05+01:00", "committer_id": 6163, "message": "Add non-blocking 'tryTakeResource', 'tryWithResource'", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2013-01-27 22:57:05+01:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2013-01-27 16:23:06+01:00", "committer_id": 6163, "message": "Add some notes", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2013-01-27 16:23:06+01:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-22 23:21:12+02:00", "committer_id": 6163, "message": "Replace (Long, TimeUnit) by Duration data type", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-22 23:20:17+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-22 22:50:55+02:00", "committer_id": 6163, "message": "Move Host type alias to util", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-22 22:50:55+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-22 22:17:35+02:00", "committer_id": 6163, "message": "Push returned resources to the head of the pool entries queue\n\nThis is to give idle resources a chance to be closed, and actually reduce\nresource consumption.", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-22 22:17:35+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-22 20:08:40+02:00", "committer_id": 6163, "message": "Provide a latency-aware hostconnpool implementation\n\nSome refactoring necessary along the way", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-22 20:02:59+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-21 20:12:51+02:00", "committer_id": 6163, "message": "Fix cumulative latency on flatMapping over Result", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-21 20:12:51+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-20 00:07:49+02:00", "committer_id": 6163, "message": "Move responsibility to choose host selection strategy to user", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-20 00:07:49+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-19 23:42:08+02:00", "committer_id": 6163, "message": "Add some connection / resource pool stats", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-19 23:35:46+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-19 23:12:28+02:00", "committer_id": 6163, "message": "Make callable helper implicit", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-19 23:12:28+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-19 23:09:12+02:00", "committer_id": 6163, "message": "Abstract over the ExecutorService / Future implementation\n\nUseful for Guava users / non-blocking use cases", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-19 23:09:12+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-19 22:07:12+02:00", "committer_id": 6163, "message": "Add a round-robin pool selection strategy", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-19 22:07:12+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-19 21:47:33+02:00", "committer_id": 6163, "message": "Repackage, such that thrift IO is selected by-import", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-19 21:47:33+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-16 23:58:46+02:00", "committer_id": 6163, "message": "Add latency tracing to Result", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-16 23:58:46+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-16 14:47:14+02:00", "committer_id": 6163, "message": "Astyanax is now Bob\n\nBecause, we need to end the bloodshed that is greek mythology", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-16 14:47:14+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-16 14:36:31+02:00", "committer_id": 6163, "message": "A couple of refactorings\n\n* the ExecutorService now needs to be specified by the user\n* maintain per-host connection pools, where the application can decide from\n  which host pool to aquire a connection", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-16 14:36:31+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-08-12 22:15:42+02:00", "committer_id": 6163, "message": "Implement max resource boundary", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-08-12 22:15:42+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-13 23:13:43+02:00", "committer_id": 6163, "message": "Remove unused imports", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-13 23:13:43+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-04 23:00:20+02:00", "committer_id": 6163, "message": "Support mass-import again", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-04 23:00:20+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-04 22:15:43+02:00", "committer_id": 6163, "message": "Parametrize config with client type, add top level state release function", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-04 22:15:43+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-04 22:14:24+02:00", "committer_id": 6163, "message": "Disable -Xlog-implicits, enable -Xlint", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-04 22:14:24+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-04 09:45:55+02:00", "committer_id": 6163, "message": "Support multiple selector threads + get rid of leaky Stream.continually", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-04 09:45:55+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-04 09:45:25+02:00", "committer_id": 6163, "message": "Adjust order of type parameters", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-04 09:45:25+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-04 00:39:49+02:00", "committer_id": 6163, "message": "Fix future evaluation + async exception handling", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-04 00:39:49+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-04 00:21:08+02:00", "committer_id": 6163, "message": "Make client a type class", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-04 00:18:42+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-02 08:31:23+02:00", "committer_id": 6163, "message": "Define Task[A] = StateT[Promise, Client, A]", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-01 20:15:10+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-01 15:50:33+02:00", "committer_id": 6163, "message": "Formatting", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-01 15:50:33+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-01 15:49:58+02:00", "committer_id": 6163, "message": "Move sync'ed promise to api internals", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-01 15:49:58+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-01 15:40:29+02:00", "committer_id": 6163, "message": "Alias Promise[A] = State[Client, Result[A]]", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-01 15:40:29+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-01 15:07:04+02:00", "committer_id": 6163, "message": "Flip tuple of Promise.apply; towards making Promise State[Client, Result[A]]", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-01 15:07:04+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-01 15:02:13+02:00", "committer_id": 6163, "message": "Add an efficient byte string codec", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-01 15:02:13+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-07-01 15:01:54+02:00", "committer_id": 6163, "message": "Add a timed barrier task", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-07-01 15:01:54+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-06-28 01:11:31+02:00", "committer_id": 6163, "message": "Rework to get rowkey, column name / value conversions right", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-06-28 01:11:31+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-06-25 15:52:40+02:00", "committer_id": 6163, "message": "Type-alias Function1", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-06-25 15:52:40+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-06-25 15:43:51+02:00", "committer_id": 6163, "message": "Don't block on the Future, that's the users' responsibility", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-06-25 15:43:51+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-06-25 12:39:50+02:00", "committer_id": 6163, "message": "Provide a means to not force users into monadic style", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-06-25 12:35:53+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-06-25 11:22:54+02:00", "committer_id": 6163, "message": "Apply pooling and introduce a cassandra monad (which is just a state monad)", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-06-25 11:22:54+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-06-25 11:21:07+02:00", "committer_id": 6163, "message": "Add a generic pool (to be used with cassandra clients, ie. connections)\n\nModeled after bos' resource-pool package", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-06-25 11:21:07+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-06-12 11:17:42+02:00", "committer_id": 6163, "message": "Fix alternate case class constructors, provide side-effect example", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-06-12 11:17:42+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-05-23 00:38:18+02:00", "committer_id": 6163, "message": "Add ConsistencyLevel and Compression conversions", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-05-23 00:38:18+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-05-22 23:54:48+02:00", "committer_id": 6163, "message": "Get rather than take SyncVar", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-05-22 23:54:48+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-05-22 23:54:12+02:00", "committer_id": 6163, "message": "Add Task constructor for arbitrary effects", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-05-22 23:53:50+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-05-22 23:53:29+02:00", "committer_id": 6163, "message": "Add standard implicits", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-05-22 23:53:29+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-05-22 23:53:08+02:00", "committer_id": 6163, "message": "Add defaults", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-05-22 23:53:08+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-05-22 01:09:53+02:00", "committer_id": 6163, "message": "Add a bunch of boilerplate to hide the awful thrift types", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-05-22 01:09:53+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-05-20 20:53:07+02:00", "committer_id": 6163, "message": "Provide wrappers for all API calls", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-05-20 20:53:07+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-05-19 17:11:45+02:00", "committer_id": 6163, "message": "Explode modules", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-05-19 17:11:45+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 4893772, "repo_owner_id": 6163, "commit_at": "2012-05-19 16:34:01+02:00", "committer_id": 6163, "message": "Initial design", "repo_description": "An Asynchronous Cassandra Client for Scala", "generate_at": "2012-05-19 16:34:01+02:00", "author_id": 6163, "repo_name": "kim/bob"}, {"repo_id": 20579679, "repo_owner_id": 5462766, "commit_at": "2011-07-01 09:03:57+02:00", "committer_id": 6163, "message": "Experiment with system CAS operations to make ir_compare_and_set really atomic", "repo_description": "[DEPRECATED] Atomic references for Ruby (merged with concurrent-ruby)", "generate_at": "2011-07-01 09:03:57+02:00", "author_id": 6163, "repo_name": "ruby-concurrency/atomic"}, {"repo_id": 20579679, "repo_owner_id": 5462766, "commit_at": "2011-07-01 09:03:06+02:00", "committer_id": 6163, "message": "Fix rb_mark => rb_gc_mark", "repo_description": "[DEPRECATED] Atomic references for Ruby (merged with concurrent-ruby)", "generate_at": "2011-07-01 09:03:06+02:00", "author_id": 6163, "repo_name": "ruby-concurrency/atomic"}, {"repo_id": 20579679, "repo_owner_id": 5462766, "commit_at": "2011-07-01 09:01:11+02:00", "committer_id": 6163, "message": "Corrections to gemspec", "repo_description": "[DEPRECATED] Atomic references for Ruby (merged with concurrent-ruby)", "generate_at": "2011-07-01 09:01:11+02:00", "author_id": 6163, "repo_name": "ruby-concurrency/atomic"}, {"repo_id": 47832934, "repo_owner_id": 16047324, "commit_at": "2016-06-28 16:31:51+02:00", "committer_id": 6163, "message": "Configure vendored libsodium with --disable-soname-versions", "repo_description": "JNI bindings for cryptobox with support for cross-compilation to Android.", "generate_at": "2016-06-28 16:31:51+02:00", "author_id": 6163, "repo_name": "wireapp/cryptobox-jni"}, {"repo_id": 47832934, "repo_owner_id": 16047324, "commit_at": "2016-06-23 10:41:42+02:00", "committer_id": 6163, "message": "Ensure vendored libsodium is found via pkg-config", "repo_description": "JNI bindings for cryptobox with support for cross-compilation to Android.", "generate_at": "2016-06-23 10:41:42+02:00", "author_id": 6163, "repo_name": "wireapp/cryptobox-jni"}, {"repo_id": 123320519, "repo_owner_id": 32598172, "commit_at": "2013-09-28 11:42:13.000+02:00", "committer_id": 6163, "message": "Fix for bad PR #79", "repo_description": null, "generate_at": "2013-09-28 11:42:13.000+02:00", "author_id": 6163, "repo_name": "sapi69/cabal-server"}, {"repo_id": 708726, "repo_owner_id": 10135, "commit_at": "2011-07-01 09:03:57+02:00", "committer_id": 6163, "message": "Experiment with system CAS operations to make ir_compare_and_set really atomic", "repo_description": "Atomic reference implementation for Ruby", "generate_at": "2011-07-01 09:03:57+02:00", "author_id": 6163, "repo_name": "headius/ruby-atomic"}, {"repo_id": 708726, "repo_owner_id": 10135, "commit_at": "2011-07-01 09:03:06+02:00", "committer_id": 6163, "message": "Fix rb_mark => rb_gc_mark", "repo_description": "Atomic reference implementation for Ruby", "generate_at": "2011-07-01 09:03:06+02:00", "author_id": 6163, "repo_name": "headius/ruby-atomic"}, {"repo_id": 708726, "repo_owner_id": 10135, "commit_at": "2011-07-01 09:01:11+02:00", "committer_id": 6163, "message": "Corrections to gemspec", "repo_description": "Atomic reference implementation for Ruby", "generate_at": "2011-07-01 09:01:11+02:00", "author_id": 6163, "repo_name": "headius/ruby-atomic"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-30 23:58:53.000+02:00", "committer_id": 6163, "message": "Add WAI middleware", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-30 23:58:53.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-30 13:09:28.000+02:00", "committer_id": 6163, "message": "Split packages", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-30 13:09:28.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-04 22:27:02.000+02:00", "committer_id": 6163, "message": "ಠ_ಠ", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-04 22:27:02.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-27 22:57:37.000+02:00", "committer_id": 6163, "message": "Scrap backpack", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-27 22:57:37.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-27 22:58:55.000+02:00", "committer_id": 6163, "message": "Remove signatures", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-27 22:58:55.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-27 22:58:11.000+02:00", "committer_id": 6163, "message": "Scrap backpack from README, too", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-27 22:58:11.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-27 23:02:49.000+02:00", "committer_id": 6163, "message": "Delete old stuff", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-27 23:02:49.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-28 09:50:10.000+02:00", "committer_id": 6163, "message": "Remove `Binary` carrier for now\n\nIt's unclear how this intended to be used - Jaeger has some custom\nencoding here, but that would imply all hops of a trace agree on that.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-28 09:50:10.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-28 09:49:13.000+02:00", "committer_id": 6163, "message": "Make generic toJSON for Endpoint line up with hand-written toEncoding", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-28 09:49:13.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-28 10:23:18.000+02:00", "committer_id": 6163, "message": "Make ToJSON instance for Tag, as encoding is canonical", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-28 10:23:18.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-28 09:57:43.000+02:00", "committer_id": 6163, "message": "Drop serialise/cbor(g)", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-28 09:57:43.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-28 13:04:59.000+02:00", "committer_id": 6163, "message": "Sketch out sampling", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-28 13:04:59.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-28 10:53:12.000+02:00", "committer_id": 6163, "message": "Remove newtyped prng, not necessary any more", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-28 10:53:12.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-05 13:05:52.000+01:00", "committer_id": 6163, "message": "Export ctoResource lens", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-05 13:05:52.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-05 10:24:54.000+01:00", "committer_id": 19864447, "message": "Merge pull request #8 from kim/cloudtrace\n\nAdd Google CloudTrace (aka Stackdriver Trace)", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-05 10:24:54.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-04 15:19:43.000+01:00", "committer_id": 6163, "message": "Report span logs via gogol-logging", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-04 15:19:43.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-04 11:12:26.000+01:00", "committer_id": 6163, "message": "Work around quoted 'utcTime' aeson encoder", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-04 11:12:26.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-30 10:37:43.000+01:00", "committer_id": 6163, "message": "Add convenience `CloudTraceOptions` ctor", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-30 10:37:43.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-30 00:03:41.000+01:00", "committer_id": 6163, "message": "Merge branch 'master' into cloudtrace", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-30 00:03:41.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-29 00:08:20.000+01:00", "committer_id": 6163, "message": "Add Google CloudTrace (aka Stackdriver Trace)", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-29 00:08:20.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-15 22:31:16.000+02:00", "committer_id": 19864447, "message": "Basic README", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-15 22:31:16.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-15 14:34:50.000+02:00", "committer_id": 6163, "message": "Rename opentracing-simple to example", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-15 14:34:50.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-15 14:34:27.000+02:00", "committer_id": 6163, "message": "Remove tracer class, which is not there (yet)", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-15 14:34:27.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-15 14:29:59.000+02:00", "committer_id": 6163, "message": "Initial", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-15 14:29:59.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-21 22:29:52.000+02:00", "committer_id": 6163, "message": "Formatting", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-21 22:29:52.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-20 23:09:14.000+02:00", "committer_id": 6163, "message": "Add basic Zipkin support", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-20 23:09:14.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-18 14:44:16.000+02:00", "committer_id": 6163, "message": "mtl-ize", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-18 14:44:16.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-09-18 14:47:46.000+02:00", "committer_id": 6163, "message": "Actually add the MonadTracer class", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-09-18 14:47:46.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-01 22:56:27.000+02:00", "committer_id": 6163, "message": "Allow the traced action to modify its span\n\nUsed now in the `traced` combinator to add exception information, and\nthe wai middleware to attach the HTTP status code as a tag.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-01 22:56:27.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-10 12:31:48.000+02:00", "committer_id": 6163, "message": "Handle reporter thread cancellation", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-10 12:31:48.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-21 22:44:41.000+02:00", "committer_id": 6163, "message": "Add Zipkin V1 support (Thrift/HTTP)", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-21 22:44:41.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-23 12:43:27.000+02:00", "committer_id": 6163, "message": "Add intrumentation for http-client\n\nThis is not too satisfying yet, as it won't work for users of\n`Network.HTTP.Simple`, and probably neither for `http-client-conduit`\nusers. Yet `http-client` doesn't seem to offer better hooks for our\npurposes.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-23 12:43:27.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-20 21:38:31.000+02:00", "committer_id": 6163, "message": "Engineer Zipkin Thrift encoding", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-20 21:35:56.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-18 14:43:02.000+01:00", "committer_id": 6163, "message": "Fix Zipkin BinaryAnnotation value encoding\n\nThe Thrift IDL says:\n\n> Serialized thrift bytes, in TBinaryProtocol format.\n>\n> For legacy reasons, byte order is big-endian. See THRIFT-3217.\n\nThe truth is, they just use a ByteBuffer. It's not even clear where they\nset/check the byte order, so this may need to be revisited again in the\nfuture.\n\nAt least, the Zipkin Thrift format is legacy, so we may even drop\nsupport for it at some point.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-18 14:43:02.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-18 14:40:22.000+01:00", "committer_id": 6163, "message": "Sürpriz: Jaeger deviates from the OT conventions\n\n\"http.status_code\" is supposed to be integer-valued, but Jaeger silently\ndiscards the value (nb. *not* the tag key) unless it's a string. Since\nZipkin appears to accept both, let's be bug-compatible.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-18 14:40:22.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-19 09:49:37.000+01:00", "committer_id": 6163, "message": "Reverts 067f16a2 and fix only where needed", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-19 09:49:37.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-19 10:30:43.000+01:00", "committer_id": 6163, "message": "Add a larger example", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-19 10:30:43.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-14 13:16:31.000+01:00", "committer_id": 6163, "message": "StrictData pragma", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-14 13:16:31.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-13 13:16:52.000+01:00", "committer_id": 6163, "message": "Reorganise reporting", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-13 13:16:52.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-10 01:36:19.000+01:00", "committer_id": 6163, "message": "Use carrier aliases", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-10 01:36:19.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-10 01:31:44.000+01:00", "committer_id": 6163, "message": "Turntables", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-10 01:31:44.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-05 12:38:42.000+01:00", "committer_id": 6163, "message": "Another attempt at generalising propagation and providing carrier\nextensibility", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-05 12:38:42.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-12 13:45:31.000+01:00", "committer_id": 6163, "message": "Move `traceInject`/`traceExtract` to `Propagation` module", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-12 13:45:31.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-12 11:58:23.000+01:00", "committer_id": 6163, "message": "Add convenience functions to add log records + set/get baggage items", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-12 11:58:23.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-12 13:25:33.000+01:00", "committer_id": 6163, "message": "Use optparse-applicative for example, add CloudTrace", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-12 13:25:33.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-12 13:24:37.000+01:00", "committer_id": 6163, "message": "Re-export http-client `Manager` init functions\n\nNo need for users to add an explicit dependency on http-client", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-12 13:24:37.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-08 23:18:30.000+02:00", "committer_id": 6163, "message": "Split types module", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-08 23:18:30.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-07 16:21:57.000+02:00", "committer_id": 6163, "message": "Reconsider tags", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-07 16:21:57.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-11 22:53:31.000+02:00", "committer_id": 6163, "message": "More on sampling", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-11 22:53:31.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-27 20:31:00.000+02:00", "committer_id": 6163, "message": "Fix silliness raised by #1", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-27 20:31:00.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-25 22:19:12.000+02:00", "committer_id": 6163, "message": "Iso' Bool Sampled", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-25 22:19:12.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-24 13:50:05.000+02:00", "committer_id": 6163, "message": "Commit to concrete TraceID type", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-24 13:50:05.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-24 22:37:20.000+02:00", "committer_id": 6163, "message": "Simplify", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-24 22:37:20.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-10-28 09:48:25.000+02:00", "committer_id": 19864447, "message": "Merge pull request #2 from isovector/parentId\n\nparentid => parentId", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-10-28 09:48:25.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-06 14:04:59.000+01:00", "committer_id": 6163, "message": "Sketch out Jaeger support", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-06 14:04:59.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-02 22:11:58.000+01:00", "committer_id": 6163, "message": "Adhere to serialising span kind as uppercase text.\n\nOtherwise Zipkin V2 will complain. May need to be revised for other\nbackends.\n\nShould fix #3", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-02 22:10:10.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-16 22:04:41.000+01:00", "committer_id": 19864447, "message": "Merge pull request #4 from kim/references\n\nAllow for all possible kinds of references", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-16 22:04:41.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-16 22:04:24.000+01:00", "committer_id": 19864447, "message": "Merge pull request #5 from kim/dict-passing\n\nDictionary-passing Style", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-16 22:04:24.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-16 22:03:12.000+01:00", "committer_id": 6163, "message": "Don't export the `Propagation` constructor for now", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-16 22:03:12.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-16 12:36:10.000+01:00", "committer_id": 6163, "message": "The Great Desophistication\n\nie. standardise on a single `SpanContext` type (which seems sufficient),\nand as a consequence pass around the propagation method as a value.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-16 12:36:10.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-14 23:19:10.000+01:00", "committer_id": 6163, "message": "Simplify propagation\n\nThe OpenTracing spec mandates that the carrier type be determined at\nruntime, for the sake of extensibility (obviously, this may also _fail_\nat runtime, if the carrier type is not supported). A safer approach is\nto encode the required carrier formats using a typeclass, yet have the\nuse site choose the desired carrier by supplying the appropriate\n`Prism`. It's still possible to support other carrier types, and use of\nan unsupported one is a compile-time error.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-14 23:19:10.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-13 10:05:25.000+01:00", "committer_id": 6163, "message": "Use generalised signature for `httpTraced` as well", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-13 10:05:25.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-13 10:01:45.000+01:00", "committer_id": 6163, "message": "Improve http-client example", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-13 10:01:45.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-13 09:44:40.000+01:00", "committer_id": 6163, "message": "Strictness", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-13 09:44:40.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-13 09:37:48.000+01:00", "committer_id": 6163, "message": "Generalise obtaining `Tracing` from some reader monad", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-13 09:37:48.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-13 09:10:29.000+01:00", "committer_id": 6163, "message": "Remove unnecessary instances", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-13 09:10:29.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-12 22:03:08.000+01:00", "committer_id": 6163, "message": "Switch to dictionary-passing style\n\nBecause simpler", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-12 22:03:08.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-10 21:48:32.000+01:00", "committer_id": 6163, "message": "Make a \"field lens\" for span references", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-10 21:48:32.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-10 21:42:32.000+01:00", "committer_id": 6163, "message": "Remove `traceFinish` from `MonadTrace`\n\nThere really is only one way to finish a `Span`", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-10 21:42:32.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-10 18:20:04.000+01:00", "committer_id": 6163, "message": "Convenience versions of the `traced` combinator\n\n* one underscore: unwrap the result, forgetting it's `Traced`\n* two underscores: ignore the result altogether", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-10 18:20:04.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-10 18:19:38.000+01:00", "committer_id": 6163, "message": "Example doesn't need lens anymore", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-10 18:19:38.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-10 13:55:40.000+01:00", "committer_id": 6163, "message": "Allow for all possible kinds of references\n\nThis entails:\n\n* an `ActiveSpan` is mutable, thus derefencing it as a `ChildOf`\n  reference must occur at the end of it's lifetime (ie. we have to carry\n  it around as a mutable reference)\n* `traced` returns the `FinishedSpan` along with the result of the\n  traced action, such that it can be used as a `FollowsFrom` reference\n  in subsequent `traced` calls\n* additionally, pure `Reference`s may be used as obtained from the\n  propagation carrier", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-10 13:55:40.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-17 12:43:21.000+01:00", "committer_id": 19864447, "message": "Merge pull request #6 from kim/remove-zipkin-tracer\n\nRemove Zipkin tracer", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-17 12:43:21.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-16 22:41:53.000+01:00", "committer_id": 6163, "message": "Formatting", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-16 22:41:53.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-16 22:41:33.000+01:00", "committer_id": 6163, "message": "Remove Zipkin tracer\n\nAs a consequence of #5, the standard tracer suffices in almost all\ncases. Backends (such as Zipkin) should only need to provide a reporter\nimplementation.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-16 22:25:34.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-28 10:22:21.000+01:00", "committer_id": 19864447, "message": "Merge pull request #7 from kim/jaeger\n\nJaeger Support", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-28 10:22:21.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-27 23:37:15.000+01:00", "committer_id": 6163, "message": "Impose even less imports and make naming more consistent", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-27 23:37:15.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-27 22:41:55.000+01:00", "committer_id": 6163, "message": "Impose less imports", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-27 22:41:55.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-27 15:11:26.000+01:00", "committer_id": 6163, "message": "Use `Handle` thrift transport for agent", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-27 15:11:26.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-24 22:53:12.000+01:00", "committer_id": 6163, "message": "Extra exception safety", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-24 22:53:12.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-24 21:36:04.000+01:00", "committer_id": 6163, "message": "Reconsider interaction between async exceptions and timing out the reporter action", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-24 21:36:04.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-23 00:13:21.000+01:00", "committer_id": 6163, "message": "Turn example into backend kitchen sink", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-23 00:13:21.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-23 00:12:18.000+01:00", "committer_id": 6163, "message": "Add \"LOCAL_COMPONENT\" binary annotation if `SpanKind` not given\n\nOtherwise at least Jaeger's compatibility layer will complain", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-23 00:12:18.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-23 00:11:51.000+01:00", "committer_id": 6163, "message": "Make `Endpoint` type correspond to thrift counterpart", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-23 00:11:51.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-23 00:10:29.000+01:00", "committer_id": 6163, "message": "Awww exceptions, why do we have them?", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-23 00:09:11.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-23 00:08:11.000+01:00", "committer_id": 6163, "message": "Re-export `Log` and `Propagation` modules", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-23 00:08:11.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-21 18:49:01.000+01:00", "committer_id": 6163, "message": "Remove unnecessary GADTs pragma", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-21 18:49:01.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-21 13:58:12.000+01:00", "committer_id": 6163, "message": "Use unsigned int for batch size", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-21 13:58:12.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-21 13:53:06.000+01:00", "committer_id": 6163, "message": "Pass Options record to configure reporters, and reduce duplication", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-21 13:53:06.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-20 22:54:45.000+01:00", "committer_id": 6163, "message": "Make Zipkin HttpReporter API consistent with Jaeger CollectorReporter\n\nie. add ZipkinAddr record, support HTTPS, pass in Manager\n\n@isovector last time I'll break the API, I promise", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-20 22:54:45.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-20 22:53:55.000+01:00", "committer_id": 6163, "message": "Add HTTPS support for CollectorReporter\n\nNote that this entails passing in the Manager", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-20 22:53:55.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-20 17:50:07.000+01:00", "committer_id": 6163, "message": "let binding looks nicer here", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-20 17:50:07.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-20 17:41:00.000+01:00", "committer_id": 6163, "message": "Add jaeger (or rather: uber) propagation", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-20 17:41:00.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-20 16:17:10.000+01:00", "committer_id": 6163, "message": "Flesh out Jaeger support more", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-20 16:17:10.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-17 12:43:51.000+01:00", "committer_id": 6163, "message": "Rebase", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-16 23:16:57.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-17 12:43:51.000+01:00", "committer_id": 6163, "message": "Update .gitignore", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-16 22:51:47.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-17 12:43:51.000+01:00", "committer_id": 6163, "message": "Prepare for Jaeger HTTP reporter", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-13 23:00:48.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-17 12:43:51.000+01:00", "committer_id": 6163, "message": "Lint", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-13 14:20:31.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-28 10:23:12.000+01:00", "committer_id": 6163, "message": "Expose `Sampler` constructor", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-28 10:23:12.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-11-30 00:02:26.000+01:00", "committer_id": 6163, "message": "Concurrency is hard\n\nThe previous didn't work because `wait` and `peekTQueue` curiously got\nreordered.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-11-30 00:02:26.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-19 09:49:37.000+01:00", "committer_id": 6163, "message": "Reverts 067f16a2 and fix only where needed", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-19 09:49:37.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-19 10:30:43.000+01:00", "committer_id": 6163, "message": "Add a larger example", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-19 10:30:43.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-14 13:16:31.000+01:00", "committer_id": 6163, "message": "StrictData pragma", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-14 13:16:31.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-18 14:43:02.000+01:00", "committer_id": 6163, "message": "Fix Zipkin BinaryAnnotation value encoding\n\nThe Thrift IDL says:\n\n> Serialized thrift bytes, in TBinaryProtocol format.\n>\n> For legacy reasons, byte order is big-endian. See THRIFT-3217.\n\nThe truth is, they just use a ByteBuffer. It's not even clear where they\nset/check the byte order, so this may need to be revisited again in the\nfuture.\n\nAt least, the Zipkin Thrift format is legacy, so we may even drop\nsupport for it at some point.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-18 14:43:02.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2017-12-18 14:40:22.000+01:00", "committer_id": 6163, "message": "Sürpriz: Jaeger deviates from the OT conventions\n\n\"http.status_code\" is supposed to be integer-valued, but Jaeger silently\ndiscards the value (nb. *not* the tag key) unless it's a string. Since\nZipkin appears to accept both, let's be bug-compatible.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2017-12-18 14:40:22.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-02-15 15:43:21.000+01:00", "committer_id": 6163, "message": "Export monadic inject/extract", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-02-15 15:43:21.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-02-19 13:07:21.000+01:00", "committer_id": 6163, "message": "URL encoding/decoding when converting from 'TextMap' to 'Headers'", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-02-19 13:07:21.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-02-05 10:21:10.000-08:00", "committer_id": 6163, "message": "Restructure. A lot.", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-02-05 10:21:10.000-08:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-02-02 14:15:09.000+01:00", "committer_id": 6163, "message": "Expose non-bracket versions\n\nAppreciated by people who can't or don't want to use `MonadMask`, such\nas aficionados of `ExceptT`", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-02-02 14:15:09.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-02-02 16:35:08.000+01:00", "committer_id": 6163, "message": "Lensify SpanOpts", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-02-02 16:35:08.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-01-31 15:03:51.000+01:00", "committer_id": 6163, "message": "Weed out a couple other unused dependencies", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-01-31 15:03:51.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-01-31 14:56:38.000+01:00", "committer_id": 6163, "message": "Actually remove the thrift dependency from zipkin v2\n\n+ a bunch of other unnecessary dependencies", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-01-31 14:56:38.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-01-31 14:51:48.000+01:00", "committer_id": 6163, "message": "Split Zipkin into v1/v2 packages\n\nSo that v2 users don't have to pull in the dreaded thrift dependency", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-01-31 14:51:48.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-01-31 13:33:09.000+01:00", "committer_id": 6163, "message": "Re-export commonly needed things from vinyl", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-01-31 13:33:09.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-01-31 13:31:33.000+01:00", "committer_id": 6163, "message": "Switch to hpack", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-01-31 13:31:33.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-01-31 23:27:53.000+01:00", "committer_id": 6163, "message": "Semigroup instances", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-01-31 23:27:53.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-01-31 23:21:00.000+01:00", "committer_id": 6163, "message": "Generalise non-MonadReader variants of traced to accept HasTracing", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-01-31 23:21:00.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-01-31 23:20:54.000+01:00", "committer_id": 6163, "message": "whitespace", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-01-31 23:20:54.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-02-01 11:29:21.000+01:00", "committer_id": 6163, "message": "Use 'withException'", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-02-01 11:29:21.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-02-01 10:00:08.000+01:00", "committer_id": 6163, "message": "Remove double-underscored aliases", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-02-01 09:58:17.000+01:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-05-13 20:23:39.000+02:00", "committer_id": 19864447, "message": "Merge pull request #15 from kim/fix/13-jaeger-agent-write-buffer\n\nFix jaeger agent UDP transport", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-05-13 20:23:39.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-05-13 20:16:40.000+02:00", "committer_id": 6163, "message": "Fix jaeger agent UDP transport\n\nApparently, the Thrift Transport instance for Handles is broken -- we\nneed to buffer into a Thrift WriteBuffer and then flush that to the\nwire.\n\nFixes #13", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-05-13 20:16:40.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-05-13 10:20:50.000+02:00", "committer_id": 19864447, "message": "Merge pull request #14 from adetokunbo/fix-link-to-opentracing\n\nFix link to opentracing.io which is not HTTPS", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-05-13 10:20:50.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-05-13 23:33:51.000+02:00", "committer_id": 6163, "message": "Generalise propagation functions", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-05-13 23:33:51.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-05-13 23:33:19.000+02:00", "committer_id": 6163, "message": "Remove unnecessary hiding", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-05-13 23:33:19.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-06-17 13:59:22.000+02:00", "committer_id": 6163, "message": "Add Semigroup instance for Hex", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-06-17 13:59:22.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-06-24 15:58:56.000+02:00", "committer_id": 19864447, "message": "Merge pull request #18 from Simspace/fix-hexid\n\nUse hex fixed for hex ids to ensure 16 characters", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-06-24 15:58:56.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-06-29 18:27:56.000+02:00", "committer_id": 19864447, "message": "Merge pull request #20 from kim/zipkin-v2-binary-tag-base64\n\nBase64-encode `BinaryT` tag values for the Zipkin V2 API", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-06-29 18:27:56.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-06-29 10:14:08.000+02:00", "committer_id": 6163, "message": "Base64-encode `BinaryT` tag values for the Zipkin V2 API", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-06-29 10:14:08.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-06-29 10:09:24.000+02:00", "committer_id": 19864447, "message": "Merge pull request #19 from Simspace/pr-zipkinv2-tagval-string\n\nZipkin v2 encode tag val as strings", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-06-29 10:09:24.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 103654611, "repo_owner_id": 6163, "commit_at": "2018-07-07 16:38:31.000+02:00", "committer_id": 6163, "message": "Symlink LICENSE files to top-level", "repo_description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "generate_at": "2018-07-07 16:38:31.000+02:00", "author_id": 6163, "repo_name": "kim/opentracing"}, {"repo_id": 14362785, "repo_owner_id": 6163, "commit_at": "2014-05-09 11:35:21+02:00", "committer_id": 6163, "message": "Constrain exceptions", "repo_description": null, "generate_at": "2014-05-09 11:34:34+02:00", "author_id": 6163, "repo_name": "kim/ex-pool"}, {"repo_id": 14362785, "repo_owner_id": 6163, "commit_at": "2013-12-03 17:45:54+01:00", "committer_id": 6163, "message": "Avoid name clash with `Prelude.catch` on older GHCs\n\n- also, use `handleAll` instead of `catch`\n- makes ScopedTypeVariables unnecessary\n- add -funbox-strict-fields\n\nFixes #2", "repo_description": null, "generate_at": "2013-12-03 17:45:54+01:00", "author_id": 6163, "repo_name": "kim/ex-pool"}, {"repo_id": 14362785, "repo_owner_id": 6163, "commit_at": "2013-12-01 19:05:32+01:00", "committer_id": 6163, "message": "Remove unnecessary lower bound on hashable.\n\nMay make Haskell Platform users happy, and fixes #1", "repo_description": null, "generate_at": "2013-12-01 19:05:32+01:00", "author_id": 6163, "repo_name": "kim/ex-pool"}, {"repo_id": 14362785, "repo_owner_id": 6163, "commit_at": "2013-11-13 13:03:47+01:00", "committer_id": 6163, "message": "No automatic cross-repo links in readmes :(", "repo_description": null, "generate_at": "2013-11-13 13:03:47+01:00", "author_id": 6163, "repo_name": "kim/ex-pool"}, {"repo_id": 14362785, "repo_owner_id": 6163, "commit_at": "2013-11-13 13:00:24+01:00", "committer_id": 6163, "message": "Add Readme", "repo_description": null, "generate_at": "2013-11-13 13:00:24+01:00", "author_id": 6163, "repo_name": "kim/ex-pool"}, {"repo_id": 14362785, "repo_owner_id": 6163, "commit_at": "2013-11-13 12:44:47+01:00", "committer_id": 6163, "message": "Initial commit", "repo_description": null, "generate_at": "2013-11-13 12:44:47+01:00", "author_id": 6163, "repo_name": "kim/ex-pool"}, {"repo_id": 14362785, "repo_owner_id": 6163, "commit_at": "2018-01-07 20:56:45.000+01:00", "committer_id": 19864447, "message": "Merge pull request #4 from k0001/ups\n\nRemove exceptions upper bound", "repo_description": null, "generate_at": "2018-01-07 20:56:45.000+01:00", "author_id": 6163, "repo_name": "kim/ex-pool"}, {"repo_id": 14362785, "repo_owner_id": 6163, "commit_at": "2018-01-07 20:57:29.000+01:00", "committer_id": 6163, "message": "Bump version to 0.2.1", "repo_description": null, "generate_at": "2018-01-07 20:57:29.000+01:00", "author_id": 6163, "repo_name": "kim/ex-pool"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2016-06-21 17:36:33+02:00", "committer_id": 6163, "message": "Build all examples threaded", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2016-06-21 17:36:33+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2016-05-04 14:16:29+02:00", "committer_id": 6163, "message": "Patch release 0.6.4", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2016-05-04 14:16:29+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2016-05-04 11:37:34+02:00", "committer_id": 6163, "message": "Merge pull request #30 from sinelaw/fix-test-on-newer-ghc\n\nAvoid compilation error when using tasty 0.11.0.3 due to duplicate Sh…", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2016-05-04 11:37:34+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-05-19 16:53:08+02:00", "committer_id": 6163, "message": "Patch relase 0.6.3", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-05-19 16:53:08+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-03-31 12:26:14+02:00", "committer_id": 6163, "message": "Add GHC 7.10.1 to tested-with", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-03-31 12:26:14+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-03-31 12:24:35+02:00", "committer_id": 6163, "message": "Build examples with -threaded\n\nsee also #27", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-03-31 12:24:35+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-03-31 12:24:16+02:00", "committer_id": 6163, "message": "Relax upper bounds on test libs", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-03-31 12:24:16+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-03-27 09:57:10+01:00", "committer_id": 6163, "message": "Add GHC 7.10.1 to travis build", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-03-27 09:57:10+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-03-27 09:32:46+01:00", "committer_id": 6163, "message": "Patch release 0.6.2", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-03-27 09:32:46+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-03-27 09:24:50+01:00", "committer_id": 6163, "message": "Merge pull request #26 from codehalo/master\n\nCompiles with latest version of exceptions package", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-03-27 09:24:50+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-03-24 21:39:47+01:00", "committer_id": 6163, "message": "Merge pull request #25 from bneijt/master\n\nUpdate leveldb project urls", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-03-24 21:39:47+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-03-16 19:31:53+01:00", "committer_id": 6163, "message": "Merge pull request #24 from facundominguez/tweag-patchset\n\nRemove unneeded dependencies on snappy and stdc++.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-03-16 19:31:53+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-01-17 12:17:34+01:00", "committer_id": 6163, "message": "Release v0.6.1", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-01-17 12:17:34+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-01-17 12:08:58+01:00", "committer_id": 6163, "message": "Improve \"features\" example and add `compactRange`", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-01-17 12:08:58+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-01-17 12:08:10+01:00", "committer_id": 6163, "message": "Expose `compactRange` through MonadResource interface, too", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-01-17 12:08:10+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2015-01-17 11:46:14+01:00", "committer_id": 6163, "message": "Merge pull request #23 from bholst/master\n\nIntroduce compactRange", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2015-01-17 11:46:14+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-14 23:25:19+02:00", "committer_id": 6163, "message": "Fix a test", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-14 23:25:19+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-14 22:20:53+02:00", "committer_id": 6163, "message": "Release v0.6", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-14 22:20:53+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-14 16:42:45+02:00", "committer_id": 6163, "message": "Decrease verbosity, as there are no logs on stdout anyways", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-14 16:42:45+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-14 13:12:56+02:00", "committer_id": 6163, "message": "Mmkay, newer cabal is different", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-14 13:12:56+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-14 12:38:24+02:00", "committer_id": 6163, "message": "Run travis build / tests from sdist tarball\n\nWould've caught #21", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-14 12:38:24+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-14 12:31:38+02:00", "committer_id": 6163, "message": "Mention test module in other-modules\n\nResolves #21", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-14 12:31:38+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-14 12:29:28+02:00", "committer_id": 6163, "message": "Fix tests and provide almost complete list API", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-14 12:29:28+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-14 12:28:42+02:00", "committer_id": 6163, "message": "Make slices span the closed interval", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-14 12:28:42+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-02 22:18:54+02:00", "committer_id": 6163, "message": "More functions from the 'special folds' section", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-02 22:18:54+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-02 14:58:58+02:00", "committer_id": 6163, "message": "foldM_ f z s = foldM f z s >> return ()", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-02 14:58:58+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-02 00:10:23+02:00", "committer_id": 6163, "message": "Tidy up rules and provide `mapM_", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-02 00:10:23+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-10-01 23:17:33+02:00", "committer_id": 6163, "message": "More aggressive short-cut fusion rules", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-10-01 23:17:33+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-30 21:35:46+02:00", "committer_id": 6163, "message": "Makefile fix", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-30 21:35:46+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-30 21:34:36+02:00", "committer_id": 6163, "message": "Settling for a `mapM` version with a 'rigid' base monad type", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-30 21:34:36+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 23:45:04+02:00", "committer_id": 6163, "message": "Revert incorrect zipWith/unzip rule", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 23:44:25+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 23:41:11+02:00", "committer_id": 6163, "message": "Aha: inline zip eagerly, so we only need the zipWith/unzip rule", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 23:41:11+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 23:38:46+02:00", "committer_id": 6163, "message": "Add zipWith/unzip fusion rule (perhaps redundantly)", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 23:38:46+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 23:33:07+02:00", "committer_id": 6163, "message": "Add zip/unzip fusion rule, proper inlining of fromList/toList/zip", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 23:33:07+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 13:16:07+02:00", "committer_id": 6163, "message": "Bump version", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 13:16:07+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 13:13:53+02:00", "committer_id": 6163, "message": "Add strict `atomicModifyIORef` for base < 4.6", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 13:13:53+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 13:00:32+02:00", "committer_id": 6163, "message": "Add 'withDB' bracket and fix examples", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 13:00:32+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 12:51:52+02:00", "committer_id": 6163, "message": "Fix haddock linking", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 12:51:52+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 12:49:05+02:00", "committer_id": 6163, "message": "Haddock escaping", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 12:49:05+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 12:45:58+02:00", "committer_id": 6163, "message": "Update changelog, remove redundant history section from readme", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 12:45:58+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 12:40:50+02:00", "committer_id": 6163, "message": "Release v0.5", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 12:40:50+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 12:40:17+02:00", "committer_id": 6163, "message": "Remove 'close' from public API", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 12:40:17+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 12:39:13+02:00", "committer_id": 6163, "message": "Bump version", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 12:39:13+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-27 12:36:42+02:00", "committer_id": 6163, "message": "Deprecate 'close'\n\nResolves #15", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-27 12:36:42+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-24 23:58:45+02:00", "committer_id": 6163, "message": "Bump minor minor version", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-24 23:58:45+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-24 23:58:18+02:00", "committer_id": 6163, "message": "Documentation", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-24 23:58:18+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-24 22:39:47+02:00", "committer_id": 6163, "message": "Bump version", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-24 22:39:47+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-24 22:38:59+02:00", "committer_id": 6163, "message": "Remove the (unused) 'Slice' type", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-24 22:38:59+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-24 22:30:44+02:00", "committer_id": 6163, "message": "Release 0.4", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-24 22:30:44+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-24 22:27:38+02:00", "committer_id": 6163, "message": "Documentation", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-24 22:27:38+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-24 21:14:02+02:00", "committer_id": 6163, "message": "Silence warning", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-24 21:14:02+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-24 21:09:25+02:00", "committer_id": 6163, "message": "Merge pull request #20 from kim/cps-traversal\n\nCPS traversals", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-24 21:09:25+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-24 21:08:30+02:00", "committer_id": 6163, "message": "Streaming, Data.List-like interface to Iterators (similar to stream-fusion)", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-03 23:16:50+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-03 23:47:18+02:00", "committer_id": 6163, "message": "Remove -Werror to make features example compile (due to deprecations)", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-03 23:40:10+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-03 23:33:26+02:00", "committer_id": 6163, "message": "Bump version", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-03 23:33:26+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-09-03 23:30:08+02:00", "committer_id": 6163, "message": "Deprecate mapIter, iterItems, iterKeys, iterValues\n\nCloses #18", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-09-03 23:30:08+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-08-27 00:48:28+02:00", "committer_id": 6163, "message": "Fix linker error on ubuntu precise (travis)\n\n- install a more recent leveldb version via openstack ppa (will need to create\n  my own at some point)\n- mention snappy and stdc++ in extra-libraries (curiously, this works on other\n  systems)", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-08-27 00:48:28+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-08-26 23:40:54+02:00", "committer_id": 6163, "message": "Install snappy on travis", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-08-26 23:40:54+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-08-26 23:37:47+02:00", "committer_id": 6163, "message": "Alright, drop support for GHC < 7.4", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-08-26 23:37:47+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-08-26 23:24:36+02:00", "committer_id": 6163, "message": "Pass -fexamples when installing from sdist", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-08-26 23:24:36+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-08-26 23:21:43+02:00", "committer_id": 6163, "message": "Another attempt to fix ghc 7.2.2 build", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-08-26 23:21:43+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-08-26 22:22:03+02:00", "committer_id": 6163, "message": "Add upper bound to resourcet when building with older GHC", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-08-26 22:19:30+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-08-26 22:05:05+02:00", "committer_id": 6163, "message": "Also try building the examples", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-08-26 22:05:05+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-08-26 21:49:35+02:00", "committer_id": 6163, "message": "Proper ubuntu leveldb package", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-08-26 21:49:35+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-08-26 21:37:02+02:00", "committer_id": 6163, "message": "Rework build\n\n- fix haddock ('other-extensions' doesn't play well with hsc2hs)\n- add make target for uploading haddocks (resolves #16)\n- multi-ghc travis build (based on hvr/multi-ghc-travis)", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-08-26 21:37:02+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-08-25 18:16:11+02:00", "committer_id": 6163, "message": "git ignore cabal sandbox", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-08-25 18:16:11+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-01-10 23:23:24+01:00", "committer_id": 6163, "message": "Release 0.3 (finally)", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-01-10 23:23:24+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-01-10 23:23:05+01:00", "committer_id": 6163, "message": "Add a changelog", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-01-10 23:23:05+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-01-10 22:12:32+01:00", "committer_id": 6163, "message": "whitespace", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-01-10 22:12:32+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2014-01-10 22:11:10+01:00", "committer_id": 6163, "message": "(Re-) introduce 'withIter' bracket", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2014-01-10 22:03:48+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-05-21 23:03:41+02:00", "committer_id": 6163, "message": "Add note about external synchronization", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-05-21 23:03:41+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-05-21 22:53:05+02:00", "committer_id": 6163, "message": "Require external synchronization for iterator access\n\nReason is, we need to resort to IO for higher-order functions which defeats the\npurpose of generalizing to MonadIO. Also, the semantics of nested withMVar\nblocks is a bit unclear.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-05-21 22:53:05+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-22 02:07:32+02:00", "committer_id": 6163, "message": "(Re-)introduce withSnapshot combinator in Base", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-22 02:07:32+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-22 02:06:38+02:00", "committer_id": 6163, "message": "Move ResourceT API to it's own module", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-22 02:05:58+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-21 23:40:38+02:00", "committer_id": 6163, "message": "Adjust ghc options", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-21 23:40:38+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-21 23:37:18+02:00", "committer_id": 6163, "message": "Reorganize modules", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-21 23:36:18+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-21 21:55:40+02:00", "committer_id": 6163, "message": "Fix Iterator locking\n\nActually, not sure why this works: shouldn't a nested 'withMVar' block?", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-21 21:55:40+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-21 21:54:09+02:00", "committer_id": 6163, "message": "Formatting", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-21 21:54:09+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-19 22:43:34+02:00", "committer_id": 6163, "message": "Don't use default-extensions + \"stylish-haskell\"-style imports", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-19 22:43:34+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-19 22:28:46+02:00", "committer_id": 6163, "message": "Free options after handle\n\nProbably not an issue, but not sure about scheduling semantics.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-19 22:28:46+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-19 22:22:29+02:00", "committer_id": 6163, "message": "Drop record syntax for Iterator", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-19 22:22:29+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-19 22:21:51+02:00", "committer_id": 6163, "message": "Merge remote-tracking branch 'nicolast/less-resourcet'\n\nConflicts:\n\tsrc/Database/LevelDB.hs", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-19 22:21:51+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-13 12:45:38-07:00", "committer_id": 6163, "message": "Merge pull request #13 from NicolasT/fix-fillcache\n\nBug: Fix 'fillCache' option setting", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-13 12:45:38-07:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-13 21:44:12+02:00", "committer_id": 6163, "message": "Merge pull request #12 from NicolasT/build-examples with additions", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-13 21:44:12+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-13 21:40:32+02:00", "committer_id": 6163, "message": "Prefix example executables with 'leveldb-example-'\n\nSo as to not pollute the namespace for plain 'cabal' (vs. 'cabal-dev') builds.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-13 21:40:32+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2013-04-13 12:29:01-07:00", "committer_id": 6163, "message": "Merge pull request #10 from NicolasT/fix-features\n\nFix build of 'features' example", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2013-04-13 12:29:01-07:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-23 00:22:30+01:00", "committer_id": 6163, "message": "Add fancy travis build status image", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-23 00:22:30+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-23 00:14:55+01:00", "committer_id": 6163, "message": "Copy leveldb header files to /usr/local/include (travis)", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-23 00:14:55+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-23 00:09:31+01:00", "committer_id": 6163, "message": "Typo", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-23 00:09:31+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-23 00:08:00+01:00", "committer_id": 6163, "message": "Use make for install (travis)", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-23 00:08:00+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-23 00:02:56+01:00", "committer_id": 6163, "message": "Tell travis about haskell", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-23 00:02:56+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-22 23:59:01+01:00", "committer_id": 6163, "message": "Try setting up travis build", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-22 23:59:01+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-11 22:56:54+01:00", "committer_id": 6163, "message": "Release 0.2.0", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-11 22:55:00+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-11 22:33:19+01:00", "committer_id": 6163, "message": "Add support for querying the runtime version of libleveldb\n\nNote that this requires libleveldb 1.7", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-11 22:33:19+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-11 21:46:00+01:00", "committer_id": 6163, "message": "Add support for bloom filter (\"filter policy\")\n\nAlso, drop custom env support, as it's not really useful here.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-11 21:28:46+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-11 20:40:52+01:00", "committer_id": 6163, "message": "Add convenient Makefile for examples", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-11 20:40:52+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-11 20:37:16+01:00", "committer_id": 6163, "message": "Make GC-safe batch write without copying\n\nThe trick is to use touchForeignPtr on the ByteString arguments' underlying\nForeignPtr, which is what withForeignPtr does. Luckily, Data.ByteString.Internal\nis exported.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-11 20:37:16+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-11-11 20:31:10+01:00", "committer_id": 6163, "message": "Add *.hi to .gitignore", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-11-11 20:31:10+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-06-11 14:48:37+02:00", "committer_id": 6163, "message": "Patch release 0.1.1", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-06-11 14:48:37+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-06-11 14:46:19+02:00", "committer_id": 6163, "message": "Copy ByteStrings into CStringLens\n\nUnfortunately, there seems to be no other way to guarantee that the CStringLens\nare not GC'ed prematurely.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-06-11 14:46:19+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-06-11 14:43:18+02:00", "committer_id": 6163, "message": "Whitespace and more consistent qualified names", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-06-11 14:43:18+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-05-07 21:29:16+02:00", "committer_id": 6163, "message": "Additional documentation", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-05-07 21:29:16+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-05-03 12:16:33+02:00", "committer_id": 6163, "message": "Document options, expose iterGetError, make mapIter tail recursive", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-05-03 12:16:33+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-24 01:00:35+02:00", "committer_id": 6163, "message": "Manage ReadOptions, WriteOptions and WriteBatch in ResourceT", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-24 01:00:35+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-23 23:47:41+02:00", "committer_id": 6163, "message": "Satisfy iterator invariants", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-23 23:47:41+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-21 20:36:05+02:00", "committer_id": 6163, "message": "Remove -debug flag", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-21 20:36:05+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-21 20:17:53+02:00", "committer_id": 6163, "message": "Remove static linking flags\n\nInterestingly, this fixes segfaults with custom comparators.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-21 20:17:53+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-21 12:52:08+02:00", "committer_id": 6163, "message": "Record syntax for options", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-21 12:52:08+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-21 11:18:53+02:00", "committer_id": 6163, "message": "Re-introduce user-defined comparator\n\n* fixes #5\n* Todo:\n  * tweak foreign imports, possibly not all of them need to be 'safe'\n  * maybe it's time to switch to record syntax for options to reduce clutter", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-21 11:18:53+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-19 21:59:14+02:00", "committer_id": 6163, "message": "Remove all ResourceT gymnastics, as it now runs finalizers LIFO", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-19 21:59:14+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-19 00:00:57+02:00", "committer_id": 6163, "message": "Less messed-up implementation of LIFO deallocation\n\nJust patch Control.Monad.Trans.Resource to export some types and implement\nrunResourceT as runLevelDB with custom alloc/dealloc strategy. Removes the\nre-export of teh whole Resource module.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-19 00:00:57+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-17 22:21:09+02:00", "committer_id": 6163, "message": "Moar documentation", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-17 22:21:09+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-17 22:06:35+02:00", "committer_id": 6163, "message": "Add documentation", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-17 22:06:35+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-17 09:18:38+02:00", "committer_id": 6163, "message": "Drop aliasing and re-export Control.Monad.Trans.Resource", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-17 09:18:38+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-17 01:04:31+02:00", "committer_id": 6163, "message": "Bundle patched version of Control.Monad.Trans.Resource with LIFO deallocation", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-17 01:04:31+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-11 22:57:42+02:00", "committer_id": 6163, "message": "WIP: manage (memory) resources using conduit's ResourceT", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-11 22:57:42+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-11 08:50:57+02:00", "committer_id": 6163, "message": "Cleanup Makefile & .gitignore", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-11 08:50:57+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-11 08:45:32+02:00", "committer_id": 6163, "message": "Unbundle LevelDB, as it now has shared lib support.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-11 08:45:32+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-10 23:17:13+02:00", "committer_id": 6163, "message": "Synchronize access to Iterator using MVar", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-10 23:17:13+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-10 23:17:07+02:00", "committer_id": 6163, "message": "Make _cachePtr strict", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-10 23:17:07+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-09 20:20:15+02:00", "committer_id": 6163, "message": "Inline helpers", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-09 20:20:15+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-09 20:19:17+02:00", "committer_id": 6163, "message": "Improve memory management", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-09 20:19:17+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-07 18:22:55+02:00", "committer_id": 6163, "message": "Release 0.0.3 to get people's contributions on hackage", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-07 18:22:55+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-07 18:21:49+02:00", "committer_id": 6163, "message": "Add Eq as suggested by PR #7", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-07 18:21:49+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-04-07 18:20:44+02:00", "committer_id": 6163, "message": "Use throwIO instead of ioError", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-04-07 18:20:44+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-03-14 22:11:51+01:00", "committer_id": 6163, "message": "Update example to use iterItem", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-03-14 22:11:51+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-03-13 22:37:10+01:00", "committer_id": 6163, "message": "Pull in latest leveldb changes\n\nSquashed commit of the following:\n\ncommit 583f1499c00ff40f332149021f583cf6ee78dd7e\nAuthor: Sanjay Ghemawat <sanjay@google.com>\nDate:   Fri Mar 9 07:51:04 2012 -0800\n\n    fix LOCK file deletion to prevent crash on windows\n\ncommit d79762e27369365a7ffe1f2e3a5c64b0632079e1\nAuthor: Sanjay Ghemawat <sanjay@google.com>\nDate:   Thu Mar 8 16:23:21 2012 -0800\n\n    added group commit; drastically speeds up mult-threaded synchronous write workloads\n\ncommit 015d26f8be6e27d96c536eb9f1ef7275898e3603\nAuthor: Sanjay Ghemawat <sanjay@google.com>\nDate:   Mon Mar 5 10:35:46 2012 -0800\n\n    add .gitignore; support for building on a few BSD variants", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-03-13 22:31:21+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-03-13 01:00:23-07:00", "committer_id": 6163, "message": "Merge pull request #3 from wmoss/master\n\nSome utility functions for iterators", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-03-13 01:00:23-07:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-17 09:18:17+01:00", "committer_id": 6163, "message": "Credit contributors in .cabal file", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-17 09:18:17+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-15 23:59:28-08:00", "committer_id": 6163, "message": "Merge pull request #1 from milaz/patch-1\n\nAutoconf 2.68 support", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-15 23:59:28-08:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-15 01:10:35+01:00", "committer_id": 6163, "message": "Add missing source and bump version§", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-15 01:10:35+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-14 20:50:47+01:00", "committer_id": 6163, "message": "Remove and ignore configure script, as it now gets generated by autoconf", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-14 20:50:47+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-14 20:49:00+01:00", "committer_id": 6163, "message": "Docs", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-14 20:49:00+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-14 20:48:51+01:00", "committer_id": 6163, "message": "Move example to examples/", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-14 20:48:51+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-14 20:30:22+01:00", "committer_id": 6163, "message": "Switch to autoconf build courtesy of Austin Seipp", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-14 19:52:45+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-08 22:22:22+01:00", "committer_id": 6163, "message": "Markdown, oh my!", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-08 22:22:22+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-08 22:18:25+01:00", "committer_id": 6163, "message": "Readme and package description tweaks", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-08 22:18:25+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-08 22:02:15+01:00", "committer_id": 6163, "message": "Include configure script", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-08 22:02:15+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-08 22:00:27+01:00", "committer_id": 6163, "message": "Documentation", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-08 22:00:27+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-08 20:37:26+01:00", "committer_id": 6163, "message": "Build tweaks", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-08 20:37:26+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-08 20:35:22+01:00", "committer_id": 6163, "message": "Pull in latest leveldb changes\n\nSquashed commit of the following:\n\ncommit 239ac9d2dea0ac1708b7d903a3d80d3883e0781b\nAuthor: Sanjay Ghemawat <sanjay@google.com>\nDate:   Thu Feb 2 09:34:14 2012 -0800\n\n    avoid very large compactions; fix build on Linux\n\ncommit 3c8be108bfb5fbd7d51f824199627e757279f79e\nAuthor: Sanjay Ghemawat <sanjay@google.com>\nDate:   Wed Jan 25 14:56:52 2012 -0800\n\n    fixed issues 66 (leaking files on disk error)  and 68 (no sync of CURRENT file)\n\ncommit c8c5866a86c8d4a3e80d8708d14a06776fb683d1\nAuthor: Hans Wennborg <hans@chromium.org>\nDate:   Wed Nov 30 10:59:40 2011 +0000\n\n    Makefile fixes for systems with $CXX other than g++.\n\n    - Makefile: Use $(CXX) for compiling C++ files,\n      don't override the environment's value of $CXX\n\n    - build_detect_platform: use $CXX instead of g++.\n\n    Based on bug report from Theo Schlossnagle:\n    http://code.google.com/p/leveldb/issues/detail?id=46\n\n    (Sync with uptream at 25807040.)\n\ncommit 42fb47f6edab02d4abb814631c6615dd4661d7d2\nAuthor: Hans Wennborg <hans@chromium.org>\nDate:   Mon Nov 14 17:06:16 2011 +0000\n\n    Pass system's CFLAGS, remove exit time destructor, sstable bug fix.\n\n    - Pass system's values of CFLAGS,LDFLAGS.\n      Don't override OPT if it's already set.\n      Original patch by Alessio Treglia <alessio@debian.org>:\n      http://code.google.com/p/leveldb/issues/detail?id=27#c6\n\n    - Remove 1 exit time destructor from leveldb.\n      See http://crbug.com/101600\n\n    - Fix problem where sstable building code would pass an\n      internal key to the user comparator.\n\n    (Sync with uptream at 25436817.)\n\ncommit 36a5f8ed7f9fb3373236d5eace4f5fea369856ee\nAuthor: Hans Wennborg <hans@chromium.org>\nDate:   Mon Oct 31 17:22:06 2011 +0000\n\n    A number of fixes:\n\n    - Replace raw slice comparison with a call to user comparator.\n      Added test for custom comparators.\n\n    - Fix end of namespace comments.\n\n    - Fixed bug in picking inputs for a level-0 compaction.\n\n      When finding overlapping files, the covered range may expand\n      as files are added to the input set.  We now correctly expand\n      the range when this happens instead of continuing to use the\n      old range.  For example, suppose L0 contains files with the\n      following ranges:\n\n          F1: a .. d\n          F2:    c .. g\n          F3:       f .. j\n\n      and the initial compaction target is F3.  We used to search\n      for range f..j which yielded {F2,F3}.  However we now expand\n      the range as soon as another file is added.  In this case,\n      when F2 is added, we expand the range to c..j and restart the\n      search.  That picks up file F1 as well.\n\n      This change fixes a bug related to deleted keys showing up\n      incorrectly after a compaction as described in Issue 44.\n\n    (Sync with upstream @25072954)\n\ncommit 299ccedfeca1fb3497978c288e76008a5c08e899\nAuthor: Gabor Cselle <gabor@google.com>\nDate:   Wed Oct 5 16:30:28 2011 -0700\n\n    A number of bugfixes:\n\n    - Added DB::CompactRange() method.\n\n      Changed manual compaction code so it breaks up compactions of\n      big ranges into smaller compactions.\n\n      Changed the code that pushes the output of memtable compactions\n      to higher levels to obey the grandparent constraint: i.e., we\n      must never have a single file in level L that overlaps too\n      much data in level L+1 (to avoid very expensive L-1 compactions).\n\n      Added code to pretty-print internal keys.\n\n    - Fixed bug where we would not detect overlap with files in\n      level-0 because we were incorrectly using binary search\n      on an array of files with overlapping ranges.\n\n      Added \"leveldb.sstables\" property that can be used to dump\n      all of the sstables and ranges that make up the db state.\n\n    - Removing post_write_snapshot support.  Email to leveldb mailing\n      list brought up no users, just confusion from one person about\n      what it meant.\n\n    - Fixing static_cast char to unsigned on BIG_ENDIAN platforms.\n\n      Fixes\tIssue 35 and Issue 36.\n\n    - Comment clarification to address leveldb Issue 37.\n\n    - Change license in posix_logger.h to match other files.\n\n    - A build problem where uint32 was used instead of uint32_t.\n\n    Sync with upstream @24408625\n\ncommit 26db4d971a15d2a7d45bef73f69ef527d164b340\nAuthor: Hans Wennborg <hans@chromium.org>\nDate:   Mon Sep 26 17:37:09 2011 +0100\n\n    Sync with upstream @24213649.\n\n    Adding GNU/kFreeBSD support. As requested here:\n    http://code.google.com/p/leveldb/issues/detail?id=38\n\n    Use uint64_t instead of size_t in MemEnvTest. As pointed out at\n    http://code.google.com/p/leveldb/issues/detail?id=41\n\ncommit 213a68eb68ece93a8915ef18a8eba920d5a924a4\nAuthor: Hans Wennborg <hans@chromium.org>\nDate:   Mon Sep 12 10:21:10 2011 +0100\n\n    Sync with upstream @23860137.\n\n    Fix GCC -Wshadow warnings in LevelDB's public header files,\n    reported by Dustin.\n\n    Add in-memory Env implementation (helpers/memenv/*).\n    This enables users to create LevelDB databases in-memory.\n\n    Initialize ShardedLRUCache::last_id_ to zero.\n    This fixes a Valgrind warning.\n\n    (Also delete port/sha1_* which were removed upstream some time ago.)\n\ncommit 72630236513e7384cb0a2e8fffcae232135a5adc\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Thu Sep 1 19:08:02 2011 +0000\n\n    Bugfixes: for Get(), don't hold mutex while writing log.\n\n    - Fix bug in Get: when it triggers a compaction, it could sometimes\n      mark the compaction with the wrong level (if there was a gap\n      in the set of levels examined for the Get).\n\n    - Do not hold mutex while writing to the log file or to the\n      MANIFEST file.\n\n      Added a new benchmark that runs a writer thread concurrently with\n      reader threads.\n\n      Percentiles\n      ------------------------------\n      micros/op: avg  median 99   99.9  99.99  99.999 max\n      ------------------------------------------------------\n      before:    42   38     110  225   32000  42000  48000\n      after:     24   20     55   65    130    1100   7000\n\n    - Fixed race in optimized Get.  It should have been using the\n      pinned memtables, not the current memtables.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@50 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit e3584f9c28833ec0530b39540ffd406ee41dbc3a\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Mon Aug 22 21:08:51 2011 +0000\n\n    Bugfix for issue 33; reduce lock contention in Get(), parallel benchmarks.\n\n    - Fix for issue 33 (non-null-terminated result from\n      leveldb_property_value())\n\n    - Support for running multiple instances of a benchmark in parallel.\n\n    - Reduce lock contention on Get():\n      (1) Do not hold the lock while searching memtables.\n      (2) Shard block and table caches 16-ways.\n\n      Benchmark for evaluating this change:\n      $ db_bench --benchmarks=fillseq1,readrandom --threads=$n\n      (fillseq1 is a small hack to make sure fillseq runs once regardless\n      of number of threads specified on the command line).\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@49 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit ab323f7e1ec53749653967e7d6a2fa1c922334f2\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue Aug 16 01:21:01 2011 +0000\n\n    Bugfixes for iterator and documentation.\n\n    - Fix bug in Iterator::Prev where it would return the wrong key.\n      Fixes issues 29 and 30.\n\n    - Added a tweak to testharness to allow running just some tests.\n\n    - Fixing two minor documentation errors based on issues 28 and 25.\n\n    - Cleanup; fix namespaces of export-to-C code.\n      Also fix one \"const char*\" vs \"char*\" mismatch.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@48 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit a05525d13beea3ae56d979fa5fffa9de3652db61\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Sat Aug 6 00:19:37 2011 +0000\n\n    @23023120\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@47 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 021ee9c32be65c298de20adb021ba6066e674200\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Fri Aug 5 20:40:49 2011 +0000\n\n    C binding for leveldb, better readseq benchmark for SQLite.\n\n    - Added a C binding for LevelDB.\n      May be useful as a stable ABI that can be used by\n      programs that keep leveldb in a shared library,\n      or for JNI API.\n\n    - Replaced SQLite's readseq benchmark to a more efficient version.\n      SQLite readseq speeds increased by about a factor of 2x\n      from the previous version. Also updated benchmark page to\n      reflect readseq speed up.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@46 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 1bfbe76b4e3677c6ba5cff0a94b7c90a47d58d25\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Fri Jul 29 21:35:05 2011 +0000\n\n    Improved benchmark, fixed bugs and SQLite parameters.\n\n    - Based on suggestions on the sqlite-users mailing list,\n      we removed the superfluous index on the primary key\n      for SQLite's benchmarks, and turned write-ahead logging\n      (\"WAL\") on. This led to performance improvements for SQLite.\n\n    - Based on a suggestion by Florian Weimer on the leveldb\n      mailing list, we disabled hard drive write-caching via\n      hdparm when testing synchronous writes. This led to\n      performance losses for LevelDB and Kyoto TreeDB.\n\n    - Fixed a mistake in 2.A.->Random where the bar sizes\n      were switched for Kyoto TreeDB and SQLite.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@45 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit b9ef9141ba31410fbe21c2c2eb0b8fefaec95be7\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Jul 27 14:29:59 2011 +0000\n\n    Minor typos in benchmark page.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@44 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit e8dee348b69111c7bbdfb176eb3484a0e9f5cc73\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Jul 27 04:39:46 2011 +0000\n\n    Minor edit in benchmark page.\n\n    (Baseline comparison does not make sense for large values.)\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@43 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 3cc27381f7ed346b6edf0dd15749b699881d2327\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Jul 27 01:56:52 2011 +0000\n\n    Setting SVN mime-type for benchmark page.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@42 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit e301f17c2f2c07f588decc723cbad6d6a4237183\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Jul 27 01:49:08 2011 +0000\n\n    Adding doctype to benchmark page so Google Code displays it as HTML.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@41 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit f122c6dfbb4afacd0ac39f95106da81f8a714e72\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Jul 27 01:46:25 2011 +0000\n\n    Adding FreeBSD support, removing Chromium files, adding benchmark.\n\n    - LevelDB patch for FreeBSD. This resolves Issue 22.\n      Contributed by dforsythe (thanks!).\n\n    - Removing Chromium-specific files.\n      They are now going to live in the Chromium repository.\n\n    - Adding a benchmark page comparing LevelDB performance\n      to SQLite and Kyoto Cabinet's TreeDB, along with\n      code to generate the benchmarks.\n      Thanks to Kevin Tseng for compiling the benchmarks,\n      and Scott Hess and Mikio Hirabayashi for their\n      help and advice.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@40 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 60bd8015f21fdb63d5409b1191f8ea9d8f1a1b87\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Thu Jul 21 02:40:18 2011 +0000\n\n    Speed up Snappy uncompression, new Logger interface.\n\n    - Removed one copy of an uncompressed block contents changing\n      the signature of Snappy_Uncompress() so it uncompresses into a\n      flat array instead of a std::string.\n\n      Speeds up readrandom ~10%.\n\n    - Instead of a combination of Env/WritableFile, we now have a\n      Logger interface that can be easily overridden applications\n      that want to supply their own logging.\n\n    - Separated out the gcc and Sun Studio parts of atomic_pointer.h\n      so we can use 'asm', 'volatile' keywords for Sun Studio.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@39 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 6872ace90110799f87402cbc594c4cbf1bc474c7\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue Jul 19 23:36:47 2011 +0000\n\n    Sun Studio support, and fix for test related memory fixes.\n\n    - LevelDB patch for Sun Studio\n      Based on a patch submitted by Theo Schlossnagle - thanks!\n      This fixes Issue 17.\n\n    - Fix a couple of test related memory leaks.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@38 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 6699c7ebe68fba9673ea7a78b54e0eb558102301\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Fri Jul 15 00:20:57 2011 +0000\n\n    Small tweaks and bugfixes for Issue 18 and 19.\n\n    Slight tweak to the no-overlap optimization: only push to\n    level 2 to reduce the amount of wasted space when the same\n    small key range is being repeatedly overwritten.\n\n    Fix for Issue 18: Avoid failure on Windows by avoiding\n    deletion of lock file until the end of DestroyDB().\n\n    Fix for Issue 19: Disregard sequence numbers when checking for\n    overlap in sstable ranges. This fixes issue 19: when writing\n    the same key over and over again, we would generate a sequence\n    of sstables that were never merged together since their sequence\n    numbers were disjoint.\n\n    Don't ignore map/unmap error checks.\n\n    Miscellaneous fixes for small problems Sanjay found while diagnosing\n    issue/9 and issue/16 (corruption_testr failures).\n    - log::Reader reports the record type when it finds an unexpected type.\n    - log::Reader no longer reports an error when it encounters an expected\n      zero record regardless of the setting of the \"checksum\" flag.\n    - Added a missing forward declaration.\n    - Documented a side-effects of larger write buffer sizes\n      (longer recovery time).\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@37 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit ed154f6dc4f5ca82f20d2f3d4383cdbb07872594\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Thu Jun 30 23:17:03 2011 +0000\n\n    Fixed a snappy compression wrapper bug (passing wrong variable).\n\n    Change atomic_pointer.h to prefer a memory barrier based\n    implementation over a <cstdatomic> based implementation for\n    the following reasons:\n    (1) On a x86-32-bit gcc-4.4 build, <ctdatomic> was corrupting\n        the AtomicPointer.\n    (2) On a x86-64-bit gcc build, a <ctstdatomic> based acquire-load\n        takes ~15ns as opposed to the ~1ns for a memory-barrier\n        based implementation.\n\n    Fixes issue 9 (corruption_test fails)\n    http://code.google.com/p/leveldb/issues/detail?id=9\n\n    Fixes issue 16 (CorruptionTest.MissingDescriptor fails)\n    http://code.google.com/p/leveldb/issues/detail?id=16\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@36 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 85f0ab1975e5ddd7c387ee6cd4a95987dc6c27b3\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Jun 29 22:53:17 2011 +0000\n\n    Fixing Makefile issue reported in Issue 15 (misspelled flag)\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@35 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit f57e23351f416d15cb6dc2905f2abade5a632fc3\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Jun 29 00:30:50 2011 +0000\n\n    Platform detection during build, plus compatibility patches for machines without <cstdatomic>.\n\n    This revision adds two major changes:\n    1. build_detect_platform which generates build_config.mk\n       with platform-dependent flags for the build process\n    2. /port/atomic_pointer.h with anAtomicPointerimplementation\n       for platforms without <cstdatomic>\n\n    Some of this code is loosely based on patches submitted to the\n    LevelDB mailing list at https://groups.google.com/forum/#!forum/leveldb\n    Tip of the hat to Dave Smith and Edouard A, who both sent patches.\n\n    The presence of Snappy (http://code.google.com/p/snappy/) and\n    cstdatomic are now both detected in the build_detect_platform\n    script (1.) which gets executing during make.\n\n    For (2.), instead of broadly importing atomicops_* from Chromium or\n    the Google performance tools, we chose to just implement AtomicPointer\n    and the limited atomic load and store operations it needs.\n    This resulted in much less code and fewer files - everything is\n    contained in atomic_pointer.h.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@34 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit e0cbd242cb3fe6b1b0ed5756fd0a2e3f5efdabd0\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Jun 22 18:45:39 2011 +0000\n\n    Fixing issue 11: version_set_test.cc was missing\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@33 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit ccf0fcd5c2946f9228068d657a56d91af9671575\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Jun 22 02:36:45 2011 +0000\n\n    A number of smaller fixes and performance improvements:\n\n    - Implemented Get() directly instead of building on top of a full\n      merging iterator stack.  This speeds up the \"readrandom\" benchmark\n      by up to 15-30%.\n\n    - Fixed an opensource compilation problem.\n      Added --db=<name> flag to control where the database is placed.\n\n    - Automatically compact a file when we have done enough\n      overlapping seeks to that file.\n\n    - Fixed a performance bug where we would read from at least one\n      file in a level even if none of the files overlapped the key\n      being read.\n\n    - Makefile fix for Mac OSX installations that have XCode 4 without XCode 3.\n\n    - Unified the two occurrences of binary search in a file-list\n      into one routine.\n\n    - Found and fixed a bug where we would unnecessarily search the\n      last file when looking for a key larger than all data in the\n      level.\n\n    - A fix to avoid the need for trivial move compactions and\n      therefore gets rid of two out of five syncs in \"fillseq\".\n\n    - Removed the MANIFEST file write when switching to a new\n      memtable/log-file for a 10-20% improvement on fill speed on ext4.\n\n    - Adding a SNAPPY setting in the Makefile for folks who have\n      Snappy installed. Snappy compresses values and speeds up writes.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@32 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 80e5b0d944b7651046f8b0e795065eca02a01e59\nAuthor: hans@chromium.org <hans@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue Jun 7 14:40:26 2011 +0000\n\n    sync with upstream @21706995\n\n    Fixed race condition reported by Dave Smit (dizzyd@dizzyd,com)\n    on the leveldb mailing list.  We were not signalling\n    waiters after a trivial move from level-0.  The result was\n    that in some cases (hard to reproduce), a write would get\n    stuck forever waiting for the number of level-0 files to drop\n    below its hard limit.\n\n    The new code is simpler: there is just one condition variable\n    instead of two, and the condition variable is signalled after\n    every piece of background work finishes.  Also, all compaction\n    work (including for manual compactions) is done in the\n    background thread, and therefore we can remove the\n    \"compacting_\" variable.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@31 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit c4f551494838681f49cc8fb52baaf417d1fea2b1\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Thu Jun 2 00:00:37 2011 +0000\n\n    sync with upstream @21627589\n\n    Minor changes:\n    * Reformat the bodies of the iterator interface routines in IteratorWrapper to\n      make them a bit easier to read\n    * Switched the default in the leveldb makefile to be optimized mode, rather\n      than debug mode\n    * Fix build problem in chromium port\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@30 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 740d8b3d009462eed28a94ea516d667e735b0dfc\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Sat May 28 00:53:58 2011 +0000\n\n    Update from upstream @21551990\n\n    * Patch LevelDB to build for OSX and iOS\n    * Fix race condition in memtable iterator deletion.\n    * Other small fixes.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@29 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit da7990950787257cb312ca562ce5977749afc3e9\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Sat May 21 02:17:43 2011 +0000\n\n    sync with upstream @ 21409451\n\n    Check the NEWS file for details of what changed.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@28 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 3c111335a760d8d82414b91a54f740df09dd4f8f\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue May 3 03:10:59 2011 +0000\n\n    make windows include /Iport\\win in dependent projects\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@27 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit be9f061d2fd5e2d66ba17a70c135a153c584c8c1\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Thu Apr 21 01:54:51 2011 +0000\n\n    pull in hans' mac build fix\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@26 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit ccb2cbef3aa60e19da135bba01ac4aba7697661d\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Apr 20 22:50:04 2011 +0000\n\n    fix build on at least linux\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@25 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit ba6dac0e809b249532a7465f71a00ccda307161d\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Apr 20 22:48:11 2011 +0000\n\n    @20776309\n    * env_chromium.cc should not export symbols.\n    * Fix MSVC warnings.\n    * Removed large value support.\n    * Fix broken reference to documentation file\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@24 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 69c6d38342a1fab5f7f2921aa2e9c0e60ba90e35\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue Apr 19 23:11:15 2011 +0000\n\n    reverting disastrous MOE commit, returning to r21\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@23 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit b743906eeabc925f3e824d91a9747012bf249e2f\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue Apr 19 23:01:25 2011 +0000\n\n    Revision created by MOE tool push_codebase.\n    MOE_MIGRATION=\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@22 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit b409afe968b6917574ec08e02c4bf6e6f722e3ca\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Mon Apr 18 23:15:58 2011 +0000\n\n    chmod a-x\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@21 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit f779e7a5d89f853fc5224f9eb8103ca2b8f2f555\nAuthor: dgrogan@chromium.org <dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue Apr 12 19:38:58 2011 +0000\n\n    @20602303.  Default file permission is now 755.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@20 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 9e33808a26cbbb38008fcd10b74c4d05d78d0aa1\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Mar 30 18:49:03 2011 +0000\n\n    Fix last commit\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@19 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 4671a695fca3a8fb00cdf4609cd8238cf12ed13d\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Mar 30 18:35:40 2011 +0000\n\n    Move include files into a leveldb subdir.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@18 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 4d66fd5af3c9f7680be4b03599415c53f32065bc\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue Mar 29 22:41:11 2011 +0000\n\n    Upstream change.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@17 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit e2da744e1241fec301351ca34730877e6cff722a\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Mon Mar 28 20:43:44 2011 +0000\n\n    Upstream changes.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@16 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit e11bdf1935bc5a46db790ef414110149009f8c6a\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Fri Mar 25 20:27:43 2011 +0000\n\n    Upstream changes\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@15 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 8303bb1b33a4db1d688d32f9be10976b0b54f209\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue Mar 22 23:24:02 2011 +0000\n\n    Pull from upstream.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@14 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 6d243ebf79640525a94fab280efeb5a46c994af6\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue Mar 22 19:07:54 2011 +0000\n\n    Make GetTestDirectory threadsafe within Chromium and make it work on Windows.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@13 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 13b72af77b2b7fed156c26107476f84d35e4481d\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Tue Mar 22 18:32:49 2011 +0000\n\n    More changes from upstream.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@12 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 9df5aa892ecf4f418f6777bcc18651ecd5f0d679\nAuthor: gabor@google.com <gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Mon Mar 21 23:10:11 2011 +0000\n\n    Removing unneeded build files\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@11 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 4bcb23118777b0666ad518c6b730a953d8f7bc89\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Mon Mar 21 21:06:49 2011 +0000\n\n    more upstream changes\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@10 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 0e389254905fc246271ca991e203d95031c93559\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Mon Mar 21 19:40:57 2011 +0000\n\n    Sync in bug fixes\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@9 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 24ba6148694a68d010fe0c515616390abc12c5c4\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Mon Mar 21 19:09:55 2011 +0000\n\n    Changes to get Snappy working\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@8 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 795dd1d5505cbd3103de4774903bc0382d2a942f\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Mon Mar 21 18:13:39 2011 +0000\n\n    Oops, another file that didn't upload correctly.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@7 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit b77de951b8aaa0be23edd6f19b9fafd1ac541e2e\nAuthor: hans@chromium.org <hans@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Mon Mar 21 17:30:49 2011 +0000\n\n    Set mime-type to text/css on doc/doc.css files.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@6 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit b434018d632be6d9b620373c5946467338b726cf\nAuthor: hans@chromium.org <hans@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Mon Mar 21 17:22:12 2011 +0000\n\n    Set mime-type to text/html on .html files.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@5 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 7a02caf2a40d466c8da9b20c3589ba67c456d556\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Fri Mar 18 23:03:49 2011 +0000\n\n    Fix typo in Makefile.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@4 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 347d4628c15be09e57a25c7a6c03c55639b6369c\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Fri Mar 18 22:47:28 2011 +0000\n\n    Directory paths were off a bit.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@3 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit f67e15e50f392625b4097caf22e8be1b0fe96013\nAuthor: jorlow@chromium.org <jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Fri Mar 18 22:37:00 2011 +0000\n\n    Initial checkin.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@2 62dab493-f737-651d-591e-8d6aee1b9529\n\ncommit 54f1fd7eef101db1dfb2bb66a59083c45a38aa4a\nAuthor: (no author) <(no author)@62dab493-f737-651d-591e-8d6aee1b9529>\nDate:   Wed Mar 2 17:37:17 2011 +0000\n\n    Initial directory structure.\n\n    git-svn-id: https://leveldb.googlecode.com/svn/trunk@1 62dab493-f737-651d-591e-8d6aee1b9529", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-08 20:35:22+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-02-08 19:36:39+01:00", "committer_id": 6163, "message": "Address cabal sdist's compaints and use configure to build leveldb", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-02-08 19:36:39+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-31 23:13:45+01:00", "committer_id": 6163, "message": "Bundle leveldb via subtree-merge instead of submodule", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-31 23:13:45+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-31 23:04:51+01:00", "committer_id": 6163, "message": "Make example a literate haskell narrative", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-31 23:04:51+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-26 09:18:49+01:00", "committer_id": 6163, "message": "Pull in latest leveldb commits", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-26 09:18:49+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-26 00:49:32+01:00", "committer_id": 6163, "message": "whitespace", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-26 00:49:32+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-26 00:48:01+01:00", "committer_id": 6163, "message": "Address hlint complaints and rename some vars", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-26 00:48:01+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-26 00:09:40+01:00", "committer_id": 6163, "message": "Rename test to example, add bracket to ensure snapshot deallocation", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-26 00:09:40+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-23 09:44:54+01:00", "committer_id": 6163, "message": "Intricately support cache again", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-23 09:44:54+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-20 20:18:26+01:00", "committer_id": 6163, "message": "Improve Makefile", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-20 20:04:27+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-20 19:58:31+01:00", "committer_id": 6163, "message": "Drop support for userland comparator and happily import unsafe again\n\nComparator required to 'foreign import safe', which is intrinsically concurrent\nand thus led to byzantine behavior when the LevelDB was shutdown uncleanly and\nthe C++ code tries to repair things on re-open.", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-20 19:58:31+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-16 01:45:17+01:00", "committer_id": 6163, "message": "Free hs funptrs after destroying the comparator function pointer (rts bug?)", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-16 01:45:17+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-12 01:04:04+01:00", "committer_id": 6163, "message": "Fix memory management for comparator", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-12 01:04:04+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-09 23:33:35+01:00", "committer_id": 6163, "message": "Add snapshots, property reads, approximate sizes", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-09 23:33:35+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-07 23:09:41+01:00", "committer_id": 6163, "message": "Add memory deallocation for FunPtrs, add Cache, improve Ptr types", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-07 23:09:41+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-07 12:46:25+01:00", "committer_id": 6163, "message": "Drop C comparators\n\nCan't figure out how to pass FunPtr to C function to C", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-07 12:46:25+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-06 09:46:10+01:00", "committer_id": 6163, "message": "Discard safe/unsafe modules and craft foreign imports safe/unsafe so test passes", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-06 09:46:10+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-05 00:03:44+01:00", "committer_id": 6163, "message": "Add basic C comparators and split binding into safe and unsafe variant", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-05 00:03:44+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-05 00:03:05+01:00", "committer_id": 6163, "message": "Improve build", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-05 00:03:05+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2012-01-03 19:35:15+01:00", "committer_id": 6163, "message": "Add user-defined comparator support, requires foreign imports to be declared 'safe'", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2012-01-03 19:35:15+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2011-12-29 17:10:38+01:00", "committer_id": 6163, "message": "Add 'repair'", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2011-12-29 17:10:31+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2011-12-29 17:07:44+01:00", "committer_id": 6163, "message": "ws", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2011-12-29 17:07:44+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2011-12-29 13:11:07+01:00", "committer_id": 6163, "message": "Basic features", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2011-12-29 13:11:07+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 14237994, "repo_owner_id": 4493, "commit_at": "2014-07-30 15:52:02+02:00", "committer_id": 6163, "message": "Add debian packaging", "repo_description": "Templating language with similar syntax and features to Liquid or Jinja2.", "generate_at": "2014-07-30 15:52:02+02:00", "author_id": 6163, "repo_name": "brendanhay/ede"}, {"repo_id": 14237994, "repo_owner_id": 4493, "commit_at": "2014-07-29 12:02:49+02:00", "committer_id": 6163, "message": "Add a minimalistic CLI", "repo_description": "Templating language with similar syntax and features to Liquid or Jinja2.", "generate_at": "2014-07-29 12:02:49+02:00", "author_id": 6163, "repo_name": "brendanhay/ede"}, {"repo_id": 14237994, "repo_owner_id": 4493, "commit_at": "2014-07-30 15:51:49+02:00", "committer_id": 6163, "message": "Make tests pass", "repo_description": "Templating language with similar syntax and features to Liquid or Jinja2.", "generate_at": "2014-07-30 15:44:55+02:00", "author_id": 6163, "repo_name": "brendanhay/ede"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-03-25 22:46:51+01:00", "committer_id": 6163, "message": "Remove unused imports", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-03-25 22:46:51+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-03-25 22:43:45+01:00", "committer_id": 19864447, "message": "Merge pull request #32 from chris-martin/patch-1\n\nRemove MonadResource's duplication of Base re-exports", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-03-25 22:43:45+01:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-04-13 08:18:06+02:00", "committer_id": 19864447, "message": "Merge pull request #33 from chris-martin/pr/typo-checksums\n\nfix typo: checksuyms -> checksums", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-04-13 08:18:06+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-09 01:28:45+02:00", "committer_id": 6163, "message": "Revert travis stack / containers experiment due to missing libstdc++", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-09 01:28:45+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-08 23:33:32+02:00", "committer_id": 6163, "message": "Address `cabal check` complaints", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-08 23:33:32+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-08 23:55:39+02:00", "committer_id": 6163, "message": "Use stack/cabal travis matrix, as per:\n\nhttps://raw.githubusercontent.com/commercialhaskell/stack/master/doc/travis-complex.yml", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-08 23:55:39+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-09 00:18:23+02:00", "committer_id": 6163, "message": "Install dependencies on OSX builds", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-09 00:18:23+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-08 22:44:23+02:00", "committer_id": 6163, "message": "Add GHC 8.0.1 to travis build", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-08 22:44:23+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-08 22:43:22+02:00", "committer_id": 6163, "message": "Add stack.yaml", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-08 22:43:22+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-08 23:06:46+02:00", "committer_id": 6163, "message": "Install recent version of cabal-install on travis", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-08 23:06:46+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-08 23:49:28+02:00", "committer_id": 6163, "message": "Patch release 0.6.5", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-08 23:49:28+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-09 00:12:13+02:00", "committer_id": 6163, "message": "Add packages", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-09 00:12:13+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-08 23:13:47+02:00", "committer_id": 6163, "message": "Fix PATH", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-08 23:13:47+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 3068539, "repo_owner_id": 6163, "commit_at": "2017-05-08 23:09:39+02:00", "committer_id": 6163, "message": "hvr's cabal version is only major.minor", "repo_description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "generate_at": "2017-05-08 23:09:39+02:00", "author_id": 6163, "repo_name": "kim/leveldb-haskell"}, {"repo_id": 5066723, "repo_owner_id": 4493, "commit_at": "2013-04-01 12:09:03+02:00", "committer_id": 6163, "message": "Un-mention gmetric in Readme", "repo_description": "Send metrics to Ganglia, Graphite, and statsd", "generate_at": "2013-04-01 12:09:03+02:00", "author_id": 6163, "repo_name": "brendanhay/network-metrics"}, {"repo_id": 5066723, "repo_owner_id": 4493, "commit_at": "2013-04-01 12:06:56+02:00", "committer_id": 6163, "message": "Bumping version to 0.3.0", "repo_description": "Send metrics to Ganglia, Graphite, and statsd", "generate_at": "2013-04-01 12:06:56+02:00", "author_id": 6163, "repo_name": "brendanhay/network-metrics"}, {"repo_id": 5066723, "repo_owner_id": 4493, "commit_at": "2013-04-01 12:04:52+02:00", "committer_id": 6163, "message": "Remove non-functional gmetric executable", "repo_description": "Send metrics to Ganglia, Graphite, and statsd", "generate_at": "2013-04-01 12:04:52+02:00", "author_id": 6163, "repo_name": "brendanhay/network-metrics"}, {"repo_id": 5066723, "repo_owner_id": 4493, "commit_at": "2013-03-31 12:45:26+02:00", "committer_id": 6163, "message": "Ensure network byte-order of port number\n\nFixes issue #3", "repo_description": "Send metrics to Ganglia, Graphite, and statsd", "generate_at": "2013-03-29 15:26:44+01:00", "author_id": 6163, "repo_name": "brendanhay/network-metrics"}, {"repo_id": 5066723, "repo_owner_id": 4493, "commit_at": "2012-12-22 14:34:14+01:00", "committer_id": 6163, "message": "Hide 'close' from Network.Socket, it conflicts with 'close' defined here\n\n- 'close' got exposed in Network.Socket v2.4.0.1, which we're pulling in due to\n  no version constraint\n- this seems also the reason why the package doesn't build on hackage", "repo_description": "Send metrics to Ganglia, Graphite, and statsd", "generate_at": "2012-12-22 14:25:22+01:00", "author_id": 6163, "repo_name": "brendanhay/network-metrics"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-08-13 00:56:44+02:00", "committer_id": 6163, "message": "Cosmetica", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-08-13 00:56:44+02:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-08-12 23:48:01+02:00", "committer_id": 6163, "message": "Rename run to withBouquet", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-08-12 23:48:01+02:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-08-12 22:22:33+02:00", "committer_id": 6163, "message": "Start tracking (still unreleased) resource-pool master as subtree-merge", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-08-12 22:22:33+02:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-08-12 22:12:49+02:00", "committer_id": 6163, "message": "Update .gitignore", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-08-12 22:12:49+02:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-07-16 03:40:26-07:00", "committer_id": 6163, "message": "Merge pull request #4 from brendanhay/significant-arguments\n\nretry: moving the Bouquet parameter to the least significant argument position", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-07-16 03:40:26-07:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-10 22:27:03+01:00", "committer_id": 6163, "message": "Add Readme and travis config", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-10 22:27:03+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-04 00:12:04+01:00", "committer_id": 6163, "message": "Allow reading the current latencies for monitoring", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-04 00:12:04+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-03 20:46:12+01:00", "committer_id": 6163, "message": "More commentary", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-03 20:46:12+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-03 20:42:47+01:00", "committer_id": 6163, "message": "Add some documentation", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-03 20:42:47+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-03 15:55:06+01:00", "committer_id": 6163, "message": "Reconsider reconsider", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-03 15:55:06+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-03 01:36:17+01:00", "committer_id": 6163, "message": "Make sample window configurable", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-03 01:36:17+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-02 21:59:30+01:00", "committer_id": 6163, "message": "Wrap \"Le Bouquet\" in a TVar\n\nThis seems a bit cumbersome, but will allow for concurrent modification of the\npools held. Useful for implementing a \"auto-discovery\" feature.", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-02 21:59:30+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-02 02:32:24+01:00", "committer_id": 6163, "message": "Fix exit condition", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-02 02:32:24+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-25 09:53:14+01:00", "committer_id": 6163, "message": "Fix semantics of latencyAware", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-25 09:53:14+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-22 10:05:04+01:00", "committer_id": 6163, "message": "Licensing ceremony", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-22 10:05:04+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-22 01:42:30+01:00", "committer_id": 6163, "message": "Abstract over the host respectively pool map key", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-22 01:42:30+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-22 01:24:52+01:00", "committer_id": 6163, "message": "Docs, MonadPlus and Alternative instances, retry the monad, not the IO action", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-22 01:24:52+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-20 23:23:41+01:00", "committer_id": 6163, "message": "Better readable guards instead of if then else, avoid unboxing/boxing", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-20 23:23:41+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-09-11 23:52:58+02:00", "committer_id": 6163, "message": "Add error counter", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-09-11 23:52:58+02:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-08-13 00:45:13+02:00", "committer_id": 6163, "message": "Add 'pinned' and 'random' 'Choice's, optimize random access to use Vector", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-08-13 00:43:18+02:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-08-12 23:44:54+02:00", "committer_id": 6163, "message": "cabal is kinda resistant to make", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-08-12 23:44:54+02:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-08-12 23:39:23+02:00", "committer_id": 6163, "message": "Add Makefile and bump resource-pool to private version", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-08-12 23:39:23+02:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-08-12 22:13:50+02:00", "committer_id": 6163, "message": "Start over without a monad stack", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-08-12 22:13:50+02:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-07-16 03:41:16-07:00", "committer_id": 6163, "message": "Merge pull request #5 from brendanhay/exports\n\nBouquetConf: export constructor so configuration can be specified", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-07-16 03:41:16-07:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-03 16:56:11+01:00", "committer_id": 6163, "message": "Simplify reconsider again", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-03 16:56:11+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-03 02:03:05+01:00", "committer_id": 6163, "message": "Not too efficient function to update the bouquet of host pools", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-03 02:03:05+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-03-02 22:10:04+01:00", "committer_id": 6163, "message": "Use just writeTVar in destroy", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-03-02 22:08:17+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-24 18:36:30+01:00", "committer_id": 6163, "message": "Retry loop should now be tail recursive", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-24 18:36:30+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-22 01:43:52+01:00", "committer_id": 6163, "message": "Remove unused LambdaCase pragma", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-22 01:43:52+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-22 01:31:29+01:00", "committer_id": 6163, "message": "Abstract over the resource type", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-22 01:31:29+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-20 23:48:53+01:00", "committer_id": 6163, "message": "Drop ErrorT and use MonadCatchIO instead", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-20 23:48:53+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-20 23:23:57+01:00", "committer_id": 6163, "message": "Reshuffle pools only when sample window becomes full", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-20 23:23:57+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 8354064, "repo_owner_id": 6163, "commit_at": "2013-02-20 00:10:56+01:00", "committer_id": 6163, "message": "Initial version", "repo_description": "Resource Pool Ikebana", "generate_at": "2013-02-20 00:10:56+01:00", "author_id": 6163, "repo_name": "kim/bouquet"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-21 17:35:24+02:00", "committer_id": 6163, "message": "Add 'bug-reports' section to cabal file + change git URL to https", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-21 17:35:24+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-21 17:15:59+02:00", "committer_id": 6163, "message": "Merge branch 'release/0.2.0' into develop", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-21 17:15:59+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-21 17:15:24+02:00", "committer_id": 6163, "message": "Release 0.2.0", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-21 17:15:24+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-21 16:54:23+02:00", "committer_id": 6163, "message": "Documentation.\n\nAlso, disregard the dubious 500ns added by taia_now when converting from Libtai\n-- libtai / daemontools (tai64nlocal) do the same.", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-21 16:54:23+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-21 13:29:08+02:00", "committer_id": 6163, "message": "Badges", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-21 13:29:08+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-21 12:34:31+02:00", "committer_id": 6163, "message": "Add 'description' field to cabal file.\n\nTo satisfy 'cabal check', once more.", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-21 12:34:31+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-21 12:28:56+02:00", "committer_id": 6163, "message": "Satisfy 'cabal check'", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-21 12:28:56+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-21 12:28:40+02:00", "committer_id": 6163, "message": "Add minimal README", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-21 12:28:40+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-21 12:11:48+02:00", "committer_id": 6163, "message": "Fix properties", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-21 12:11:48+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-20 16:54:03+02:00", "committer_id": 6163, "message": "Trigger build", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-20 16:54:03+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-20 16:52:00+02:00", "committer_id": 6163, "message": "Add .travis.yml", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-20 16:52:00+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-06-20 16:40:10+02:00", "committer_id": 6163, "message": "Clarify libtai compatibility", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-06-20 16:40:10+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:12:35+02:00", "committer_id": 6163, "message": "Merge branch 'release/0.1.0.3' into develop", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:12:35+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:12:16+02:00", "committer_id": 6163, "message": "0.1.0.3", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:12:16+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:11:18+02:00", "committer_id": 6163, "message": "Hackage demands MPL-2.0, not just MPL", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:11:18+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:10:55+02:00", "committer_id": 6163, "message": "Merge branch 'master' into develop", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:10:55+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:07:11+02:00", "committer_id": 6163, "message": "Merge branch 'release/0.1.0.2' into develop", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:07:11+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:07:06+02:00", "committer_id": 6163, "message": "Merge branch 'release/0.1.0.2'", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:07:06+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:06:54+02:00", "committer_id": 6163, "message": "0.1.0.2", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:06:54+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:06:15+02:00", "committer_id": 6163, "message": "Fix license", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:06:15+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:00:21+02:00", "committer_id": 6163, "message": "Merge branch 'release/0.1.0.1' into develop", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:00:21+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:00:15+02:00", "committer_id": 6163, "message": "Merge branch 'release/0.1.0.1'", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:00:15+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 17:00:03+02:00", "committer_id": 6163, "message": "0.1.0.1", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 17:00:03+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 16:59:08+02:00", "committer_id": 6163, "message": "Set dependency lower bounds", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 16:59:08+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 16:51:10+02:00", "committer_id": 6163, "message": "Bump stackage snapshot", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 16:51:10+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 16:41:21+02:00", "committer_id": 6163, "message": "Prepare release 0.1.0", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 16:41:21+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-26 16:12:57+02:00", "committer_id": 6163, "message": "Compatibility with libtai\n\nThis means we drop support for 'AbsoluteTime' and always go through 'POSIXTime'\nfor conversions, where 1970-01-01 00:00:00 UTC == 1970-01-01 00:00:10 TAI.", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-26 16:12:57+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-19 15:04:55+02:00", "committer_id": 6163, "message": "Overflow handling", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-19 15:04:55+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2016-04-19 14:48:33+02:00", "committer_id": 6163, "message": "Additions:\n\n* `Bounded` instance\n* conversion to/from `POSIXTime`\n* overflow handling\n* addition and subtraction sans `Integer` arithmetic", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2016-04-19 14:48:33+02:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-14 10:30:50+01:00", "committer_id": 6163, "message": "Add `addTAI64` and `diffTAI64`", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-14 10:30:15+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-09 23:47:15+01:00", "committer_id": 6163, "message": "Add smart constructor for TAI64 (and hide the real one)", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-09 23:47:15+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-09 23:35:28+01:00", "committer_id": 6163, "message": "Clean up stack.yaml", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-09 23:35:28+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-09 23:35:01+01:00", "committer_id": 6163, "message": "Faster arbitrary", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-09 23:35:01+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-09 23:33:43+01:00", "committer_id": 6163, "message": "Fix toAbsolute time for 2^62 <= s < 2^63", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-09 23:33:43+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-08 15:00:22+01:00", "committer_id": 6163, "message": "Add QuickCheck properties\n\n* via doctests\n* fix some stuff accordingly\n* ... still some rounding errors, not sure what to do with those", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-08 15:00:22+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-03 10:26:03+01:00", "committer_id": 6163, "message": "More docs", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-03 10:26:03+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-02 12:27:30+01:00", "committer_id": 6163, "message": "Indentation", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-02 12:27:30+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-02 12:26:49+01:00", "committer_id": 6163, "message": "Fix some haddock markup", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-02 12:26:49+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-02 12:25:46+01:00", "committer_id": 6163, "message": "Move up one level", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-02 12:25:46+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-02 12:22:42+01:00", "committer_id": 6163, "message": "Documentation", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-02 12:22:42+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-02 12:22:27+01:00", "committer_id": 6163, "message": "Properly gitignore vim swap files", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-02 12:22:27+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 47966321, "repo_owner_id": 6163, "commit_at": "2015-12-01 12:55:44+01:00", "committer_id": 6163, "message": "Initial", "repo_description": "D.J. Bernstein's TAI64 labels, in Haskell", "generate_at": "2015-12-01 12:55:44+01:00", "author_id": 6163, "repo_name": "kim/tai64"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-04-06 21:26:32+02:00", "committer_id": 6163, "message": "Upgrade to Scala 2.8.1 and replace SynchronousQueue with SyncVar", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-04-06 21:26:32+02:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-04-03 22:49:51+02:00", "committer_id": 6163, "message": "Make I/O asynchronous & allow to timeout on reply promise", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-04-03 22:49:51+02:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-04-03 22:49:18+02:00", "committer_id": 6163, "message": "Return the correct queue for reply promise", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-04-03 22:49:18+02:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-04-03 22:48:23+02:00", "committer_id": 6163, "message": "Note todo, remove debug stuff", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-04-03 22:48:23+02:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-04-01 22:30:34+02:00", "committer_id": 6163, "message": "Housekeeping\n\n- organize imports nicer\n- remove some funky indirection in ReplyPromise\n- remove tracing output", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-04-01 22:30:34+02:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-04-01 22:23:45+02:00", "committer_id": 6163, "message": "Make foreach reentrant.\n\n- hoping that, from a thread safety perspective, a public `lazy val` executing\n  a (potentially expensive) operation to obtain its value is equivalent to the\n  `ResourceHolder` pattern in plain Java.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-04-01 22:23:45+02:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-04-01 21:27:38+02:00", "committer_id": 6163, "message": "whitespace & ignores", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-04-01 21:27:01+02:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-24 09:21:47+01:00", "committer_id": 6163, "message": "Update gitignore, Readme", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-24 09:21:47+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 22:28:36+01:00", "committer_id": 6163, "message": "Add license and readme.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 22:17:51+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 21:55:38+01:00", "committer_id": 6163, "message": "Delineate example.\n\n- Connected should really be a Monad\n- funny scalaz doesn't seem to have bracket", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 21:55:38+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 20:52:19+01:00", "committer_id": 6163, "message": "Incorporate latest changes.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 20:52:19+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 20:50:48+01:00", "committer_id": 6163, "message": "Add implicit conversion from document to user query.\n\nThis is for convenience when constructing simpler queries. Also looks more consistent with other API functions that take a document as a query.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 20:50:48+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 20:48:05+01:00", "committer_id": 6163, "message": "Add generic run, don't expose 'real' runs.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 20:48:05+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 20:22:13+01:00", "committer_id": 6163, "message": "Change field 'operator' from '=:' to ':='.\n\nNow a 'pimp' on String (the field key), and only available when Bson.Implicits._ are imported.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 20:22:13+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 20:07:33+01:00", "committer_id": 6163, "message": "Default values for getLastError.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 20:07:33+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 20:07:09+01:00", "committer_id": 6163, "message": "Formatting.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 20:07:09+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 20:06:53+01:00", "committer_id": 6163, "message": "Alternate empty construction.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 20:06:53+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 20:06:05+01:00", "committer_id": 6163, "message": "Implement ObjectId.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 20:06:05+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2011-02-18 20:04:07+01:00", "committer_id": 6163, "message": "Use mutable map for efficiency.", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2011-02-18 20:04:07+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 1405876, "repo_owner_id": 6163, "commit_at": "2010-11-08 20:56:03+01:00", "committer_id": 6163, "message": "first working version", "repo_description": "\"Pure Scala\" driver for MongoDB", "generate_at": "2010-11-08 20:56:03+01:00", "author_id": 6163, "repo_name": "kim/lomongo"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-19 18:24:10+01:00", "committer_id": 6163, "message": "Merge pull request #4 from kim/take3\n\nRewrite based on Disruptor 3.x series", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-19 18:24:10+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-17 10:46:21+01:00", "committer_id": 6163, "message": "Avoid bounds check on vector", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-17 10:46:21+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-16 10:37:21+01:00", "committer_id": 6163, "message": "Correctly index 7 ints into byte array", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-16 10:37:21+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-16 09:59:56+01:00", "committer_id": 6163, "message": "Remove unused file / module", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-16 09:59:56+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-16 09:56:41+01:00", "committer_id": 6163, "message": "No need for atomicModifyIORef", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-16 09:56:41+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-16 09:53:53+01:00", "committer_id": 6163, "message": "Performance tweaks", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-16 09:53:53+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-09 23:34:40+01:00", "committer_id": 6163, "message": "Craft out own Sequence based on a pinned MutableByteArray#", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-08 23:05:43+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-08 22:02:19+01:00", "committer_id": 6163, "message": "Split Sequencer into single / multi threaded versions", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-08 22:02:19+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-08 21:58:10+01:00", "committer_id": 6163, "message": "Reduce contention", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-08 21:58:10+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-08 21:57:42+01:00", "committer_id": 6163, "message": "Delete superfluous false sharing test", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-08 21:57:42+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-03-06 21:48:10+01:00", "committer_id": 6163, "message": "Implement Disruptor 3", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-03-06 13:42:57+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-02-24 11:51:19+01:00", "committer_id": 6163, "message": "Hide modmask from user", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-02-24 11:51:19+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-02-23 14:41:25+01:00", "committer_id": 6163, "message": "Rename MVector -> RingBuffer", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-02-23 14:41:25+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-02-23 14:38:56+01:00", "committer_id": 6163, "message": "Formatting", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-02-23 14:33:56+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-02-23 14:31:27+01:00", "committer_id": 6163, "message": "Fix lowercase directory names, changed criterion API", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-02-23 14:31:27+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-02-23 14:26:47+01:00", "committer_id": 6163, "message": "Update .gitignore", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-02-23 14:26:47+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-02-23 14:25:42+01:00", "committer_id": 6163, "message": "Remove typeclass", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-02-23 14:25:42+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2015-02-23 14:15:52+01:00", "committer_id": 6163, "message": "Move to atomic-primops instead of IORefCAS", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2015-02-23 14:15:52+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-12-04 00:49:01+01:00", "committer_id": 6163, "message": "Travis needs more hs-src-dirs ?!", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-12-04 00:49:01+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-12-04 00:42:15+01:00", "committer_id": 6163, "message": "I think now I got it (travis)", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-12-04 00:42:15+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-26 08:53:18+01:00", "committer_id": 6163, "message": "Giving up on travis, 2nd", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-26 08:53:18+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-26 08:46:29+01:00", "committer_id": 6163, "message": "Newlines", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-26 08:46:29+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-26 01:08:08+01:00", "committer_id": 6163, "message": "So, cabal-dev doesn't work on travis", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-26 01:08:08+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-26 00:48:32+01:00", "committer_id": 6163, "message": "And another cabal-dev build, ok", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-26 00:48:32+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-26 00:43:51+01:00", "committer_id": 6163, "message": "Mmm, additional configure required?", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-26 00:43:51+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-26 00:20:29+01:00", "committer_id": 6163, "message": "Once more", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-26 00:20:29+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-26 00:17:46+01:00", "committer_id": 6163, "message": "Try to convince travis of cabal-dev", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-26 00:17:46+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-23 09:50:02+01:00", "committer_id": 6163, "message": "Ok, I give up, travis", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-23 09:50:02+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-23 09:46:07+01:00", "committer_id": 6163, "message": "C'mon travis", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-23 09:46:07+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-23 09:41:09+01:00", "committer_id": 6163, "message": "One more try: use --benchmark-options to pass RTS flags", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-23 09:41:09+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-23 09:36:51+01:00", "committer_id": 6163, "message": "Ok, forget about teaching travis to run benchmarks", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-23 09:36:51+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-23 09:30:18+01:00", "committer_id": 6163, "message": "Gah!", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-23 09:30:18+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-23 09:22:47+01:00", "committer_id": 6163, "message": "Gah", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-23 09:22:47+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-23 09:19:11+01:00", "committer_id": 6163, "message": "Makefile, maybe, Travis?", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-23 09:19:11+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-23 09:03:23+01:00", "committer_id": 6163, "message": "Tweak travis.yml", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-23 09:03:23+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-23 01:49:28+01:00", "committer_id": 6163, "message": "Try making Travis run the perf executable directly", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-23 01:49:28+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-23 01:43:16+01:00", "committer_id": 6163, "message": "Travis-ify", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-23 01:40:31+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-21 09:12:10+01:00", "committer_id": 6163, "message": "Typo", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-21 09:12:10+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-21 00:26:57+01:00", "committer_id": 6163, "message": "Bump version", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-21 00:26:57+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-21 00:21:08+01:00", "committer_id": 6163, "message": "Update Readme", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-21 00:21:08+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-21 00:15:59+01:00", "committer_id": 6163, "message": "Remove unsafeFreeze with fused mapM_ over the mutable vector\n\nFixes #2", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-21 00:15:59+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-17 23:41:00+01:00", "committer_id": 6163, "message": "Get rid of unnecessary where", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-17 23:41:00+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-11-17 23:25:46+01:00", "committer_id": 6163, "message": "Fix silly bug which would always consume the tail of the vector", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-11-17 23:25:46+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-06-20 09:41:26+02:00", "committer_id": 6163, "message": "Nice printf of timings / tps, bump no. of iterations to lmax' value", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-06-20 09:41:26+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-06-20 01:13:28+02:00", "committer_id": 6163, "message": "Restructure to add all operations to the RingBuffer typeclass\n\nAt the cost of some performance", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-06-20 01:13:28+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-06-18 21:59:18+02:00", "committer_id": 6163, "message": "Add batch publishing, remove RingBuffer instance for immutable Vectors", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-06-18 21:33:32+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-06-17 15:51:21+02:00", "committer_id": 6163, "message": "Use Int instead of Int64 -- it's the same range on 64bit, but faster", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-06-17 15:51:21+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-06-13 12:27:42+02:00", "committer_id": 6163, "message": "Use -funbox-strict-fields instead of pragma", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-06-13 12:27:42+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-06-12 22:30:39+02:00", "committer_id": 6163, "message": "Drop \"cache-line padding\" on Sequence\n\nAdd benchmark to verify it has no effect in this setup", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-06-12 22:30:39+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-06-12 21:30:31+02:00", "committer_id": 6163, "message": "Rename Buffer RingBuffer", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-06-12 21:30:31+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-06-12 02:02:42+02:00", "committer_id": 6163, "message": "Inline consumeFrom implementations", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-06-12 02:02:42+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-06-12 01:57:31+02:00", "committer_id": 6163, "message": "Fix build", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-06-12 01:57:31+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-06-12 00:26:11+02:00", "committer_id": 6163, "message": "Implement Disruptor 2", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-06-12 00:26:11+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2012-05-29 13:28:24+02:00", "committer_id": 6163, "message": "Don't use llvm, reduce no. of iterations in test", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2012-05-29 13:28:24+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-11-06 21:59:26+01:00", "committer_id": 6163, "message": "Clean up some profiling code, implement multicast test, experiment with LLVM", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-11-06 21:59:26+01:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-24 08:33:14+02:00", "committer_id": 6163, "message": "Cosmetica", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-24 08:33:14+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-23 09:30:50+02:00", "committer_id": 6163, "message": "whitespace", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-23 09:30:50+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-23 09:01:52+02:00", "committer_id": 6163, "message": "Update Readme", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-23 09:01:52+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-23 08:50:21+02:00", "committer_id": 6163, "message": "Adapt no. iterations / buffer size to exact settings of java test", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-23 08:50:21+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-22 23:33:53+02:00", "committer_id": 6163, "message": "Use 50M iterations (like in the disruptor paper), yielding 7.45M ops/sec", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-22 23:33:53+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-22 23:27:35+02:00", "committer_id": 6163, "message": "Adjust some settings, prevent warnings", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-22 23:27:35+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-22 23:27:11+02:00", "committer_id": 6163, "message": "Omit -prof to be able to use -N2, which yields 7.35M ops/sec", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-22 23:27:11+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-22 23:16:19+02:00", "committer_id": 6163, "message": "Use unsafeWrite on vector for slight performance improvement", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-22 23:16:19+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-19 20:54:15+02:00", "committer_id": 6163, "message": "Use unsafeSlice to achieve zero-copy slicing of the vector\n\nthroughput at 2.2M ops/sec\nnext up: analyze concurrency exploitation, which seems unsatisfying", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-19 20:54:15+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-18 00:49:56+02:00", "committer_id": 6163, "message": "Use Int64 instead of Int\n\nthroughput at 1.3M ops/sec", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-18 00:49:56+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-17 23:53:43+02:00", "committer_id": 6163, "message": "Ignore cabal-dev directory", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-17 23:53:43+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-17 23:53:19+02:00", "committer_id": 6163, "message": "Use pattern matching instead of record syntax and gain some memory footprint", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-17 23:53:19+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-17 10:02:50+02:00", "committer_id": 6163, "message": "Use rnf instead of print to force consumer, gives 1M ops/sec", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-17 10:02:50+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-16 23:47:39+02:00", "committer_id": 6163, "message": "Install instructions", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-16 23:46:54+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-16 23:39:34+02:00", "committer_id": 6163, "message": "Use mutable vector", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-16 23:39:34+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-11 23:31:57+02:00", "committer_id": 6163, "message": "Vector-based implementation. Better performance, but still not satisfying", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-11 23:31:57+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-11 09:43:39+02:00", "committer_id": 6163, "message": "Correct, but slow", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-11 09:43:39+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-08 18:44:56+02:00", "committer_id": 6163, "message": "Some progress", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-08 18:44:56+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-05 22:07:03+02:00", "committer_id": 6163, "message": "Move to Data package", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-05 22:07:03+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-05 09:07:20+02:00", "committer_id": 6163, "message": "Merge remote-tracking branch 'gist/master'", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-05 09:07:20+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-05 00:06:02-07:00", "committer_id": 6163, "message": "", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-05 00:06:02-07:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 3160787, "repo_owner_id": 6163, "commit_at": "2011-08-05 09:04:49+02:00", "committer_id": 6163, "message": "Initial", "repo_description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "generate_at": "2011-08-05 09:04:49+02:00", "author_id": 6163, "repo_name": "kim/data-ringbuffer"}, {"repo_id": 12241186, "repo_owner_id": 450574, "commit_at": "2013-09-28 11:42:13+02:00", "committer_id": 6163, "message": "Fix for bad PR #79", "repo_description": "Hackage-Server: A Haskell Package Repository", "generate_at": "2013-09-28 11:42:13+02:00", "author_id": 6163, "repo_name": "haskell/hackage-server"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2015-06-01 11:48:25+02:00", "committer_id": 6163, "message": "Bump version", "repo_description": null, "generate_at": "2015-06-01 11:48:25+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2015-06-01 11:48:04+02:00", "committer_id": 6163, "message": "'OtherLicense' no longer needed", "repo_description": null, "generate_at": "2015-06-01 11:48:04+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2015-06-01 11:45:38+02:00", "committer_id": 6163, "message": "Relax version bounds. Actually, no bounds", "repo_description": null, "generate_at": "2015-06-01 11:45:38+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-06-11 12:49:12+02:00", "committer_id": 6163, "message": "Add dist target and CABAL_SANDBOX env var", "repo_description": null, "generate_at": "2014-06-11 12:49:12+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-06-10 15:24:56+02:00", "committer_id": 6163, "message": "Allow attoparsec 0.12", "repo_description": null, "generate_at": "2014-06-10 15:24:56+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-06-10 15:24:47+02:00", "committer_id": 6163, "message": "Fix Makefile", "repo_description": null, "generate_at": "2014-06-10 15:24:47+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-28 11:21:21+02:00", "committer_id": 6163, "message": "Add (convenience) getters for Notification", "repo_description": null, "generate_at": "2014-04-28 11:21:21+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-28 09:19:31+02:00", "committer_id": 6163, "message": "Notification parses subtly different", "repo_description": null, "generate_at": "2014-04-28 09:19:31+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-23 16:31:41+02:00", "committer_id": 6163, "message": "Force the lazy 'Text' for 'dispatch'\n\nConcurrent calls will then get properly synchronized on the 'Handle'", "repo_description": null, "generate_at": "2014-04-23 16:31:41+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-15 08:06:54+02:00", "committer_id": 6163, "message": "Retardedly, COLLECTD_INTERVAL is passed as a double", "repo_description": null, "generate_at": "2014-04-15 08:06:54+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-14 13:36:50+02:00", "committer_id": 6163, "message": "Expose Typ-from-Value-type (for inconvenience)", "repo_description": null, "generate_at": "2014-04-14 13:36:50+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-14 13:30:42+02:00", "committer_id": 6163, "message": "Expose Ident/NotifIdent for inconvenience", "repo_description": null, "generate_at": "2014-04-14 13:30:42+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-14 13:28:01+02:00", "committer_id": 6163, "message": "Provide proper records for Notification-/Identifier", "repo_description": null, "generate_at": "2014-04-14 13:28:01+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-14 13:19:47+02:00", "committer_id": 6163, "message": "Allow inconvenience", "repo_description": null, "generate_at": "2014-04-14 13:19:47+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-11 16:30:08+02:00", "committer_id": 6163, "message": "Quote PutNotif message", "repo_description": null, "generate_at": "2014-04-11 16:30:08+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-11 11:25:12+02:00", "committer_id": 6163, "message": "Don't require timestamp", "repo_description": null, "generate_at": "2014-04-11 11:25:12+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-11 11:23:49+02:00", "committer_id": 6163, "message": "join", "repo_description": null, "generate_at": "2014-04-11 11:23:49+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-11 10:14:41+02:00", "committer_id": 6163, "message": "PUTNOTIF support", "repo_description": null, "generate_at": "2014-04-11 10:14:41+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-11 09:50:37+02:00", "committer_id": 6163, "message": "Safe env", "repo_description": null, "generate_at": "2014-04-11 09:50:37+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-10 15:49:35+02:00", "committer_id": 6163, "message": "Re-export PlainText (and Types) from Plugin module", "repo_description": null, "generate_at": "2014-04-10 15:49:35+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-10 15:35:39+02:00", "committer_id": 6163, "message": "Add a module for plugin writers, scrapping some boilerplate", "repo_description": null, "generate_at": "2014-04-10 15:35:39+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2014-04-08 16:30:20+02:00", "committer_id": 6163, "message": "Initial", "repo_description": null, "generate_at": "2014-04-08 16:30:20+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2017-04-27 15:37:27+02:00", "committer_id": 6163, "message": "Bump version", "repo_description": null, "generate_at": "2017-04-27 15:37:27+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2017-04-27 15:36:52+02:00", "committer_id": 6163, "message": "Minor simplification and silence GHC 8 warnings", "repo_description": null, "generate_at": "2017-04-27 15:36:52+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 18561505, "repo_owner_id": 6163, "commit_at": "2017-04-27 15:32:11+02:00", "committer_id": 6163, "message": "Add stack.yaml", "repo_description": null, "generate_at": "2017-04-27 15:32:11+02:00", "author_id": 6163, "repo_name": "kim/hs-collectd"}, {"repo_id": 11406347, "repo_owner_id": 4493, "commit_at": "2014-07-10 17:36:52+02:00", "committer_id": 6163, "message": "Add support for the \"Maintenance Windows API\"", "repo_description": "Haskell PagerDuty API Client", "generate_at": "2014-07-10 17:36:52+02:00", "author_id": 6163, "repo_name": "brendanhay/pagerduty"}, {"repo_id": 11406347, "repo_owner_id": 4493, "commit_at": "2014-05-21 16:14:40+02:00", "committer_id": 6163, "message": "Un-export datatype (was exported for debugging purposes only)", "repo_description": "Haskell PagerDuty API Client", "generate_at": "2014-05-21 16:14:40+02:00", "author_id": 6163, "repo_name": "brendanhay/pagerduty"}, {"repo_id": 11406347, "repo_owner_id": 4493, "commit_at": "2014-05-21 16:10:03+02:00", "committer_id": 6163, "message": "Add \"Services API\" + substantial interface rework", "repo_description": "Haskell PagerDuty API Client", "generate_at": "2014-05-21 15:58:49+02:00", "author_id": 6163, "repo_name": "brendanhay/pagerduty"}, {"repo_id": 11406347, "repo_owner_id": 4493, "commit_at": "2014-05-15 17:29:48+02:00", "committer_id": 6163, "message": "Fix issues:\n\n* unauthenticated requests don't use the subdomain, so don't carry in env\n* otoh, let API impls pass a different host.\n* in fact, let them create a base Request\n* http-client doesn't change the port when 'secure', so set to 443\n* event submission response is an object", "repo_description": "Haskell PagerDuty API Client", "generate_at": "2014-05-15 17:29:48+02:00", "author_id": 6163, "repo_name": "brendanhay/pagerduty"}, {"repo_id": 11406347, "repo_owner_id": 4493, "commit_at": "2014-05-05 09:59:26+02:00", "committer_id": 6163, "message": "Remove Hashable instances again, add more useful Ord instances", "repo_description": "Haskell PagerDuty API Client", "generate_at": "2014-05-05 09:59:26+02:00", "author_id": 6163, "repo_name": "brendanhay/pagerduty"}, {"repo_id": 11406347, "repo_owner_id": 4493, "commit_at": "2014-05-05 09:43:49+02:00", "committer_id": 6163, "message": "Provide Hashable instances for ServiceKey + IncidentKey", "repo_description": "Haskell PagerDuty API Client", "generate_at": "2014-05-05 09:43:49+02:00", "author_id": 6163, "repo_name": "brendanhay/pagerduty"}, {"repo_id": 11406347, "repo_owner_id": 4493, "commit_at": "2014-04-25 11:53:52+02:00", "committer_id": 6163, "message": "Restructure modules, track authentication capability in phantom type", "repo_description": "Haskell PagerDuty API Client", "generate_at": "2014-04-25 10:47:50+02:00", "author_id": 6163, "repo_name": "brendanhay/pagerduty"}, {"repo_id": 11406347, "repo_owner_id": 4493, "commit_at": "2014-04-02 16:48:45+02:00", "committer_id": 6163, "message": "Require aeson 0.7\n\n+ minor change to make it actually work", "repo_description": "Haskell PagerDuty API Client", "generate_at": "2014-04-02 16:48:45+02:00", "author_id": 6163, "repo_name": "brendanhay/pagerduty"}, {"repo_id": 80643406, "repo_owner_id": 9668725, "commit_at": "2017-09-12 07:16:37.000-07:00", "committer_id": 1313787, "message": "Fix `CanonicalRank` default signature for GHC 8.2 (#32)\n\nGHC 8.2 became more restrictive when checking default signatures, demanding an\r\nexplicit equality constraint here. See also:\r\n\r\nhttps://github.com/ekmett/lens/issues/712\r\n\r\nReferenced there:\r\nhttps://ghc.haskell.org/trac/ghc/ticket/13258\r\nhttps://ghc.haskell.org/trac/ghc/ticket/13249", "repo_description": " Haskell Protobuf Implementation", "generate_at": "2017-09-12 16:16:37.000+02:00", "author_id": 6163, "repo_name": "awakesecurity/proto3-suite"}, {"repo_id": 80643406, "repo_owner_id": 9668725, "commit_at": "2017-09-12 14:23:26.000-07:00", "committer_id": 1313787, "message": "Tighten upper bound on QuickCheck (#31)\n\nQuickCheck 2.10 moves some instances to the `quickcheck-instances` package,\r\nnotably for `Natural`.", "repo_description": " Haskell Protobuf Implementation", "generate_at": "2017-09-12 23:23:26.000+02:00", "author_id": 6163, "repo_name": "awakesecurity/proto3-suite"}], "bio": null, "commits": 693, "company": null, "following_list": [443, 1061, 2183, 4270, 8277, 14751, 17395, 23374, 28357, 41144, 49415, 132165, 1734615], "public_gists": 1, "name": "Kim Altintop", "created_at": "2008-04-10 12:44:17", "email": "kim.altintop@gmail.com", "following": 13, "login": "kim", "repo_list": [{"fork": true, "license": "Mozilla Public License 2.0", "has_wiki": false, "description": "A comprehensive Amazon Web Services SDK for Haskell.", "language": "Haskell", "default_branch": "develop", "created_at": "2015-04-15 14:53:06", "forks_count": 0, "updated_at": "2015-04-15 14:53:12", "pushed_at": "2015-05-26 11:37:23", "full_name": "kim/amazonka", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 34000100, "size": 79408}, {"fork": true, "license": "Apache License 2.0", "has_wiki": true, "description": "Cassandra Java Client", "language": "Java", "default_branch": "master", "created_at": "2013-01-26 19:34:22", "forks_count": 0, "updated_at": "2013-01-29 17:08:53", "pushed_at": "2013-01-27 12:24:17", "full_name": "kim/astyanax", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 7842511, "size": 4395}, {"fork": false, "license": null, "has_wiki": true, "description": "An Asynchronous Cassandra Client for Scala", "language": "Scala", "default_branch": "master", "created_at": "2012-07-04 22:34:40", "forks_count": 0, "updated_at": "2015-11-05 23:48:46", "pushed_at": "2013-03-10 21:35:13", "full_name": "kim/bob", "open_issues": 0, "stargazers_count": 3, "owner_id": 6163, "id": 4893772, "size": 192}, {"fork": false, "license": "Mozilla Public License 2.0", "has_wiki": false, "description": "Resource Pool Ikebana", "language": "Haskell", "default_branch": "master", "created_at": "2013-02-22 09:06:41", "forks_count": 0, "updated_at": "2013-10-17 11:40:25", "pushed_at": "2013-09-11 21:53:06", "full_name": "kim/bouquet", "open_issues": 2, "stargazers_count": 1, "owner_id": 6163, "id": 8354064, "size": 192}, {"fork": true, "license": null, "has_wiki": true, "description": "A pull-based approach to streaming data.", "language": "Haskell", "default_branch": "master", "created_at": "2012-12-14 15:40:11", "forks_count": 0, "updated_at": "2013-01-13 16:20:58", "pushed_at": "2012-12-14 15:49:50", "full_name": "kim/conduit", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 7167573, "size": 2601}, {"fork": true, "license": "GNU General Public License v3.0", "has_wiki": true, "description": "JNI bindings for cryptobox with support for cross-compilation to Android.", "language": "Java", "default_branch": "develop", "created_at": "2016-06-23 08:14:38", "forks_count": 0, "updated_at": "2016-06-23 08:14:38", "pushed_at": "2016-06-28 14:35:26", "full_name": "kim/cryptobox-jni", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 61787450, "size": 99}, {"fork": false, "license": "Apache License 2.0", "has_wiki": true, "description": "Haskell implementation of a Ringbuffer inspired by the \"Disruptor Pattern\"", "language": "Haskell", "default_branch": "master", "created_at": "2012-01-12 08:42:36", "forks_count": 3, "updated_at": "2018-06-03 08:06:54", "pushed_at": "2015-03-19 17:24:10", "full_name": "kim/data-ringbuffer", "open_issues": 0, "stargazers_count": 26, "owner_id": 6163, "id": 3160787, "size": 270}, {"fork": true, "license": "Mozilla Public License 2.0", "has_wiki": true, "description": "Type checked templates with similar syntax and features to liquid or jinja2", "language": null, "default_branch": "master", "created_at": "2014-07-29 10:03:57", "forks_count": 0, "updated_at": "2014-06-17 17:35:15", "pushed_at": "2014-07-30 13:52:16", "full_name": "kim/ede", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 22375639, "size": 568}, {"fork": false, "license": "Mozilla Public License 2.0", "has_wiki": false, "description": "Haskell etcd Client", "language": "Haskell", "default_branch": "master", "created_at": "2016-02-17 15:43:01", "forks_count": 0, "updated_at": "2016-02-18 08:26:44", "pushed_at": "2016-08-17 12:37:38", "full_name": "kim/etcdpp", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 51933695, "size": 89}, {"fork": true, "license": "MIT License", "has_wiki": true, "description": "Ruby library for the Gearman distributed job system", "language": "Ruby", "default_branch": "master", "created_at": "2009-05-30 09:42:32", "forks_count": 3, "updated_at": "2012-12-12 22:26:37", "pushed_at": "2010-07-19 12:19:30", "full_name": "kim/evented-gearman-ruby", "open_issues": 0, "stargazers_count": 10, "owner_id": 6163, "id": 214136, "size": 258}, {"fork": false, "license": "Other", "has_wiki": true, "description": null, "language": "Haskell", "default_branch": "master", "created_at": "2013-11-13 12:00:38", "forks_count": 1, "updated_at": "2018-01-07 19:56:47", "pushed_at": "2018-01-07 19:58:16", "full_name": "kim/ex-pool", "open_issues": 0, "stargazers_count": 6, "owner_id": 6163, "id": 14362785, "size": 11}, {"fork": true, "license": "Other", "has_wiki": true, "description": "Gearman C Server", "language": "C", "default_branch": "master", "created_at": "2009-07-15 15:19:13", "forks_count": 1, "updated_at": "2012-12-12 23:31:54", "pushed_at": "2009-07-28 10:25:37", "full_name": "kim/gearman-server", "open_issues": 0, "stargazers_count": 1, "owner_id": 6163, "id": 251922, "size": 922}, {"fork": true, "license": "MIT License", "has_wiki": true, "description": "The Git TextMate Bundle", "language": "Ruby", "default_branch": "master", "created_at": "2009-02-26 17:43:46", "forks_count": 0, "updated_at": "2016-05-09 04:11:08", "pushed_at": "2009-06-25 10:17:56", "full_name": "kim/git-tmbundle", "open_issues": 0, "stargazers_count": 3, "owner_id": 6163, "id": 138375, "size": 1217}, {"fork": true, "license": "GNU General Public License v2.0", "has_wiki": true, "description": "A gitk clone for OS X", "language": "Objective-C", "default_branch": "master", "created_at": "2009-05-26 06:51:33", "forks_count": 1, "updated_at": "2012-12-12 22:20:06", "pushed_at": "2009-06-14 19:16:12", "full_name": "kim/gitx", "open_issues": 0, "stargazers_count": 1, "owner_id": 6163, "id": 210295, "size": 4331}, {"fork": true, "license": "Other", "has_wiki": true, "description": "The new Hackage server aka \"Hackage 2\"", "language": "Haskell", "default_branch": "master", "created_at": "2013-09-28 09:23:53", "forks_count": 0, "updated_at": "2013-09-29 16:45:11", "pushed_at": "2013-09-28 09:48:45", "full_name": "kim/hackage-server", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 13170369, "size": 4392}, {"fork": false, "license": "Other", "has_wiki": true, "description": "Haskell client for https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL", "language": "Haskell", "default_branch": "master", "created_at": "2011-02-24 08:03:58", "forks_count": 0, "updated_at": "2013-12-17 10:03:08", "pushed_at": "2011-03-31 19:56:56", "full_name": "kim/handlersocket", "open_issues": 0, "stargazers_count": 1, "owner_id": 6163, "id": 1405839, "size": 104}, {"fork": false, "license": "GNU Lesser General Public License v3.0", "has_wiki": true, "description": "Haskell bindings to libhdfs", "language": "Haskell", "default_branch": "master", "created_at": "2011-06-14 08:24:04", "forks_count": 1, "updated_at": "2017-08-04 09:41:48", "pushed_at": "2017-08-07 08:55:22", "full_name": "kim/hdfs-haskell", "open_issues": 0, "stargazers_count": 10, "owner_id": 6163, "id": 1893270, "size": 9}, {"fork": false, "license": "Mozilla Public License 2.0", "has_wiki": true, "description": null, "language": "Haskell", "default_branch": "master", "created_at": "2014-04-08 14:31:16", "forks_count": 0, "updated_at": "2017-04-27 13:37:57", "pushed_at": "2017-04-27 13:37:59", "full_name": "kim/hs-collectd", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 18561505, "size": 20}, {"fork": true, "license": "MIT License", "has_wiki": true, "description": "Kafka client for Haskell, including auto-rebalancing consumers", "language": "Haskell", "default_branch": "master", "created_at": "2018-01-30 10:59:51", "forks_count": 0, "updated_at": "2018-01-30 10:59:53", "pushed_at": "2018-01-15 07:36:35", "full_name": "kim/hw-kafka-client", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 119523813, "size": 250}, {"fork": true, "license": "Other", "has_wiki": true, "description": "Rack for JRuby and Java appservers", "language": "Ruby", "default_branch": "master", "created_at": "2008-09-20 14:37:58", "forks_count": 1, "updated_at": "2016-05-08 13:40:49", "pushed_at": "2008-09-19 13:34:39", "full_name": "kim/jruby-rack", "open_issues": 0, "stargazers_count": 2, "owner_id": 6163, "id": 54608, "size": 787}, {"fork": false, "license": "Mozilla Public License 2.0", "has_wiki": true, "description": "Haskell implementation of the Apache Kafka wire protocol", "language": "Haskell", "default_branch": "master", "created_at": "2015-04-09 15:03:59", "forks_count": 0, "updated_at": "2017-10-25 18:13:44", "pushed_at": "2015-05-10 21:40:43", "full_name": "kim/kafka-protocol", "open_issues": 0, "stargazers_count": 2, "owner_id": 6163, "id": 33675540, "size": 216}, {"fork": false, "license": "Other", "has_wiki": true, "description": "Haskell bindings to LevelDB (https://github.com/google/leveldb)", "language": "Haskell", "default_branch": "master", "created_at": "2011-12-29 12:16:20", "forks_count": 36, "updated_at": "2018-06-24 02:59:17", "pushed_at": "2017-05-25 21:23:51", "full_name": "kim/leveldb-haskell", "open_issues": 0, "stargazers_count": 53, "owner_id": 6163, "id": 3068539, "size": 518}, {"fork": false, "license": "Other", "has_wiki": true, "description": "\"Pure Scala\" driver for MongoDB", "language": "Scala", "default_branch": "master", "created_at": "2011-02-24 08:22:42", "forks_count": 0, "updated_at": "2013-10-20 04:24:09", "pushed_at": "2011-04-06 19:28:14", "full_name": "kim/lomongo", "open_issues": 0, "stargazers_count": 2, "owner_id": 6163, "id": 1405876, "size": 120}, {"fork": true, "license": "Other", "has_wiki": false, "description": "An ActiveRecord database adapter that allows you to setup a \"master/slave\" environment", "language": "Ruby", "default_branch": "master", "created_at": "2011-06-08 08:47:07", "forks_count": 0, "updated_at": "2013-01-03 16:01:13", "pushed_at": "2011-08-10 15:58:29", "full_name": "kim/master_slave_adapter", "open_issues": 0, "stargazers_count": 1, "owner_id": 6163, "id": 1864342, "size": 169}, {"fork": true, "license": null, "has_wiki": true, "description": "Super simple job queue over AMPQ", "language": "Ruby", "default_branch": "master", "created_at": "2011-07-13 08:32:12", "forks_count": 1, "updated_at": "2014-03-10 16:34:38", "pushed_at": "2011-07-13 14:06:53", "full_name": "kim/minion", "open_issues": 0, "stargazers_count": 1, "owner_id": 6163, "id": 2040868, "size": 112}, {"fork": true, "license": "Mozilla Public License 2.0", "has_wiki": true, "description": "Send metrics to Ganglia, Graphite, and statsd", "language": "Haskell", "default_branch": "master", "created_at": "2012-12-22 13:31:38", "forks_count": 0, "updated_at": "2013-04-01 10:05:58", "pushed_at": "2013-04-01 10:05:57", "full_name": "kim/network-metrics", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 7286068, "size": 1533}, {"fork": true, "license": "Other", "has_wiki": false, "description": "Nix Packages collection", "language": "Nix", "default_branch": "master", "created_at": "2018-04-19 17:41:44", "forks_count": 0, "updated_at": "2018-04-19 17:42:17", "pushed_at": "2018-04-19 17:36:45", "full_name": "kim/nixpkgs", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 130251452, "size": 776725}, {"fork": true, "license": "Mozilla Public License 2.0", "has_wiki": true, "description": "Concurrent and efficient implementation of statsd in Haskell", "language": "Haskell", "default_branch": "master", "created_at": "2012-12-16 22:51:52", "forks_count": 0, "updated_at": "2013-10-05 21:59:03", "pushed_at": "2012-12-30 20:57:47", "full_name": "kim/numbersd", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 7196403, "size": 726}, {"fork": false, "license": "Apache License 2.0", "has_wiki": false, "description": "OpenTracing (https://opentracing.io) for Haskell (EXPERIMENTAL)", "language": "Haskell", "default_branch": "master", "created_at": "2017-09-15 12:29:19", "forks_count": 2, "updated_at": "2018-07-07 14:38:58", "pushed_at": "2018-07-07 14:38:57", "full_name": "kim/opentracing", "open_issues": 2, "stargazers_count": 19, "owner_id": 6163, "id": 103654611, "size": 234}, {"fork": true, "license": "Mozilla Public License 2.0", "has_wiki": true, "description": "Haskell PagerDuty API Client", "language": "Haskell", "default_branch": "master", "created_at": "2014-04-02 14:48:07", "forks_count": 0, "updated_at": "2014-07-10 15:37:15", "pushed_at": "2014-07-10 15:37:14", "full_name": "kim/pagerduty", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 18369875, "size": 282}, {"fork": true, "license": "Other", "has_wiki": true, "description": "A high-performance striped resource pooling implementation for Haskell", "language": "Haskell", "default_branch": "master", "created_at": "2013-01-27 18:10:23", "forks_count": 0, "updated_at": "2013-11-28 10:18:56", "pushed_at": "2013-11-13 09:04:22", "full_name": "kim/pool", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 7855857, "size": 120}, {"fork": true, "license": "Other", "has_wiki": true, "description": " Haskell Protobuf Implementation", "language": "Haskell", "default_branch": "master", "created_at": "2017-09-12 09:19:42", "forks_count": 0, "updated_at": "2017-09-12 09:19:44", "pushed_at": "2017-09-12 10:16:51", "full_name": "kim/proto3-suite", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 103249402, "size": 415}, {"fork": true, "license": "Other", "has_wiki": true, "description": "An implementation of Google's Protocol Buffers in Haskell.", "language": "Haskell", "default_branch": "master", "created_at": "2015-06-01 08:39:48", "forks_count": 0, "updated_at": "2015-06-01 08:39:48", "pushed_at": "2015-06-01 08:40:44", "full_name": "kim/protobuf", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 36648315, "size": 298}, {"fork": true, "license": null, "has_wiki": true, "description": "Atomic reference implementation for Ruby", "language": "Ruby", "default_branch": "master", "created_at": "2011-07-01 07:00:50", "forks_count": 0, "updated_at": "2013-01-03 19:27:14", "pushed_at": "2011-07-01 07:04:27", "full_name": "kim/ruby-atomic", "open_issues": 0, "stargazers_count": 1, "owner_id": 6163, "id": 1982193, "size": 106}, {"fork": false, "license": "Mozilla Public License 2.0", "has_wiki": true, "description": "Snappy framing format for Haskell", "language": "Haskell", "default_branch": "master", "created_at": "2013-08-20 21:03:32", "forks_count": 1, "updated_at": "2017-02-07 15:33:04", "pushed_at": "2018-02-14 21:59:00", "full_name": "kim/snappy-framing", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 12254165, "size": 29}, {"fork": false, "license": "Mozilla Public License 2.0", "has_wiki": true, "description": "FFI to some of libsodium's crypto_sign_* functions.", "language": null, "default_branch": "master", "created_at": "2014-07-15 08:25:29", "forks_count": 0, "updated_at": "2017-03-30 09:28:17", "pushed_at": "2014-07-15 08:27:25", "full_name": "kim/sodium-crypto-sign", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 21852247, "size": 120}, {"fork": false, "license": "Mozilla Public License 2.0", "has_wiki": false, "description": "D.J. Bernstein's TAI64 labels, in Haskell", "language": "Haskell", "default_branch": "develop", "created_at": "2015-12-14 09:56:26", "forks_count": 0, "updated_at": "2018-06-24 03:03:31", "pushed_at": "2016-06-21 15:35:53", "full_name": "kim/tai64", "open_issues": 0, "stargazers_count": 3, "owner_id": 6163, "id": 47966321, "size": 38}, {"fork": true, "license": null, "has_wiki": true, "description": "Warbler chirpily constructs .war files of your Rails applications.", "language": "Ruby", "default_branch": "master", "created_at": "2008-09-15 19:21:50", "forks_count": 0, "updated_at": "2016-05-08 13:26:40", "pushed_at": "2008-08-29 22:24:54", "full_name": "kim/warbler", "open_issues": 0, "stargazers_count": 2, "owner_id": 6163, "id": 52899, "size": 23386}, {"fork": true, "license": "Other", "has_wiki": true, "description": "Snap integration for the websockets library", "language": "Haskell", "default_branch": "master", "created_at": "2013-10-28 16:58:02", "forks_count": 0, "updated_at": "2013-10-31 15:53:50", "pushed_at": "2013-10-28 16:58:37", "full_name": "kim/websockets-snap", "open_issues": 0, "stargazers_count": 0, "owner_id": 6163, "id": 13932307, "size": 94}, {"fork": false, "license": "Other", "has_wiki": true, "description": "A little experiment: a zookept MVar", "language": "Haskell", "default_branch": "master", "created_at": "2011-06-24 22:22:49", "forks_count": 0, "updated_at": "2013-10-07 08:14:44", "pushed_at": "2011-11-27 14:49:25", "full_name": "kim/zkvar", "open_issues": 0, "stargazers_count": 1, "owner_id": 6163, "id": 1950103, "size": 100}]}