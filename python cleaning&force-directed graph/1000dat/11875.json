{"hirable": null, "public_repos": 34, "is_suspicious": false, "updated_at": "2018-06-01 04:15:07", "id": 11875, "blog": "", "followers": 36, "location": "Orange County, CA", "follower_list": [820873, 17863221, 5877145, 2669298, 19429471, 3076393, 30740734, 8297625, 7959374, 11875511, 4255469, 1715155, 13164182, 6948067, 103407, 27804554, 14812047, 28499717, 36444870, 2480998, 16059621, 28588989, 12484065, 774613, 1573114, 16329872, 9768711, 21003920, 35722536, 1796060, 6048593, 38270043, 9430255, 247452, 13420623, 40027669], "type": "User", "commit_list": [{"repo_id": 33228789, "repo_owner_id": 3602038, "commit_at": "2017-10-30 19:58:15.000-07:00", "committer_id": 11875, "message": "Fix meta length parsing for >127 byte entries\n\nIn find_note, the meta_len was hardcoded as a single byte encoding, but per\nthe spec and some files with long comments and copyrights, it is actually\nencoded as a varlen.  Use the varlen parser (which defaults to the old\nbehavior of 1-byte for <128 len fields) instead.", "repo_description": "Convert MIDI files to a simplified time-ordered sequence of note commands", "generate_at": "2017-10-30 19:58:15.000-07:00", "author_id": 11875, "repo_name": "LenShustek/miditones"}, {"repo_id": 93212110, "repo_owner_id": 1388441, "commit_at": "2017-09-10 14:19:59.000-10:00", "committer_id": 1388441, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": "ESP8266/ESP32 WebServer", "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "bbx10/WebServer_tng"}, {"repo_id": 99585021, "repo_owner_id": 10682892, "commit_at": "2018-04-28 13:02:50.000-07:00", "committer_id": 11875, "message": "Add network versions of MB2100 class printers\n\nAdd a second entry to allow network scanning for the MB2100-class MFPs\nwhich have both USB and net connections possible.", "repo_description": "This project is a sane backend for the canon's scanner, based on the source code of scangearmp2.", "generate_at": "2018-04-28 13:02:50.000-07:00", "author_id": 11875, "repo_name": "Ordissimo/scangearmp2"}, {"repo_id": 123172245, "repo_owner_id": 26176033, "commit_at": "2016-06-02 10:03:09.000-07:00", "committer_id": 11875, "message": "Add multipart copy API and support inside s3 executable\n\nFor objects that are larger than 5GB, a simple COPY request will fail\non Amazon.  See\nhttp://docs.aws.amazon.com/AmazonS3/latest/dev/CopyingObjectsExamples.html\nfor a full description.  The Multipart Copy operation is very similar\nto the Multipart Upload operation with a -range header and no data in\neach part.", "repo_description": null, "generate_at": "2016-06-02 10:03:09.000-07:00", "author_id": 11875, "repo_name": "thiagorfernandes/thiago"}, {"repo_id": 123172245, "repo_owner_id": 26176033, "commit_at": "2016-02-25 15:16:15.000-08:00", "committer_id": 11875, "message": "Fix unitialized hostHeader element\n\nhostHeader, when not used with virtual host style URIs, would never\nbe set to any value.  This would result in occasional, random headers\nbeing sent to S3 depending on what was left over in memory.\n\nJust set to the \\0 string in normal case, this way we don't add it\nor garbage ourselves.", "repo_description": null, "generate_at": "2016-02-25 15:16:15.000-08:00", "author_id": 11875, "repo_name": "thiagorfernandes/thiago"}, {"repo_id": 123172245, "repo_owner_id": 26176033, "commit_at": "2015-12-18 08:40:21.000-08:00", "committer_id": 11875, "message": "Fix corrupted request time headers due to thread-unsafe gmtime\n\ngmtime() is used to convert the system time to GMT so that the S3\nrequest time can be appended to the headers.  It returns a pointer\nto a library static struct tm.  This works fine in the single-\nthreaded case, but can cause request times to be corrupted should\nlibs3 be called in a multithreaded use case.\n\nReplaces the gmtime() with a gmtime_r() call which takes a pointer\nto a thread-local struct tm, fixing the issue.", "repo_description": null, "generate_at": "2015-12-18 08:40:21.000-08:00", "author_id": 11875, "repo_name": "thiagorfernandes/thiago"}, {"repo_id": 22233714, "repo_owner_id": 1106737, "commit_at": "2016-06-02 10:03:09-07:00", "committer_id": 11875, "message": "Add multipart copy API and support inside s3 executable\n\nFor objects that are larger than 5GB, a simple COPY request will fail\non Amazon.  See\nhttp://docs.aws.amazon.com/AmazonS3/latest/dev/CopyingObjectsExamples.html\nfor a full description.  The Multipart Copy operation is very similar\nto the Multipart Upload operation with a -range header and no data in\neach part.", "repo_description": null, "generate_at": "2016-06-02 10:03:09-07:00", "author_id": 11875, "repo_name": "bji/libs3"}, {"repo_id": 22233714, "repo_owner_id": 1106737, "commit_at": "2016-02-25 15:16:15-08:00", "committer_id": 11875, "message": "Fix unitialized hostHeader element\n\nhostHeader, when not used with virtual host style URIs, would never\nbe set to any value.  This would result in occasional, random headers\nbeing sent to S3 depending on what was left over in memory.\n\nJust set to the \\0 string in normal case, this way we don't add it\nor garbage ourselves.", "repo_description": null, "generate_at": "2016-02-25 15:16:15-08:00", "author_id": 11875, "repo_name": "bji/libs3"}, {"repo_id": 22233714, "repo_owner_id": 1106737, "commit_at": "2015-12-18 08:40:21-08:00", "committer_id": 11875, "message": "Fix corrupted request time headers due to thread-unsafe gmtime\n\ngmtime() is used to convert the system time to GMT so that the S3\nrequest time can be appended to the headers.  It returns a pointer\nto a library static struct tm.  This works fine in the single-\nthreaded case, but can cause request times to be corrupted should\nlibs3 be called in a multithreaded use case.\n\nReplaces the gmtime() with a gmtime_r() call which takes a pointer\nto a thread-local struct tm, fixing the issue.", "repo_description": null, "generate_at": "2015-12-18 08:40:21-08:00", "author_id": 11875, "repo_name": "bji/libs3"}, {"repo_id": 41658705, "repo_owner_id": 4349050, "commit_at": "2018-02-18 22:12:40.000+03:00", "committer_id": 4349050, "message": "Remove compile warnings, move add'l consts to PMEM\n\nThere were some simple-to-fix compile warnings relating to missing\nimports and datatypes.  Add proper includes (and replace the hacked\nutil/time.h definition of timeval with the real one in our SDK).\n\nAlso migrate multiple constant strings with minimal code changes, freeing\naround 210 additional bytes of heap.", "repo_description": "axTLS port for ESP8266", "generate_at": "2018-01-17 11:49:29.000-08:00", "author_id": 11875, "repo_name": "igrr/axtls-8266"}, {"repo_id": 41658705, "repo_owner_id": 4349050, "commit_at": "2017-06-19 21:53:30.000-05:00", "committer_id": 4349050, "message": "Save ~3KB by moving strings out of RODATA\n\nConstant text strings actually take up SRAM space on the ESP8266\nbecause the .RODATA segment must be copied to RAM at startup since\nFLASH isn't byte-accessible.\n\nMove the constant format strings in a printf completely into FLASH\nand add a wrapper to copy it into a local stack-allocated space\nwhen needed, freeing up about 3100 bytes of RAM for use.  This doesn't\nmake FLASH usage any higher, either, since those strings were already\nbeing stored there (but never used after the power-on startup code).\n\nMinor edits required in some of the output/debug/tracing functions,\nbut no logic changed.", "repo_description": "axTLS port for ESP8266", "generate_at": "2017-06-19 12:34:20.000-07:00", "author_id": 11875, "repo_name": "igrr/axtls-8266"}, {"repo_id": 41658705, "repo_owner_id": 4349050, "commit_at": "2017-07-23 11:09:05.000+03:00", "committer_id": 4349050, "message": "Fix memory leak of ssl_ext_host_name\n\nssl_ext_set_host_name uses strdup() to set a hostname into the ssl_ext\nstructure, but this memory was not being freed in ssl_ext_free.\n\nAdd a one-liner to free it during the ssl_ext_free routine, fixing the leak.", "repo_description": "axTLS port for ESP8266", "generate_at": "2017-07-21 12:06:21.000-07:00", "author_id": 11875, "repo_name": "igrr/axtls-8266"}, {"repo_id": 114894262, "repo_owner_id": 26543933, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": null, "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "houhualong/ESP8266lib"}, {"repo_id": 114894262, "repo_owner_id": 26543933, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": null, "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "houhualong/ESP8266lib"}, {"repo_id": 114894262, "repo_owner_id": 26543933, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": null, "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "houhualong/ESP8266lib"}, {"repo_id": 114894262, "repo_owner_id": 26543933, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": null, "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "houhualong/ESP8266lib"}, {"repo_id": 10034826, "repo_owner_id": 3176016, "commit_at": "2017-10-06 00:15:52.000-07:00", "committer_id": 11875, "message": "Fix signed/unsigned issue on non-INTC processors\n\nSome ugliness in different GCC versions caused the interpolation steps\nto be calculated incorrectly.  Explicitly move through variable of the\nright type to ensure proper signedness of operations.", "repo_description": "Software Automatic Mouth - Tiny Speech Synthesizer ", "generate_at": "2017-10-05 23:33:16.000-07:00", "author_id": 11875, "repo_name": "s-macke/SAM"}, {"repo_id": 10034826, "repo_owner_id": 3176016, "commit_at": "2017-10-05 21:38:38.000-07:00", "committer_id": 11875, "message": "Fix unitialized variable in Render()\n\nValgrind found an error where initial samples consonants could start up\nwith an uninitialized variable, occasionally causing an error in the\nESP8266 library.  Set the problem variables to 0 for now to avoid the\nproblem.", "repo_description": "Software Automatic Mouth - Tiny Speech Synthesizer ", "generate_at": "2017-10-05 21:38:38.000-07:00", "author_id": 11875, "repo_name": "s-macke/SAM"}, {"repo_id": 10034826, "repo_owner_id": 3176016, "commit_at": "2017-10-05 20:03:44.000-07:00", "committer_id": 11875, "message": "Clean up variables that are really constant", "repo_description": "Software Automatic Mouth - Tiny Speech Synthesizer ", "generate_at": "2017-10-05 20:03:44.000-07:00", "author_id": 11875, "repo_name": "s-macke/SAM"}, {"repo_id": 10034826, "repo_owner_id": 3176016, "commit_at": "2017-10-05 19:33:19.000-07:00", "committer_id": 11875, "message": "Clean up GCC warnings for portability", "repo_description": "Software Automatic Mouth - Tiny Speech Synthesizer ", "generate_at": "2017-10-05 19:33:19.000-07:00", "author_id": 11875, "repo_name": "s-macke/SAM"}, {"repo_id": 10034826, "repo_owner_id": 3176016, "commit_at": "2017-10-04 13:39:27.000-07:00", "committer_id": 11875, "message": "Fix issue #3 from GitHub", "repo_description": "Software Automatic Mouth - Tiny Speech Synthesizer ", "generate_at": "2017-10-04 13:39:27.000-07:00", "author_id": 11875, "repo_name": "s-macke/SAM"}, {"repo_id": 10034826, "repo_owner_id": 3176016, "commit_at": "2017-10-04 12:30:54.000-07:00", "committer_id": 11875, "message": "8-bit formant generation w/real sampling\n\nOriginal code would send in a 4-bit value which would be repeated for\n1...5 times depending on the opcode delays in the specific path.  This\nmwans when you look at the waveform you'd see staircases between samples\nwhich add ugly harmonics.\n\nNew code generates 5 samples of the SIN wave for formants and uses those\nas needed instead of just using the same value 5 times.  Waveform coming\nout from code is now full 8-bits and 22khz for formants.", "repo_description": "Software Automatic Mouth - Tiny Speech Synthesizer ", "generate_at": "2017-10-04 12:30:54.000-07:00", "author_id": 11875, "repo_name": "s-macke/SAM"}, {"repo_id": 10034826, "repo_owner_id": 3176016, "commit_at": "2017-10-04 11:55:39.000-07:00", "committer_id": 11875, "message": "Replace sinus[] with a full 8-bit SIN wave\n\nAs part of the 4->8bit changes, replace the step-wise sin (upper nybble\nonly valid) with a full 8-bit signed wave from -127...127.", "repo_description": "Software Automatic Mouth - Tiny Speech Synthesizer ", "generate_at": "2017-10-04 11:55:39.000-07:00", "author_id": 11875, "repo_name": "s-macke/SAM"}, {"repo_id": 10034826, "repo_owner_id": 3176016, "commit_at": "2017-10-04 11:35:22.000-07:00", "committer_id": 11875, "message": "Remove multtable, replace with logical equivalent\n\nMulttable stored the result of a 8-bit signed multiply of the\nupper nibble of A (interpreted as signed) and the amplitude\nlower nibble (interpreted as unsigned), then divided by two.\nOn the 6510 this made sense, but in modern processors it's\nway faster and cleaner to simply do the multiply.\n\nReplace the render sin/sin/rect mixer with equivalent C code.", "repo_description": "Software Automatic Mouth - Tiny Speech Synthesizer ", "generate_at": "2017-10-04 11:35:22.000-07:00", "author_id": 11875, "repo_name": "s-macke/SAM"}, {"repo_id": 89555115, "repo_owner_id": 1801039, "commit_at": "2018-05-19 08:44:44.000-07:00", "committer_id": 11875, "message": "Handle NO_DOCS response during sane_read calls\n\nThe SANE API says that SANE_STATUS_NODOCS can be returned by sane_read.\nThis happens with scanner drivers that can't detect an ADF out of paper\nuntil the reads begin.\n\nWhen this happens, the frontend scanner should handle this as a normal\nend of documents, and not an error.\n\nWhen detected now, just clost the document and do not report a warning.", "repo_description": "Document Scanning Application", "generate_at": "2018-05-19 08:44:44.000-07:00", "author_id": 11875, "repo_name": "GNOME/simple-scan"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2016-09-10 09:13:18-07:00", "committer_id": 11875, "message": "Import existing code and update readme.\n\naquaweb.py implements a web server on a Raspberry Pi that can emulate a\nJAndy Aqualink (old) LCD display and a SpaLink control head.", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2016-09-10 09:13:18-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2016-09-10 08:50:46-07:00", "committer_id": 11875, "message": "Initial commit", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2016-09-10 08:50:46-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2017-02-16 13:21:58-08:00", "committer_id": 11875, "message": "Fix README file's bracket markup", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2017-02-16 13:21:58-08:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2017-08-13 06:59:08.000-07:00", "committer_id": 11875, "message": "Add GNU header to python file", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2017-08-13 06:59:08.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2017-08-13 06:44:36.000-07:00", "committer_id": 11875, "message": "Add auto-detect mode and enable Ctrl-C exiting\n\nWhen run w/no options, scan the bus and see which IDs the main control\nunit is probing.  Emulate those controllers.\n\nCtrl-C now exits the application properly, before it would hang and you'd\nneed to Ctrl-Z and then kill %1 to exit.", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2017-08-13 06:44:36.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2017-07-21 16:00:32.000-07:00", "committer_id": 11875, "message": "Fix brackets beign eaten in markdown", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2017-07-21 16:00:32.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2017-07-21 15:56:27.000-07:00", "committer_id": 11875, "message": "Initial writeup to document the protocol implemented\n\nWIP writeup describing the protocol I've observed and implemented\nin aquaweb.py, so that others can implement similar things without\nhaving to pore over the code.  But in case of discrepencies, the\ncode will be the final say since it's been working flawlessly for\nyears now in my own setup.", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2017-07-21 15:56:27.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2017-07-24 13:09:30.000-07:00", "committer_id": 11875, "message": "Add arguments, smarter checking, and defaults\n\nAdd an arguments and refactor to try and make it easier to extend for\nthe Jandy PDA addition that'll be included soon.  Also saner checking\nof the TTY in use and immediate failure with meaningful error message", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2017-07-24 10:50:13.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2017-07-24 19:29:20.000-07:00", "committer_id": 11875, "message": "Merge johnnytaco's work on PDA remote, now support all\n\nWe now support the square remote, the PDA-style remote, and the SpaLink\ncontrollers.  Refactor the screen() class to allow for a 3-line update\nto support PDA screens", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2017-07-24 18:17:43.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2017-07-24 21:40:22.000-07:00", "committer_id": 11875, "message": "Fix PDA HTML serving and add simple favicon.ico file\n\nPDA() class overrode the default INDEXHTML variable, but then called the\nsuperclass which went and overwrote the override.  Fixed to set the value\nafter the super()__init__().\n\nAdd simple 1-bit, 16x16 favicon.ico file as base64 resource", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2017-07-24 21:40:22.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2017-07-19 08:18:53.000-07:00", "committer_id": 11875, "message": "Pictures of the interface and HW it replaces", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2017-07-19 08:18:53.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 67879966, "repo_owner_id": 11875, "commit_at": "2017-07-19 09:46:12.000-07:00", "committer_id": 11875, "message": "Link in pictures to README", "repo_description": "Control Jandy Aqualink via a web interface", "generate_at": "2017-07-19 09:43:33.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/aquaweb"}, {"repo_id": 108075713, "repo_owner_id": 11875, "commit_at": "2017-10-23 21:14:31.000-07:00", "committer_id": 11875, "message": "Initial checkin, works but slower than realtime\n\nTakes TinySoundFont, makes it way tinier, and combines it with MIDITONES\nfor real-time MIDI file format decoding.\n\nCurrently WIP as the SPIFFS reads make this too slow to run in realtime.\nBut it sounds excellent when sent to a WAV file and played back.", "repo_description": "Obsolete, please use ESP8266Audio - TinySoundFont + MidiTones based MIDI player using SoundFont2 patch sets.", "generate_at": "2017-10-23 21:14:31.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266WavetableSynth"}, {"repo_id": 108075713, "repo_owner_id": 11875, "commit_at": "2017-10-23 21:13:56.000-07:00", "committer_id": 19864447, "message": "Initial commit", "repo_description": "Obsolete, please use ESP8266Audio - TinySoundFont + MidiTones based MIDI player using SoundFont2 patch sets.", "generate_at": "2017-10-23 21:13:56.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266WavetableSynth"}, {"repo_id": 108075713, "repo_owner_id": 11875, "commit_at": "2017-10-27 17:03:19.000-07:00", "committer_id": 11875, "message": "Fixed point gain calculation, runs in 99% RT!\n\nUse a fixed point gain calculation in the inner loop instead of floating\npoint.  Runs furelise and 1MG SF2 at realtime @ 22050Hz with <2 seconds of\nstuttering under heavy note load!", "repo_description": "Obsolete, please use ESP8266Audio - TinySoundFont + MidiTones based MIDI player using SoundFont2 patch sets.", "generate_at": "2017-10-27 17:03:19.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266WavetableSynth"}, {"repo_id": 108075713, "repo_owner_id": 11875, "commit_at": "2017-10-27 14:54:55.000-07:00", "committer_id": 11875, "message": "Convert to using FastROMFS", "repo_description": "Obsolete, please use ESP8266Audio - TinySoundFont + MidiTones based MIDI player using SoundFont2 patch sets.", "generate_at": "2017-10-27 14:54:55.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266WavetableSynth"}, {"repo_id": 116458094, "repo_owner_id": 10311046, "commit_at": "2017-10-06 00:15:52.000-07:00", "committer_id": 11875, "message": "Fix signed/unsigned issue on non-INTC processors\n\nSome ugliness in different GCC versions caused the interpolation steps\nto be calculated incorrectly.  Explicitly move through variable of the\nright type to ensure proper signedness of operations.", "repo_description": null, "generate_at": "2017-10-05 23:33:16.000-07:00", "author_id": 11875, "repo_name": "nietoperz809/SAM"}, {"repo_id": 116458094, "repo_owner_id": 10311046, "commit_at": "2017-10-05 21:38:38.000-07:00", "committer_id": 11875, "message": "Fix unitialized variable in Render()\n\nValgrind found an error where initial samples consonants could start up\nwith an uninitialized variable, occasionally causing an error in the\nESP8266 library.  Set the problem variables to 0 for now to avoid the\nproblem.", "repo_description": null, "generate_at": "2017-10-05 21:38:38.000-07:00", "author_id": 11875, "repo_name": "nietoperz809/SAM"}, {"repo_id": 116458094, "repo_owner_id": 10311046, "commit_at": "2017-10-05 20:03:44.000-07:00", "committer_id": 11875, "message": "Clean up variables that are really constant", "repo_description": null, "generate_at": "2017-10-05 20:03:44.000-07:00", "author_id": 11875, "repo_name": "nietoperz809/SAM"}, {"repo_id": 116458094, "repo_owner_id": 10311046, "commit_at": "2017-10-05 19:33:19.000-07:00", "committer_id": 11875, "message": "Clean up GCC warnings for portability", "repo_description": null, "generate_at": "2017-10-05 19:33:19.000-07:00", "author_id": 11875, "repo_name": "nietoperz809/SAM"}, {"repo_id": 116458094, "repo_owner_id": 10311046, "commit_at": "2017-10-04 13:39:27.000-07:00", "committer_id": 11875, "message": "Fix issue #3 from GitHub", "repo_description": null, "generate_at": "2017-10-04 13:39:27.000-07:00", "author_id": 11875, "repo_name": "nietoperz809/SAM"}, {"repo_id": 116458094, "repo_owner_id": 10311046, "commit_at": "2017-10-04 12:30:54.000-07:00", "committer_id": 11875, "message": "8-bit formant generation w/real sampling\n\nOriginal code would send in a 4-bit value which would be repeated for\n1...5 times depending on the opcode delays in the specific path.  This\nmwans when you look at the waveform you'd see staircases between samples\nwhich add ugly harmonics.\n\nNew code generates 5 samples of the SIN wave for formants and uses those\nas needed instead of just using the same value 5 times.  Waveform coming\nout from code is now full 8-bits and 22khz for formants.", "repo_description": null, "generate_at": "2017-10-04 12:30:54.000-07:00", "author_id": 11875, "repo_name": "nietoperz809/SAM"}, {"repo_id": 116458094, "repo_owner_id": 10311046, "commit_at": "2017-10-04 11:55:39.000-07:00", "committer_id": 11875, "message": "Replace sinus[] with a full 8-bit SIN wave\n\nAs part of the 4->8bit changes, replace the step-wise sin (upper nybble\nonly valid) with a full 8-bit signed wave from -127...127.", "repo_description": null, "generate_at": "2017-10-04 11:55:39.000-07:00", "author_id": 11875, "repo_name": "nietoperz809/SAM"}, {"repo_id": 116458094, "repo_owner_id": 10311046, "commit_at": "2017-10-04 11:35:22.000-07:00", "committer_id": 11875, "message": "Remove multtable, replace with logical equivalent\n\nMulttable stored the result of a 8-bit signed multiply of the\nupper nibble of A (interpreted as signed) and the amplitude\nlower nibble (interpreted as unsigned), then divided by two.\nOn the 6510 this made sense, but in modern processors it's\nway faster and cleaner to simply do the multiply.\n\nReplace the render sin/sin/rect mixer with equivalent C code.", "repo_description": null, "generate_at": "2017-10-04 11:35:22.000-07:00", "author_id": 11875, "repo_name": "nietoperz809/SAM"}, {"repo_id": 105750725, "repo_owner_id": 24271741, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": null, "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "MarcoBenati/eso8266-arduino"}, {"repo_id": 105750725, "repo_owner_id": 24271741, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": null, "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "MarcoBenati/eso8266-arduino"}, {"repo_id": 105750725, "repo_owner_id": 24271741, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": null, "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "MarcoBenati/eso8266-arduino"}, {"repo_id": 105750725, "repo_owner_id": 24271741, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": null, "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "MarcoBenati/eso8266-arduino"}, {"repo_id": 102661244, "repo_owner_id": 23339483, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": null, "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266ArduinoIDE"}, {"repo_id": 102661244, "repo_owner_id": 23339483, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": null, "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266ArduinoIDE"}, {"repo_id": 102661244, "repo_owner_id": 23339483, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": null, "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266ArduinoIDE"}, {"repo_id": 102661244, "repo_owner_id": 23339483, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": null, "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266ArduinoIDE"}, {"repo_id": 114836631, "repo_owner_id": 26543933, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": null, "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "houhualong/ESP8266"}, {"repo_id": 114836631, "repo_owner_id": 26543933, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": null, "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "houhualong/ESP8266"}, {"repo_id": 114836631, "repo_owner_id": 26543933, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": null, "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "houhualong/ESP8266"}, {"repo_id": 114836631, "repo_owner_id": 26543933, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": null, "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "houhualong/ESP8266"}, {"repo_id": 123631449, "repo_owner_id": 11875, "commit_at": "2018-03-02 13:13:56.000-08:00", "committer_id": 11875, "message": "Initial checkin", "repo_description": "Github.io pages", "generate_at": "2018-03-02 13:13:56.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/earlephilhower.github.io"}, {"repo_id": 15320749, "repo_owner_id": 1790166, "commit_at": "2016-06-03 14:42:39-07:00", "committer_id": 11875, "message": "Move PUT/GET/COPY speed reports to DEBUG log level\n\nThere were a few spots where internal speed testing numbers were\nbeing reported in the default loglevel.  These are not generally\nuseful to folks, so they've been demoted to LOG_DEBUG to reduce\nchatter.", "repo_description": "Amazon Simple Storage Service (S3) resource plugin for iRODS", "generate_at": "2016-06-03 14:42:39-07:00", "author_id": 11875, "repo_name": "irods/irods_resource_plugin_s3"}, {"repo_id": 15320749, "repo_owner_id": 1790166, "commit_at": "2016-06-03 14:37:24-07:00", "committer_id": 11875, "message": "Use multipart copy operation for objects above MPU block size\n\nAmazon objects of >5GB need to be copied using a special multipart\noperation, almost identical to multipart uploads of new objects.\nOverride the s3PutFile to allow either putting a file or copying\nan object to minimize the object impact.  Checks the object size\nat the beginning of the copy and does the right thing.", "repo_description": "Amazon Simple Storage Service (S3) resource plugin for iRODS", "generate_at": "2016-06-03 14:37:24-07:00", "author_id": 11875, "repo_name": "irods/irods_resource_plugin_s3"}, {"repo_id": 15320749, "repo_owner_id": 1790166, "commit_at": "2016-05-23 16:12:24-04:00", "committer_id": 1790152, "message": "Fix typo in bucketname->s3bucketname merge", "repo_description": "Amazon Simple Storage Service (S3) resource plugin for iRODS", "generate_at": "2016-03-25 13:53:52-07:00", "author_id": 11875, "repo_name": "irods/irods_resource_plugin_s3"}, {"repo_id": 15320749, "repo_owner_id": 1790166, "commit_at": "2016-05-23 16:12:24-04:00", "committer_id": 1790152, "message": "Support multihosted/threaded/ranged S3 operations\n\nMajor rewrite to turn plugin into a multithreaded, high performance\nconsumer of S3 services and features from Amazon and third-party\nobject storage.\n\nEnable multithreaded, multipart/multirange operation on S3 objects:\n  Enables support of parallel upload and download of portions of large\n  objects, which can significantly improve performance on both Amazon S3\n  and other object stores.\n\n  The number of parallel threads used can be configured with the parameter\n    S3_MPU_THREADS=##  (default 10 threads)\n\n  The MB per part to use for each portion of the object is configured with\n    S3_MPU_CHUNK=##  (default 64, units in MB)\n\n  For storing objects, multipart PUT is used.  For retreiving objects from\n  the archive, multi-ranged HTTP GETs are performed.\n\n  Implements a random backoff up to 1s to S3_WAIT_TIME for each retry to\n  avoid dogpile on network hiccups (which are often short, transient, and\n  cause many threads to try and resubmit at the same time).\n\nAdd S3_DEFAULT_HOSTNAME multiple host endpoint support:\n  Add in multiple S3 host support.  Use a comma between host:ports to\n  specify multiple hosts/ports to connect to in sequence (and in parallel\n  when doing multipart uploads).  These hosts will be iterated over when\n  connecting to the S3 service.\n    S3_DEFAULT_HOSTNAME=ip1:port1,ip2:port2,ip3:port3;S3_AUTH_FILE=...\n\n  Errors are logged to include the S3 host being used at the time of failed\n  operations to help track down connecticity or other issues.\n\nAdd S3_SERVER_ENCRYPT=[0|1] to enable at-rest S3 encryption:\n  This sets the flag to request that S3 store the object data in encrypted\n  form on-disk.  This is NOT the same thing as HTTPS, and only affects the\n  data at-rest.  IF you need encrypted communications to S3 as well as\n  encryption of the object data once there, please be sure to specify\n    ...;S3_PROTO=HTTPS;S3_SERVER_ENCRYPT=1;...\n  on the resource definition line.\n\n  Note also that this is not supported by some local S3 appliances or\n  software.  When unsupported, the S3 server will return errors for all\n  upload operations, logged in rodsLog.\n\nAdd S3_ENABLE_MD5 option to enable upload checksums on all PUTs:\n  MD5 checksum calculations on all S3 PUT commands, setting the\n  Content-MD5 header.\n\n  Note that this requires reading each file effectively twice:  The\n  first time the file is read to calculate the initial MD5 (because\n  we need the MD5 to send the headers, we can't do this on the fly).\n  Then the second time to actually send the file over the network to S3.\n\n  If there is a MD5 mismatch it will be logged as an error by S3 and\n  in rodsLog, and the iRODS system will be informed of archive failure.\n\nTesting parameters to support out-of-CI testing:\n  Add S3BUCKET and S3PARAMS environment overrides for resource test.\n  By default use the hardcoded values in prior version for bucketname\n  and the parameters (authentication, threads, proto, etc.).  If\n  the environment variable S3BUCKET is set, overide the bucket we use,\n  and if S3PARAMS are set override the entire resource configuration\n  string.\n  For example:\n   S3BUCKET=user S3PARAMS='S3_DEFAULT_HOSTNAME=192.168.122.128:443;\"\\\n   \"S3_AUTH_FILE=/tmp/s3;S3_PROTO=HTTP;S3_RETRY_COUNT=15;S3_WAIT_TIME_SEC=1;\"\\\n   \"S3_MPU_THREADS=10;S3_MPU_CHUNK=16' \"\\\n   python run_tests.py --run_specific_test test_irods_resource_plugin_s3\n\nAdd ERROR_INJECT testmode:\n  Adds a -DERROR_INJECT compile-time option which will cause the specified\n  call to pread or pwrite in a callback to fail.  This allows testing the\n  retry/recovery mechanisms.\n\nRemoved dead/obsolete code, fix GCC -pedantic -Wall warnings:\n  Clean up the code of most global variables, dead variables and functions,\n  and GCC warnings in -pedantic mode.\n\nRework of error/retry handling, obey requested number of retries for all ops:\n  All operations should now retry their operations on transient S3 errors,\n  with the specified delay time and maximum retries.", "repo_description": "Amazon Simple Storage Service (S3) resource plugin for iRODS", "generate_at": "2016-02-25 13:19:57-08:00", "author_id": 11875, "repo_name": "irods/irods_resource_plugin_s3"}, {"repo_id": 15320749, "repo_owner_id": 1790166, "commit_at": "2016-05-23 16:10:35-04:00", "committer_id": 1790152, "message": "Support multihosted/threaded/ranged S3 operations\n\nMajor rewrite to turn plugin into a multithreaded, high performance\nconsumer of S3 services and features from Amazon and third-party\nobject storage.\n\nEnable multithreaded, multipart/multirange operation on S3 objects:\n  Enables support of parallel upload and download of portions of large\n  objects, which can significantly improve performance on both Amazon S3\n  and other object stores.\n\n  The number of parallel threads used can be configured with the parameter\n    S3_MPU_THREADS=##  (default 10 threads)\n\n  The MB per part to use for each portion of the object is configured with\n    S3_MPU_CHUNK=##  (default 64, units in MB)\n\n  For storing objects, multipart PUT is used.  For retreiving objects from\n  the archive, multi-ranged HTTP GETs are performed.\n\nAdd S3_DEFAULT_HOSTNAME multiple host endpoint support:\n  Add in multiple S3 host support.  Use a comma between host:ports to\n  specify multiple hosts/ports to connect to in sequence (and in parallel\n  when doing multipart uploads).  These hosts will be iterated over when\n  connecting to the S3 service.\n    S3_DEFAULT_HOSTNAME=ip1:port1,ip2:port2,ip3:port3;S3_AUTH_FILE=...\n\n  Errors are logged to include the S3 host being used at the time of failed\n  operations to help track down connecticity or other issues.\n\nAdd S3_SERVER_ENCRYPT=[0|1] to enable at-rest S3 encryption:\n  This sets the flag to request that S3 store the object data in encrypted\n  form on-disk.  This is NOT the same thing as HTTPS, and only affects the\n  data at-rest.  IF you need encrypted communications to S3 as well as\n  encryption of the object data once there, please be sure to specify\n    ...;S3_PROTO=HTTPS;S3_SERVER_ENCRYPT=1;...\n  on the resource definition line.\n\n  Note also that this is not supported by some local S3 appliances or\n  software.  When unsupported, the S3 server will return errors for all\n  upload operations, logged in rodsLog.\n\nAdd S3_ENABLE_MD5 option to enable upload checksums on all PUTs:\n  MD5 checksum calculations on all S3 PUT commands, setting the\n  Content-MD5 header.\n\n  Note that this requires reading each file effectively twice:  The\n  first time the file is read to calculate the initial MD5 (because\n  we need the MD5 to send the headers, we can't do this on the fly).\n  Then the second time to actually send the file over the network to S3.\n\n  If there is a MD5 mismatch it will be logged as an error by S3 and\n  in rodsLog, and the iRODS system will be informed of archive failure.\n\nTesting parameters to support out-of-CI testing:\n  Add S3BUCKET and S3PARAMS environment overrides for resource test.\n  By default use the hardcoded values in prior version for bucketname\n  and the parameters (authentication, threads, proto, etc.).  If\n  the environment variable S3BUCKET is set, overide the bucket we use,\n  and if S3PARAMS are set override the entire resource configuration\n  string.\n  For example:\n   S3BUCKET=user S3PARAMS='S3_DEFAULT_HOSTNAME=192.168.122.128:443;\"\\\n   \"S3_AUTH_FILE=/tmp/s3;S3_PROTO=HTTP;S3_RETRY_COUNT=15;S3_WAIT_TIME_SEC=1;\"\\\n   \"S3_MPU_THREADS=10;S3_MPU_CHUNK=16' \"\\\n   python run_tests.py --run_specific_test test_irods_resource_plugin_s3\n\nAdd ERROR_INJECT testmode:\n  Adds a -DERROR_INJECT compile-time option which will cause the specified\n  call to pread or pwrite in a callback to fail.  This allows testing the\n  retry/recovery mechanisms.\n\nRemoved dead/obsolete code, fix GCC -pedantic -Wall warnings:\n  Clean up the code of most global variables, dead variables and functions,\n  and GCC warnings in -pedantic mode.\n\nRework of error/retry handling, obey requested number of retries for all ops:\n  All operations should now retry their operations on transient S3 errors,\n  with the specified delay time and maximum retries.", "repo_description": "Amazon Simple Storage Service (S3) resource plugin for iRODS", "generate_at": "2016-02-25 13:19:57-08:00", "author_id": 11875, "repo_name": "irods/irods_resource_plugin_s3"}, {"repo_id": 15320749, "repo_owner_id": 1790166, "commit_at": "2015-09-23 12:42:53-07:00", "committer_id": 11875, "message": "Add S3_PROTO=[http|https] to the configuration parameters\n\nAdds in an optional field to the configuration string allowing\nruntime configuration of HTTP or HTTPS connections to a S3-type\nstorage service.  Accepts upper and lower case strings.  When\nno value is specified, default back to the HTTPS as in the\noriginal plugin.", "repo_description": "Amazon Simple Storage Service (S3) resource plugin for iRODS", "generate_at": "2015-09-23 12:41:14-07:00", "author_id": 11875, "repo_name": "irods/irods_resource_plugin_s3"}, {"repo_id": 15320749, "repo_owner_id": 1790166, "commit_at": "2015-09-23 12:40:54-07:00", "committer_id": 11875, "message": "Add S3_PROTO=[http|https] to the configuration parameters\n\nAdds in an optional field to the configuration string allowing\nruntime configuration of HTTP or HTTPS connections to a S3-type\nstorage service.  Accepts upper and lower case strings.  When\nno value is specified, default back to the HTTPS as in the\noriginal plugin.", "repo_description": "Amazon Simple Storage Service (S3) resource plugin for iRODS", "generate_at": "2015-09-23 12:38:22-07:00", "author_id": 11875, "repo_name": "irods/irods_resource_plugin_s3"}, {"repo_id": 15320749, "repo_owner_id": 1790166, "commit_at": "2015-09-23 12:38:22-07:00", "committer_id": 11875, "message": "Add S3_PROTO=[http|https] to the configuration parameters\n\nAdds in an optional field to the configuration string allowing\nruntime configuration of HTTP or HTTPS connections to a S3-type\nstorage service.  Accepts upper and lower case strings.  When\nno value is specified, default back to the HTTPS as in the\noriginal plugin.", "repo_description": "Amazon Simple Storage Service (S3) resource plugin for iRODS", "generate_at": "2015-09-23 12:38:22-07:00", "author_id": 11875, "repo_name": "irods/irods_resource_plugin_s3"}, {"repo_id": 113619238, "repo_owner_id": 11875, "commit_at": "2017-12-08 14:33:28.000-08:00", "committer_id": 11875, "message": "Ran to completion, but not listened to.  Still WIP\n\nFixed huffman accesses and some compile warnings.\n\nStill need to move other constant arrays to PROGMEM and\nlisten to actual output.\n\nDid run through piano.mp3 w/o a crash, though!", "repo_description": "Port of Helix MP3 code to ESP8266", "generate_at": "2017-12-08 14:33:28.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266AudioMP3"}, {"repo_id": 113619238, "repo_owner_id": 11875, "commit_at": "2017-12-08 14:59:32.000-08:00", "committer_id": 11875, "message": "Move some constants to PROGMEM", "repo_description": "Port of Helix MP3 code to ESP8266", "generate_at": "2017-12-08 14:59:32.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266AudioMP3"}, {"repo_id": 113619238, "repo_owner_id": 11875, "commit_at": "2017-12-08 15:26:12.000-08:00", "committer_id": 11875, "message": "More constants to PROGMEM", "repo_description": "Port of Helix MP3 code to ESP8266", "generate_at": "2017-12-08 15:03:53.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266AudioMP3"}, {"repo_id": 113619238, "repo_owner_id": 11875, "commit_at": "2017-12-08 13:34:13.000-08:00", "committer_id": 11875, "message": "Initial upload", "repo_description": "Port of Helix MP3 code to ESP8266", "generate_at": "2017-12-08 13:34:13.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266AudioMP3"}, {"repo_id": 113619238, "repo_owner_id": 11875, "commit_at": "2017-12-08 14:15:26.000-08:00", "committer_id": 11875, "message": "Compiles with some warnings in Arduino\n\nMoved huffTab into PROGMEM and converted from SHORT to INT.", "repo_description": "Port of Helix MP3 code to ESP8266", "generate_at": "2017-12-08 14:15:26.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266AudioMP3"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2018-02-17 18:47:10.000-08:00", "committer_id": 19864447, "message": "Add -Werror to acceptance builds for C and CPP (#4369)\n\nUse platform.local.txt to add -Werror to GCC for the build of all\r\ncode.  Any warnings on a submitted patch will cause an error.\r\n\r\nSeveral examples and libraries had warnings/errors (missing returns\r\non functions, types, etc.).  Clean those up with this commit as well.", "repo_description": null, "generate_at": "2018-02-17 18:47:10.000-08:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2018-02-14 07:50:26.000-08:00", "committer_id": 19864447, "message": "Fix double-free in ESP8266WebServer (#4365)\n\nIn issue #4350, @mongozmaki found that the web server was accessing a\r\ndeleted variable in the destructor.  Implement his suggested change\r\nand move the close() before any freeing.  Could also have simply\r\nNULL'd out the _currentHeaders member after freeing as well.\r\n\r\nFixes issue #4350", "repo_description": null, "generate_at": "2018-02-14 07:50:26.000-08:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2018-02-10 08:12:38.000-08:00", "committer_id": 19864447, "message": "Wrap mimetype strings in FSPTR()s (#4338)\n\nMimetype is now in progmem, so any accesses to it need to be using FPSTR()\r\nwrapped Strings.\r\n\r\nFixes #4329", "repo_description": null, "generate_at": "2018-02-10 08:12:38.000-08:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2018-02-08 15:25:24.000-03:00", "committer_id": 16824838, "message": "Fix mem leak in SSL server, allow for concurrent client and server connections w/o interference (#4305)\n\n* Fix leak on multiple SSL server connections\r\n\r\nFixes #4302\r\n\r\nThe refcnt setup for the WiFiClientSecure's SSLContext and ClientContext\r\nhad issues in certain conditions, causing a massive memory leak on each\r\nSSL server connection.  Depending on the state of the machine, after two or\r\nthree connections it would OOM and crash.\r\n\r\nThis patch replaces most of the refcnt operations with C++11 shared_ptr\r\noperations, cleaning up the code substantially and removing the leakage.\r\n\r\nAlso fixes a race condition where ClientContext was free'd before the SSLContext\r\nwas stopped/shutdown.  When the SSLContext tried to do ssl_free, axtls would\r\nattempt to send out the real SSL disconnect bits over the wire, however by\r\nthis time the ClientContext is invalid and it would fault.\r\n\r\n* Separate client and server SSL_CTX, support both\r\n\r\nRefactor to use a separate client SSL_CTX and server SSL_CTX.  This\r\nallows for separate certificates to be installed on each, and means\r\nthat you can now have both a *single* client and a *single* server\r\nrunning in parallel at the same time, as they'll have separate memory\r\nareas.\r\n\r\nTested using mqtt_esp8266 SSL client with a client certificate and a\r\nWebServerSecure with its own custom certificate and key in parallel.\r\n\r\n* Add brackets around a couple if-else clauses", "repo_description": null, "generate_at": "2018-02-08 10:25:24.000-08:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2018-02-06 07:33:26.000-08:00", "committer_id": 19864447, "message": "SSL server DEBUG, code cleanup fixes (#4280)\n\nThe server needs to load an X509 and RSA key, but instead of using\r\nthe existing loadObject() calls implemented its own.  Remove them and\r\nuse the standard ones instead.\r\n\r\nThe DEBUG_OUTPUT macro was undefined in the SSL Web server.  Add it\r\nin do that when you compile with DEBUG=HTTP_SERVER it actually compiles.", "repo_description": null, "generate_at": "2018-02-06 07:33:26.000-08:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2018-02-06 11:06:05.000-03:00", "committer_id": 16824838, "message": "Refrech api.github.com x509 certificate (#4306)\n\nThe certificate fingerprint included with the HTTPSRequest example seems\r\nto be for an expired api.github.com certificate.  Replace with the current\r\none to avoid reporting \"certificate mismatch\" errors when running.", "repo_description": null, "generate_at": "2018-02-06 06:06:05.000-08:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2018-02-04 20:59:31.000-08:00", "committer_id": 19864447, "message": "Remove warnings when NDEBUG build option used (#4196)\n\nWhen building using the new NDEBUG option recently added, the assert()\r\nmacro is defined to nothing. This leaves a few variables unused in the\r\nWiFi stack causing compiler warnings. Add in empty casts to remove\r\nthese warnings. Does not affect actual assert use when NDEBUG is not\r\ndefined.", "repo_description": null, "generate_at": "2018-02-04 20:59:31.000-08:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2018-01-21 13:54:53.000+08:00", "committer_id": 4349050, "message": "Clear calloc block only if malloc succeeds\n\nCalloc was calling memset(0) on NULL when its implicit malloc failed,\ncausing a crash in UMM.  Instead, only do the memset if the memory\nallocation succeeds.\n\nFixes issue #4207", "repo_description": null, "generate_at": "2018-01-20 20:14:37.000-08:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2018-01-17 14:10:40.000-03:00", "committer_id": 16824838, "message": "Move C++ vtables into IRAM, out of HEAP (#4179)\n\nGCC places vtables in .rodata, with a mangled name of \"_ZTV*.\"  Because\r\nthese are simply address jump tables, there is no need to place them in\r\nRAM.  Instead, have the linker place them in the .text (aka IRAM) section.\r\nThis will free up a variable amount of heap space, depending on the number\r\nof classes with virtual functions used in any particular project.", "repo_description": null, "generate_at": "2018-01-17 09:10:40.000-08:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2018-01-10 11:56:32.000+08:00", "committer_id": 4349050, "message": "Add SSL enabled WiFiServer, Updater, WebServer\n\nAdds SSL server mode for WiFiServerSecure, for plain SSL connections,\nESP8266WebServerSecure, for HTTPS web serving, and SecureHTTPSUpdater for\nencrypted OTA updates.\n\nExample code is provided for all new options, as well as a BASH script for\ngenerating their own, self-signed certificates.\n\nBoth ESP8266WebServerSecure and SecureHTTPSUpdater are important for secure\npassword-based authentication.  HTTP Basic Authentication, the only supported\nmodel presently, sends the username and password in *cleartext* and therefore\nshould *never* be used in any un-SSL encrypted channel unless you don't mind\nsharing your login and password with anyone else on the internet.  Even if the\nESP8266 is not safety critical, this cleartext broadcast could expose you should\nyou reuse this password elsewhere on your network or the internet.", "repo_description": null, "generate_at": "2017-02-27 20:17:04.000-08:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": null, "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": null, "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": null, "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 122326441, "repo_owner_id": 23339483, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": null, "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "AlejoRMinetti/ESP8266Arduino"}, {"repo_id": 113646933, "repo_owner_id": 34390334, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": null, "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "laubit/esp8266com"}, {"repo_id": 113646933, "repo_owner_id": 34390334, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": null, "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "laubit/esp8266com"}, {"repo_id": 113646933, "repo_owner_id": 34390334, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": null, "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "laubit/esp8266com"}, {"repo_id": 113646933, "repo_owner_id": 34390334, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": null, "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "laubit/esp8266com"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2018-02-17 18:47:10.000-08:00", "committer_id": 19864447, "message": "Add -Werror to acceptance builds for C and CPP (#4369)\n\nUse platform.local.txt to add -Werror to GCC for the build of all\r\ncode.  Any warnings on a submitted patch will cause an error.\r\n\r\nSeveral examples and libraries had warnings/errors (missing returns\r\non functions, types, etc.).  Clean those up with this commit as well.", "repo_description": null, "generate_at": "2018-02-17 18:47:10.000-08:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2018-02-14 07:50:26.000-08:00", "committer_id": 19864447, "message": "Fix double-free in ESP8266WebServer (#4365)\n\nIn issue #4350, @mongozmaki found that the web server was accessing a\r\ndeleted variable in the destructor.  Implement his suggested change\r\nand move the close() before any freeing.  Could also have simply\r\nNULL'd out the _currentHeaders member after freeing as well.\r\n\r\nFixes issue #4350", "repo_description": null, "generate_at": "2018-02-14 07:50:26.000-08:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2018-02-10 08:12:38.000-08:00", "committer_id": 19864447, "message": "Wrap mimetype strings in FSPTR()s (#4338)\n\nMimetype is now in progmem, so any accesses to it need to be using FPSTR()\r\nwrapped Strings.\r\n\r\nFixes #4329", "repo_description": null, "generate_at": "2018-02-10 08:12:38.000-08:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2018-02-08 15:25:24.000-03:00", "committer_id": 16824838, "message": "Fix mem leak in SSL server, allow for concurrent client and server connections w/o interference (#4305)\n\n* Fix leak on multiple SSL server connections\r\n\r\nFixes #4302\r\n\r\nThe refcnt setup for the WiFiClientSecure's SSLContext and ClientContext\r\nhad issues in certain conditions, causing a massive memory leak on each\r\nSSL server connection.  Depending on the state of the machine, after two or\r\nthree connections it would OOM and crash.\r\n\r\nThis patch replaces most of the refcnt operations with C++11 shared_ptr\r\noperations, cleaning up the code substantially and removing the leakage.\r\n\r\nAlso fixes a race condition where ClientContext was free'd before the SSLContext\r\nwas stopped/shutdown.  When the SSLContext tried to do ssl_free, axtls would\r\nattempt to send out the real SSL disconnect bits over the wire, however by\r\nthis time the ClientContext is invalid and it would fault.\r\n\r\n* Separate client and server SSL_CTX, support both\r\n\r\nRefactor to use a separate client SSL_CTX and server SSL_CTX.  This\r\nallows for separate certificates to be installed on each, and means\r\nthat you can now have both a *single* client and a *single* server\r\nrunning in parallel at the same time, as they'll have separate memory\r\nareas.\r\n\r\nTested using mqtt_esp8266 SSL client with a client certificate and a\r\nWebServerSecure with its own custom certificate and key in parallel.\r\n\r\n* Add brackets around a couple if-else clauses", "repo_description": null, "generate_at": "2018-02-08 10:25:24.000-08:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2018-02-06 07:33:26.000-08:00", "committer_id": 19864447, "message": "SSL server DEBUG, code cleanup fixes (#4280)\n\nThe server needs to load an X509 and RSA key, but instead of using\r\nthe existing loadObject() calls implemented its own.  Remove them and\r\nuse the standard ones instead.\r\n\r\nThe DEBUG_OUTPUT macro was undefined in the SSL Web server.  Add it\r\nin do that when you compile with DEBUG=HTTP_SERVER it actually compiles.", "repo_description": null, "generate_at": "2018-02-06 07:33:26.000-08:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2018-02-06 11:06:05.000-03:00", "committer_id": 16824838, "message": "Refrech api.github.com x509 certificate (#4306)\n\nThe certificate fingerprint included with the HTTPSRequest example seems\r\nto be for an expired api.github.com certificate.  Replace with the current\r\none to avoid reporting \"certificate mismatch\" errors when running.", "repo_description": null, "generate_at": "2018-02-06 06:06:05.000-08:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2018-02-04 20:59:31.000-08:00", "committer_id": 19864447, "message": "Remove warnings when NDEBUG build option used (#4196)\n\nWhen building using the new NDEBUG option recently added, the assert()\r\nmacro is defined to nothing. This leaves a few variables unused in the\r\nWiFi stack causing compiler warnings. Add in empty casts to remove\r\nthese warnings. Does not affect actual assert use when NDEBUG is not\r\ndefined.", "repo_description": null, "generate_at": "2018-02-04 20:59:31.000-08:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2018-01-21 13:54:53.000+08:00", "committer_id": 4349050, "message": "Clear calloc block only if malloc succeeds\n\nCalloc was calling memset(0) on NULL when its implicit malloc failed,\ncausing a crash in UMM.  Instead, only do the memset if the memory\nallocation succeeds.\n\nFixes issue #4207", "repo_description": null, "generate_at": "2018-01-20 20:14:37.000-08:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2018-01-17 14:10:40.000-03:00", "committer_id": 16824838, "message": "Move C++ vtables into IRAM, out of HEAP (#4179)\n\nGCC places vtables in .rodata, with a mangled name of \"_ZTV*.\"  Because\r\nthese are simply address jump tables, there is no need to place them in\r\nRAM.  Instead, have the linker place them in the .text (aka IRAM) section.\r\nThis will free up a variable amount of heap space, depending on the number\r\nof classes with virtual functions used in any particular project.", "repo_description": null, "generate_at": "2018-01-17 09:10:40.000-08:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2018-01-10 11:56:32.000+08:00", "committer_id": 4349050, "message": "Add SSL enabled WiFiServer, Updater, WebServer\n\nAdds SSL server mode for WiFiServerSecure, for plain SSL connections,\nESP8266WebServerSecure, for HTTPS web serving, and SecureHTTPSUpdater for\nencrypted OTA updates.\n\nExample code is provided for all new options, as well as a BASH script for\ngenerating their own, self-signed certificates.\n\nBoth ESP8266WebServerSecure and SecureHTTPSUpdater are important for secure\npassword-based authentication.  HTTP Basic Authentication, the only supported\nmodel presently, sends the username and password in *cleartext* and therefore\nshould *never* be used in any un-SSL encrypted channel unless you don't mind\nsharing your login and password with anyone else on the internet.  Even if the\nESP8266 is not safety critical, this cleartext broadcast could expose you should\nyou reuse this password elsewhere on your network or the internet.", "repo_description": null, "generate_at": "2017-02-27 20:17:04.000-08:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": null, "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": null, "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": null, "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 123265653, "repo_owner_id": 12699791, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": null, "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "QWaveSystems/Mego-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-05-21 14:34:15.000-04:00", "committer_id": 16824838, "message": "Add build_even/odd types to split Arduino tests (#4737)\n\nArduino builds are now taking 49 minutes or more, and failing due to\r\nTravis timeouts.\r\n\r\nSplit the Arduino build task into even and odd half, where each job\r\nwill build every other test.  This will reduce any test's runtime\r\nby 50% and speed up checks to avoid the timeout.", "repo_description": null, "generate_at": "2018-05-21 11:34:15.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-05-14 20:46:47.000-07:00", "committer_id": 19864447, "message": "Add BearSSL client and server, support true bidir, lower memory, modern SSL (#4273)\n\nBearSSL (https://www.bearssl.org) is a TLS(SSL) library written by\r\nThomas Pornin that is optimized for lower-memory embedded systems\r\nlike the ESP8266. It supports a wide variety of modern ciphers and\r\nis unique in that it doesn't perform any memory allocations during\r\noperation (which is the unfortunate bane of the current axTLS).\r\n\r\nBearSSL is also absolutely focused on security and by default performs\r\nall its security checks on x.509 certificates during the connection\r\nphase (but if you want to be insecure and dangerous, that's possible\r\ntoo).\r\n\r\nWhile it does support unidirectional SSL buffers, like axTLS,\r\nas implemented the ESP8266 wrappers only support bidirectional\r\nbuffers. These bidirectional buffers avoid deadlocks in protocols\r\nwhich don't have well separated receive and transmit periods.\r\n\r\nThis patch adds several classes which allow connecting to TLS servers\r\nusing this library in almost the same way as axTLS:\r\nBearSSL::WiFiClientSecure - WiFiClient that supports TLS\r\nBearSSL::WiFiServerSecure - WiFiServer supporting TLS and client certs\r\n\r\nIt also introduces objects for PEM/DER encoded keys and certificates:\r\nBearSSLX509List - x.509 Certificate (list) for general use\r\nBearSSLPrivateKey - RSA or EC private key\r\nBearSSLPublicKey - RSA or EC public key (i.e. from a public website)\r\n\r\nFinally, it adds a Certificate Authority store object which lets\r\nBearSSL access a set of trusted CA certificates on SPIFFS to allow it\r\nto verify the identity of any remote site on the Internet, without\r\nrequiring RAM except for the single matching certificate.\r\nCertStoreSPIFFSBearSSL - Certificate store utility\r\n\r\nClient certificates are supported for the BearSSL::WiFiClientSecure, and\r\nwhat's more the BearSSL::WiFiServerSecure can also *require* remote clients\r\nto have a trusted certificate signed by a specific CA (or yourself with\r\nself-signing CAs).\r\n\r\nMaximum Fragment Length Negotiation probing and usage are supported, but\r\nbe aware that most sites on the Internet don't support it yet.  When\r\navailable, you can reduce the memory footprint of the SSL client or server\r\ndramatically (i.e. down to 2-8KB vs. the ~22KB required for a full 16K\r\nreceive fragment and 512b send fragment).  You can also manually set a\r\nsmaller fragment size and guarantee at your protocol level all data will\r\nfit within it.\r\n\r\nExamples are included to show the usage of these new features.\r\n\r\naxTLS has been moved to its own namespace, \"axtls\".  A default \"using\"\r\nclause allows existing apps to run using axTLS without any changes.\r\n\r\nThe BearSSL::WiFi{client,server}Secure implements the axTLS\r\nclient/server API which lets many end user applications take advantage\r\nof BearSSL with few or no changes.\r\n\r\nThe BearSSL static library used presently is stored at\r\nhttps://github.com/earlephilhower/bearssl-esp8266 and can be built\r\nusing the standard ESP8266 toolchain.", "repo_description": null, "generate_at": "2018-05-14 20:46:47.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-04-03 00:32:35.000+02:00", "committer_id": 4800356, "message": "Add flash for vtable destination, make it default, and add build menu to control options (#4582)\n\n* Add flash for vtable destination, make it default\r\n\r\nAdd an option for placing vtables in flash to complement the existing\r\niram and heap options.  \"make flash\"\r\n\r\nNow that there is a way to change it, move to vtables in flash as default\r\nas only users with interrupts which use vtables require the vtable to\r\nbe in RAM.  For those users, if the tables are small enough they can put\r\nthem in IRAM and save heap space for their app.  If not, then the vtables\r\ncan be placed in HEAP which supports much larger tables.\r\n\r\n* Add VTable menu, FLASH as default, remove Makefile\r\n\r\nConvert from manual \"make\" operated app.ld creation to runtime creation\r\nwhose options are selected from the build menu.\r\n\r\nUse a prelink recipe to create the output app.ld file each run, without\r\nneed for any special tools.\r\n\r\nUpdate the boards.txt.py script to generate this new config.", "repo_description": null, "generate_at": "2018-04-02 15:32:35.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-04-02 07:37:21.000-07:00", "committer_id": 19864447, "message": "I2s input API and examples (#4539)\n\nEnables I2S stereo input via DMA using new API calls:\r\n\r\n. i2s_rxtx_begin(bool rx, rool tx);\r\n. i2s_read_sample(uint32_t *l, uint32_t *r);\r\n\r\nOriginal API calls will only enable TX, so this is backwards compatible.\r\n\r\nAdd simple I2S input example code using Arduino serial plotter.\r\n\r\nAdd UDP transmit of I2S microphone data to a PC (remote microphone).\r\n\r\nClean up and reorganize code to share RX and TX logic as much as\r\npossible.  Fix a potential WDT error while in blocking sample read\r\nand write.", "repo_description": null, "generate_at": "2018-04-02 07:37:21.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-03-27 20:40:34.000-03:00", "committer_id": 16824838, "message": "I2S driver fixes for IRQs, protocol, factoring (#4574)\n\n* I2S driver fixes for IRQs, protocol, factoring\r\n\r\nAll redundant ICACHE_FLASH_ATTR decorators were removed, we already do\r\nthis by default for all routines, anyway,\r\n\r\nThe actual ISR and its called function moved to to IRAM.  Used to be in flash\r\ndue to the decorator, which could lead to crashes.  Use ets_memset to mute\r\nbuffers in ISR.\r\n\r\nFix the I2S on-the-wire protocol by enabling the transmit delay I2STMS because\r\nI2S is supposed to send the MSB one clock after LRCLK toggles.  This was\r\ncausing I2S to be twice as loud as intended in the best of cases, and causing\r\ngarbage/noise output when the MSB was set since data was effectively shifted.\r\n\r\nRefactor the clock divider setting to be done in one function only, as there\r\nis no reason to do the same complicated bit setting in two spots.\r\n\r\n* Comment some add'l registers, use optimstic_yield\r\n\r\nComment the known and unknown I2S register settings for posterity, using\r\nthe ESP32 guide as a basis.\r\n\r\nUse optimistic_yield() instead of esp_wdt_disable/enable when busy\r\nwaiting in blocking writes to ensure we don't hog the CPU completely.\r\n\r\nMove the constant IO pins to #defines for easier understanding.", "repo_description": null, "generate_at": "2018-03-27 16:40:34.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-03-27 14:06:56.000+02:00", "committer_id": 4800356, "message": "Add linker MAP artifact to standard build process (#4186)\n\nGenerate and preserve a linker .MAP file for the project in the usual\r\nbuild directory.  This map file is useful for finding out where FLASH,\r\nIROM, and IRAM are being used as it shows gcc internally generated\r\nthings such as jump tables and constant function-local variables.", "repo_description": null, "generate_at": "2018-03-27 05:06:56.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-03-22 00:53:37.000-03:00", "committer_id": 16824838, "message": "Fix WebServerSecure streamFile() (#4545)\n\n* Fix WebServerSecure streamFile()\r\n\r\nESP8266WebServerSecure's streamFile was using the base class' method\r\nwhich did not use SSL encrypt before transmitting, leading to failure.\r\n\r\nAdd a new template method and required support for\r\nWiFiClientSecure::write(Stream&) (using a local temp buffer since the\r\nSSL libs do not grok Arduino Streams at all).\r\n\r\nFixes #4544\r\n\r\n* Match ClientContext buffer and yield() behavior\r\n\r\nClientContext sends out 256 bytes at a time and gives a yield after\r\neach chunk to ensure the WDT doesn't fire.  Mimic that behavior in\r\nWiFiClientSecure::write(Stream&).", "repo_description": null, "generate_at": "2018-03-21 20:53:37.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-03-18 08:53:08.000+08:00", "committer_id": 4349050, "message": "Fix exception handler, add assert, reduce RAM (#4187)\n\nMove all exception strings to IRAM and out of both PMEM (illegal) and add\r\noutput of any assert() failinf conditions.\r\n\r\nThe exception handler may be called while the SPI interface is in a bad\r\nstate.  This means no PROGMEM reads are allowed, and all data and functions\r\nused must be in system RAM or IRAM.\r\n\r\nAdd a new helper macro, ets_printf_P(), which places a constant string in\r\nIRAM and copies it to the stack before calling the real ets_printf().\r\nThis makes the code simpler to read as no unwieldy combinations of\r\nets_putc/ets_printf/... are required to output anything.\r\n\r\nThe old handler also mistakenly used PSTR() strings in some places, so\r\nfix those with this patch as well.\r\n\r\nGives back ~180 bytes of heap to every sketch built as the exception handler\r\nis always included an application.", "repo_description": null, "generate_at": "2018-03-17 17:53:08.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-03-17 07:51:32.000-07:00", "committer_id": 19864447, "message": "Record last failed alloc, dump on a panic (#4220)\n\nAt runtime, whenever a realloc, malloc, calloc, or new call fails to\r\nfind enough memory, record the calling function and size requested.\r\nDoes not print anything or call any heavyweight functions on this, as it\r\nis legal to return NULL to an alloc-type call.\r\n\r\nIf the main application handles this NULL properly, there should be no\r\npanic and nothing different will happen.\r\n\r\nIf the main application panics() at any later point in time, this record\r\nwill be printed out as part of the crash log for processing with an\r\nupdated EspExceptionDecoder.java.\r\n\r\nThis adds 2-3 instructions overhead in the normal case, and around 10-12\r\ninstructions in the failing case, and requires an additional 8 bytes of\r\n.BSS to function.\r\n\r\nOnly a single address is kept, the final failing malloc-type function call\r\nbefore a panic, but it is trivial to extend to a fifo with little overhead\r\nin the common, non-failing case.", "repo_description": null, "generate_at": "2018-03-17 07:51:32.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-03-17 01:38:56.000-03:00", "committer_id": 16824838, "message": "Check Print::write(byte) return and stop on fail (#4527)\n\nThe default Print::write(byte, count) method was continuing to send\r\nbytes one-by-one even when a prior write returned 0.  Because the buffer\r\npointer was incremented no matter success or fail, this leads to data\r\ncorruption as you'll not send some bytes in the middle and will then\r\nsend extra bytes past the end of the passed in buffer.\r\n\r\nBecause there's no concept of timeout, just stop on the first time\r\nwrite(byte) fails and return the total bytes successfully written\r\nand let the user worry about retrying or handling an error.\r\n\r\nFound by @d-a-v and discussed on gitter.", "repo_description": null, "generate_at": "2018-03-16 21:38:56.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-03-16 07:56:34.000-07:00", "committer_id": 19864447, "message": "Remove stray sigma_delta.h header (#4523)\n\nRemove stray, older version of sigma_delta.h\r\n\r\nAn older version of sigma_delta.h was committed to the root directory. Remove it, as we only want the later, new one already present in cores/esp8266. Thanks, @reaper7, for noticing it.", "repo_description": null, "generate_at": "2018-03-16 07:56:34.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-03-10 12:07:04.000-08:00", "committer_id": 19864447, "message": "Add support for hardware Sigma Delta generator\n\nProvides a simple interface to attach/detach pins to the sigma-delta generator, and get/set the 2 parameters prescaler & target.  Working example that fades the onboard LED is provided.  Code and sample by @stefaandesmet2003.", "repo_description": null, "generate_at": "2018-03-10 12:07:04.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-02-17 18:47:10.000-08:00", "committer_id": 19864447, "message": "Add -Werror to acceptance builds for C and CPP (#4369)\n\nUse platform.local.txt to add -Werror to GCC for the build of all\r\ncode.  Any warnings on a submitted patch will cause an error.\r\n\r\nSeveral examples and libraries had warnings/errors (missing returns\r\non functions, types, etc.).  Clean those up with this commit as well.", "repo_description": null, "generate_at": "2018-02-17 18:47:10.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-02-14 07:50:26.000-08:00", "committer_id": 19864447, "message": "Fix double-free in ESP8266WebServer (#4365)\n\nIn issue #4350, @mongozmaki found that the web server was accessing a\r\ndeleted variable in the destructor.  Implement his suggested change\r\nand move the close() before any freeing.  Could also have simply\r\nNULL'd out the _currentHeaders member after freeing as well.\r\n\r\nFixes issue #4350", "repo_description": null, "generate_at": "2018-02-14 07:50:26.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-02-10 08:12:38.000-08:00", "committer_id": 19864447, "message": "Wrap mimetype strings in FSPTR()s (#4338)\n\nMimetype is now in progmem, so any accesses to it need to be using FPSTR()\r\nwrapped Strings.\r\n\r\nFixes #4329", "repo_description": null, "generate_at": "2018-02-10 08:12:38.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-02-08 15:25:24.000-03:00", "committer_id": 16824838, "message": "Fix mem leak in SSL server, allow for concurrent client and server connections w/o interference (#4305)\n\n* Fix leak on multiple SSL server connections\r\n\r\nFixes #4302\r\n\r\nThe refcnt setup for the WiFiClientSecure's SSLContext and ClientContext\r\nhad issues in certain conditions, causing a massive memory leak on each\r\nSSL server connection.  Depending on the state of the machine, after two or\r\nthree connections it would OOM and crash.\r\n\r\nThis patch replaces most of the refcnt operations with C++11 shared_ptr\r\noperations, cleaning up the code substantially and removing the leakage.\r\n\r\nAlso fixes a race condition where ClientContext was free'd before the SSLContext\r\nwas stopped/shutdown.  When the SSLContext tried to do ssl_free, axtls would\r\nattempt to send out the real SSL disconnect bits over the wire, however by\r\nthis time the ClientContext is invalid and it would fault.\r\n\r\n* Separate client and server SSL_CTX, support both\r\n\r\nRefactor to use a separate client SSL_CTX and server SSL_CTX.  This\r\nallows for separate certificates to be installed on each, and means\r\nthat you can now have both a *single* client and a *single* server\r\nrunning in parallel at the same time, as they'll have separate memory\r\nareas.\r\n\r\nTested using mqtt_esp8266 SSL client with a client certificate and a\r\nWebServerSecure with its own custom certificate and key in parallel.\r\n\r\n* Add brackets around a couple if-else clauses", "repo_description": null, "generate_at": "2018-02-08 10:25:24.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-02-06 07:33:26.000-08:00", "committer_id": 19864447, "message": "SSL server DEBUG, code cleanup fixes (#4280)\n\nThe server needs to load an X509 and RSA key, but instead of using\r\nthe existing loadObject() calls implemented its own.  Remove them and\r\nuse the standard ones instead.\r\n\r\nThe DEBUG_OUTPUT macro was undefined in the SSL Web server.  Add it\r\nin do that when you compile with DEBUG=HTTP_SERVER it actually compiles.", "repo_description": null, "generate_at": "2018-02-06 07:33:26.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-02-06 11:06:05.000-03:00", "committer_id": 16824838, "message": "Refrech api.github.com x509 certificate (#4306)\n\nThe certificate fingerprint included with the HTTPSRequest example seems\r\nto be for an expired api.github.com certificate.  Replace with the current\r\none to avoid reporting \"certificate mismatch\" errors when running.", "repo_description": null, "generate_at": "2018-02-06 06:06:05.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-02-04 20:59:31.000-08:00", "committer_id": 19864447, "message": "Remove warnings when NDEBUG build option used (#4196)\n\nWhen building using the new NDEBUG option recently added, the assert()\r\nmacro is defined to nothing. This leaves a few variables unused in the\r\nWiFi stack causing compiler warnings. Add in empty casts to remove\r\nthese warnings. Does not affect actual assert use when NDEBUG is not\r\ndefined.", "repo_description": null, "generate_at": "2018-02-04 20:59:31.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-01-21 13:54:53.000+08:00", "committer_id": 4349050, "message": "Clear calloc block only if malloc succeeds\n\nCalloc was calling memset(0) on NULL when its implicit malloc failed,\ncausing a crash in UMM.  Instead, only do the memset if the memory\nallocation succeeds.\n\nFixes issue #4207", "repo_description": null, "generate_at": "2018-01-20 20:14:37.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-01-17 14:10:40.000-03:00", "committer_id": 16824838, "message": "Move C++ vtables into IRAM, out of HEAP (#4179)\n\nGCC places vtables in .rodata, with a mangled name of \"_ZTV*.\"  Because\r\nthese are simply address jump tables, there is no need to place them in\r\nRAM.  Instead, have the linker place them in the .text (aka IRAM) section.\r\nThis will free up a variable amount of heap space, depending on the number\r\nof classes with virtual functions used in any particular project.", "repo_description": null, "generate_at": "2018-01-17 09:10:40.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2018-01-10 11:56:32.000+08:00", "committer_id": 4349050, "message": "Add SSL enabled WiFiServer, Updater, WebServer\n\nAdds SSL server mode for WiFiServerSecure, for plain SSL connections,\nESP8266WebServerSecure, for HTTPS web serving, and SecureHTTPSUpdater for\nencrypted OTA updates.\n\nExample code is provided for all new options, as well as a BASH script for\ngenerating their own, self-signed certificates.\n\nBoth ESP8266WebServerSecure and SecureHTTPSUpdater are important for secure\npassword-based authentication.  HTTP Basic Authentication, the only supported\nmodel presently, sends the username and password in *cleartext* and therefore\nshould *never* be used in any un-SSL encrypted channel unless you don't mind\nsharing your login and password with anyone else on the internet.  Even if the\nESP8266 is not safety critical, this cleartext broadcast could expose you should\nyou reuse this password elsewhere on your network or the internet.", "repo_description": null, "generate_at": "2017-02-27 20:17:04.000-08:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": null, "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": null, "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": null, "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 134367177, "repo_owner_id": 2946323, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": null, "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "chipsi007/esp8266-Arduino"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2018-01-25 19:33:11.000-08:00", "committer_id": 11875, "message": "Move to new I2S class naming", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2018-01-25 19:33:11.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2018-01-19 09:06:29.000-08:00", "committer_id": 11875, "message": "Add ESP32 since ESP8266Audio now supports it.", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2018-01-19 09:06:29.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2018-01-19 15:53:11.000-08:00", "committer_id": 11875, "message": "ESP32 compatibility fixes\n\nSimple includes/ifdefs to ensure ESP32 compilation works.", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2018-01-19 15:53:11.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-10-06 00:18:42.000-07:00", "committer_id": 11875, "message": "Major rework to 8-bit synthesis, pmem changes\n\nMove to an 8-bit formant synthesizer which reduces the noise on the\noutput and makes it more intelligible.\n\nAlso moved to a real continuous waveform generation instead of a step\none which also reduced noise.\n\nFixed some signedness issues between INTC and ESP8266 so it generates\nidentical output to the original(updated repo) code in\nhttps://github.com/earlephilhower/SAM (or the main s-macke repo if\nhe acceprs the PR).", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-10-06 00:18:42.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-10-06 08:23:47.000-07:00", "committer_id": 11875, "message": "Fix parameter setting to use sam.c, not class fcn", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-10-06 08:23:47.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-10-06 09:45:27.000-07:00", "committer_id": 11875, "message": "SetVoice() to choose from original voices\n\nSAM came with a list of suggested voice settings for different speakers.\nAdd a function to allow these to be auto-configured given the voice name.", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-10-06 09:33:20.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-10-05 21:20:55.000-07:00", "committer_id": 11875, "message": "Fix input string copy, was indexing wrong variable", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-10-05 21:20:55.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-10-04 19:47:38.000-07:00", "committer_id": 11875, "message": "Remove multtab, 8-bit SIN table", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-10-04 19:44:03.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-10-06 10:57:51.000-07:00", "committer_id": 11875, "message": "Move some add'l arrays to PROGMEM, add const\n\nMissed a few easy sport to move into PROGMEM, so move them out and make\nsure all our PROGMEM arrays are defined as const as well.", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-10-06 10:57:51.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-10-06 10:00:17.000-07:00", "committer_id": 11875, "message": "Move some more const arrays to PROGMEM", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-10-06 10:00:17.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-09-30 13:29:05.000-07:00", "committer_id": 11875, "message": "Initial checkin of working code\n\nThis is a port of the Software Automatic Mouth synthesizer from\nhttps://github.com/s-macke/SAM .\n\nAs of this checkin, it compiles and outputs speech to an I2S DAC\nproperly.  Will be refactored into an AudioGeneratorSAM class in\nthe coming commits.\n\nCode itself in SAM is ugly as a result of the decompilation utility.", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-09-30 13:29:05.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-09-30 15:19:51.000-07:00", "committer_id": 11875, "message": "Encapsulating as a class (but still ugly globals", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-09-30 15:19:51.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-09-30 16:21:35.000-07:00", "committer_id": 11875, "message": "Speech synthesis library for ESP8266\n\nConverted SAM into a wrapper class that can be used on the ESP8266 to\nallow for unassisted speech generation.  No internet connection is\nneeded, no data leaves the processor.\n\nIf you have a fixed vocabulary your application needs to speak, I'd\nrecommend using ESP8266Audio and the MP3 playback capability to have a\nvery high quality speech.  If, on the other hand, you don't know\nexactly what will be said (i.e. you're scraping a web page or reading\na sensor) this library may allow you to work without a display and\nstill give immediate feedback to the user.", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-09-30 16:18:06.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2017-09-30 13:28:30.000-07:00", "committer_id": 19864447, "message": "Initial commit", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2017-09-30 13:28:30.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 105398805, "repo_owner_id": 11875, "commit_at": "2018-03-09 10:40:12.000-08:00", "committer_id": 11875, "message": "Update readme to include ESP-32 support", "repo_description": "Speech synthesis for ESP8266 using S.A.M. port", "generate_at": "2018-03-09 10:40:12.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266SAM"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-03-22 00:53:37.000-03:00", "committer_id": 16824838, "message": "Fix WebServerSecure streamFile() (#4545)\n\n* Fix WebServerSecure streamFile()\r\n\r\nESP8266WebServerSecure's streamFile was using the base class' method\r\nwhich did not use SSL encrypt before transmitting, leading to failure.\r\n\r\nAdd a new template method and required support for\r\nWiFiClientSecure::write(Stream&) (using a local temp buffer since the\r\nSSL libs do not grok Arduino Streams at all).\r\n\r\nFixes #4544\r\n\r\n* Match ClientContext buffer and yield() behavior\r\n\r\nClientContext sends out 256 bytes at a time and gives a yield after\r\neach chunk to ensure the WDT doesn't fire.  Mimic that behavior in\r\nWiFiClientSecure::write(Stream&).", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-03-21 20:53:37.000-07:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-03-18 08:53:08.000+08:00", "committer_id": 4349050, "message": "Fix exception handler, add assert, reduce RAM (#4187)\n\nMove all exception strings to IRAM and out of both PMEM (illegal) and add\r\noutput of any assert() failinf conditions.\r\n\r\nThe exception handler may be called while the SPI interface is in a bad\r\nstate.  This means no PROGMEM reads are allowed, and all data and functions\r\nused must be in system RAM or IRAM.\r\n\r\nAdd a new helper macro, ets_printf_P(), which places a constant string in\r\nIRAM and copies it to the stack before calling the real ets_printf().\r\nThis makes the code simpler to read as no unwieldy combinations of\r\nets_putc/ets_printf/... are required to output anything.\r\n\r\nThe old handler also mistakenly used PSTR() strings in some places, so\r\nfix those with this patch as well.\r\n\r\nGives back ~180 bytes of heap to every sketch built as the exception handler\r\nis always included an application.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-03-17 17:53:08.000-07:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-03-17 07:51:32.000-07:00", "committer_id": 19864447, "message": "Record last failed alloc, dump on a panic (#4220)\n\nAt runtime, whenever a realloc, malloc, calloc, or new call fails to\r\nfind enough memory, record the calling function and size requested.\r\nDoes not print anything or call any heavyweight functions on this, as it\r\nis legal to return NULL to an alloc-type call.\r\n\r\nIf the main application handles this NULL properly, there should be no\r\npanic and nothing different will happen.\r\n\r\nIf the main application panics() at any later point in time, this record\r\nwill be printed out as part of the crash log for processing with an\r\nupdated EspExceptionDecoder.java.\r\n\r\nThis adds 2-3 instructions overhead in the normal case, and around 10-12\r\ninstructions in the failing case, and requires an additional 8 bytes of\r\n.BSS to function.\r\n\r\nOnly a single address is kept, the final failing malloc-type function call\r\nbefore a panic, but it is trivial to extend to a fifo with little overhead\r\nin the common, non-failing case.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-03-17 07:51:32.000-07:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-03-17 01:38:56.000-03:00", "committer_id": 16824838, "message": "Check Print::write(byte) return and stop on fail (#4527)\n\nThe default Print::write(byte, count) method was continuing to send\r\nbytes one-by-one even when a prior write returned 0.  Because the buffer\r\npointer was incremented no matter success or fail, this leads to data\r\ncorruption as you'll not send some bytes in the middle and will then\r\nsend extra bytes past the end of the passed in buffer.\r\n\r\nBecause there's no concept of timeout, just stop on the first time\r\nwrite(byte) fails and return the total bytes successfully written\r\nand let the user worry about retrying or handling an error.\r\n\r\nFound by @d-a-v and discussed on gitter.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-03-16 21:38:56.000-07:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-03-16 07:56:34.000-07:00", "committer_id": 19864447, "message": "Remove stray sigma_delta.h header (#4523)\n\nRemove stray, older version of sigma_delta.h\r\n\r\nAn older version of sigma_delta.h was committed to the root directory. Remove it, as we only want the later, new one already present in cores/esp8266. Thanks, @reaper7, for noticing it.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-03-16 07:56:34.000-07:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-03-10 12:07:04.000-08:00", "committer_id": 19864447, "message": "Add support for hardware Sigma Delta generator\n\nProvides a simple interface to attach/detach pins to the sigma-delta generator, and get/set the 2 parameters prescaler & target.  Working example that fades the onboard LED is provided.  Code and sample by @stefaandesmet2003.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-03-10 12:07:04.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-02-17 18:47:10.000-08:00", "committer_id": 19864447, "message": "Add -Werror to acceptance builds for C and CPP (#4369)\n\nUse platform.local.txt to add -Werror to GCC for the build of all\r\ncode.  Any warnings on a submitted patch will cause an error.\r\n\r\nSeveral examples and libraries had warnings/errors (missing returns\r\non functions, types, etc.).  Clean those up with this commit as well.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-02-17 18:47:10.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-02-14 07:50:26.000-08:00", "committer_id": 19864447, "message": "Fix double-free in ESP8266WebServer (#4365)\n\nIn issue #4350, @mongozmaki found that the web server was accessing a\r\ndeleted variable in the destructor.  Implement his suggested change\r\nand move the close() before any freeing.  Could also have simply\r\nNULL'd out the _currentHeaders member after freeing as well.\r\n\r\nFixes issue #4350", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-02-14 07:50:26.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-02-10 08:12:38.000-08:00", "committer_id": 19864447, "message": "Wrap mimetype strings in FSPTR()s (#4338)\n\nMimetype is now in progmem, so any accesses to it need to be using FPSTR()\r\nwrapped Strings.\r\n\r\nFixes #4329", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-02-10 08:12:38.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-02-08 15:25:24.000-03:00", "committer_id": 16824838, "message": "Fix mem leak in SSL server, allow for concurrent client and server connections w/o interference (#4305)\n\n* Fix leak on multiple SSL server connections\r\n\r\nFixes #4302\r\n\r\nThe refcnt setup for the WiFiClientSecure's SSLContext and ClientContext\r\nhad issues in certain conditions, causing a massive memory leak on each\r\nSSL server connection.  Depending on the state of the machine, after two or\r\nthree connections it would OOM and crash.\r\n\r\nThis patch replaces most of the refcnt operations with C++11 shared_ptr\r\noperations, cleaning up the code substantially and removing the leakage.\r\n\r\nAlso fixes a race condition where ClientContext was free'd before the SSLContext\r\nwas stopped/shutdown.  When the SSLContext tried to do ssl_free, axtls would\r\nattempt to send out the real SSL disconnect bits over the wire, however by\r\nthis time the ClientContext is invalid and it would fault.\r\n\r\n* Separate client and server SSL_CTX, support both\r\n\r\nRefactor to use a separate client SSL_CTX and server SSL_CTX.  This\r\nallows for separate certificates to be installed on each, and means\r\nthat you can now have both a *single* client and a *single* server\r\nrunning in parallel at the same time, as they'll have separate memory\r\nareas.\r\n\r\nTested using mqtt_esp8266 SSL client with a client certificate and a\r\nWebServerSecure with its own custom certificate and key in parallel.\r\n\r\n* Add brackets around a couple if-else clauses", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-02-08 10:25:24.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-02-06 07:33:26.000-08:00", "committer_id": 19864447, "message": "SSL server DEBUG, code cleanup fixes (#4280)\n\nThe server needs to load an X509 and RSA key, but instead of using\r\nthe existing loadObject() calls implemented its own.  Remove them and\r\nuse the standard ones instead.\r\n\r\nThe DEBUG_OUTPUT macro was undefined in the SSL Web server.  Add it\r\nin do that when you compile with DEBUG=HTTP_SERVER it actually compiles.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-02-06 07:33:26.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-02-06 11:06:05.000-03:00", "committer_id": 16824838, "message": "Refrech api.github.com x509 certificate (#4306)\n\nThe certificate fingerprint included with the HTTPSRequest example seems\r\nto be for an expired api.github.com certificate.  Replace with the current\r\none to avoid reporting \"certificate mismatch\" errors when running.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-02-06 06:06:05.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-02-04 20:59:31.000-08:00", "committer_id": 19864447, "message": "Remove warnings when NDEBUG build option used (#4196)\n\nWhen building using the new NDEBUG option recently added, the assert()\r\nmacro is defined to nothing. This leaves a few variables unused in the\r\nWiFi stack causing compiler warnings. Add in empty casts to remove\r\nthese warnings. Does not affect actual assert use when NDEBUG is not\r\ndefined.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-02-04 20:59:31.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-01-21 13:54:53.000+08:00", "committer_id": 4349050, "message": "Clear calloc block only if malloc succeeds\n\nCalloc was calling memset(0) on NULL when its implicit malloc failed,\ncausing a crash in UMM.  Instead, only do the memset if the memory\nallocation succeeds.\n\nFixes issue #4207", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-01-20 20:14:37.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-01-17 14:10:40.000-03:00", "committer_id": 16824838, "message": "Move C++ vtables into IRAM, out of HEAP (#4179)\n\nGCC places vtables in .rodata, with a mangled name of \"_ZTV*.\"  Because\r\nthese are simply address jump tables, there is no need to place them in\r\nRAM.  Instead, have the linker place them in the .text (aka IRAM) section.\r\nThis will free up a variable amount of heap space, depending on the number\r\nof classes with virtual functions used in any particular project.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2018-01-17 09:10:40.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2018-01-10 11:56:32.000+08:00", "committer_id": 4349050, "message": "Add SSL enabled WiFiServer, Updater, WebServer\n\nAdds SSL server mode for WiFiServerSecure, for plain SSL connections,\nESP8266WebServerSecure, for HTTPS web serving, and SecureHTTPSUpdater for\nencrypted OTA updates.\n\nExample code is provided for all new options, as well as a BASH script for\ngenerating their own, self-signed certificates.\n\nBoth ESP8266WebServerSecure and SecureHTTPSUpdater are important for secure\npassword-based authentication.  HTTP Basic Authentication, the only supported\nmodel presently, sends the username and password in *cleartext* and therefore\nshould *never* be used in any un-SSL encrypted channel unless you don't mind\nsharing your login and password with anyone else on the internet.  Even if the\nESP8266 is not safety critical, this cleartext broadcast could expose you should\nyou reuse this password elsewhere on your network or the internet.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2017-02-27 20:17:04.000-08:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 126514597, "repo_owner_id": 22991986, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": "https://github.com/esp8266/Arduino.git", "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "sudhendu-it/arduino_lib"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-10-01 20:48:35-07:00", "committer_id": 11875, "message": "Fix state shift for switch, was going wrong way\n\nThe state history for the Switch class was being shifted in the wrong\ndirection, causing all output to be stuck at the first sample.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-10-01 20:48:35-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-30 13:39:32-07:00", "committer_id": 11875, "message": "Move the internal sensors to an object as well, w/smoothing\n\nBattery voltage was being read out with high noise using a single sample\nso move it our and do the same smoothing as with a thermistor.  Apply\nit to the temperature as well since it's almost free.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-30 13:39:32-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-30 12:39:55-07:00", "committer_id": 11875, "message": "Add Switch class w/debounce, fine tune Thermistor\n\nMigrate debounced switch code to its own class.  Assumes that the calling\nframework has reasonable delays between invocations to allow physical debounce\nto happen, and then only reports when all samples show stable values.\n\nThermistor now starts with reasonable values even when not enough samples\navailable to smooth as requested.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-30 12:39:55-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-29 13:26:14-07:00", "committer_id": 11875, "message": "Add parameter parsing to web interface, friendly names for sensors\n\nThe web interface now has helper functions to automatically handle form\ndata when using GET (uri parameter) posting of params.  Simple accessor\nfunctions added to allow the interface to access these form parameters.\n\nAdded friendly names for sensors so instead of the 32-bit MAC you can\nuse \"frontdoor\" and \"livroom1\" identifiers for your own sanity.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-29 13:26:14-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-28 15:42:17-07:00", "committer_id": 11875, "message": "Add log output and last report text to web interface\n\nTo allow for debugging w/out a command prompt, keep the last few log\nlines and show them on the web page.  Also list the last report in\nhuman readable form as well.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-28 15:42:17-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-28 13:37:37-07:00", "committer_id": 11875, "message": "Store the sensor names in the JSON\n\nNeed to tuck away sensor report names in the JSON so restarts won't\nlose the friendly name", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-28 13:37:37-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-28 13:24:26-07:00", "committer_id": 11875, "message": "Send the sensor names to the GW using new message\n\nImmediately after a join, set seqno=>0 and send the device\nnames across to the GW.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-28 13:24:26-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-28 12:59:01-07:00", "committer_id": 11875, "message": "Change reportType to be only the interpretation, not name\n\nAllow returning many different kinds of values and pass the encoding\nto the gateway.  The names of the reports need to be sent as well,\nbut that is not done just yet and the GW will substitute default\nnames.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-28 12:59:01-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-28 11:49:04-07:00", "committer_id": 11875, "message": "Fix number formatting from %ud->%u\n\nHad typo in unsigned int string formats, fix to plain %u.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-28 11:49:04-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-26 09:11:08-07:00", "committer_id": 11875, "message": "Use centralized sensor type definition, allow >8 bit returns\n\nDefine the report type centrally and add a 0.1 resolution return value\nfor things like temp or light.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-26 09:11:08-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-25 08:50:21-07:00", "committer_id": 11875, "message": "General sensor, thermistor cleanup and ADC register fixes\n\nThermistor readings are now averaged over 4 samples and some of the\nADC registers for clock settings adjusted to the correct settings.\nRandom number and thermistor testing added.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-25 08:50:21-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-24 09:11:26-07:00", "committer_id": 11875, "message": "Add thermistor reading code using packed LUT\n\nThermistors have exponential transfer function, so to avoid any FP\nlibraries being included precompute the desired range of outputs\nand use those in a LUT to calculate temperature from an ADC readout.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-24 09:11:26-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-23 11:03:26-07:00", "committer_id": 11875, "message": "General cleanup after random generator testing\n\nSeems to generate a different MAC on every run, so taking out the random\nMAC generation portion and cleaning up the comments to all use same\nstyle", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-23 11:03:26-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-23 10:30:22-07:00", "committer_id": 11875, "message": "Round up any delays when dividing to ensure proper minimum time\n\nWhen we divide the MS delay value by any clock slowdown, we need to always\nround up to ensure we wait the proper time.  Otherwise, for example, if we\nare at 512khz and delay 3ms we'd actually delay 0ms.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-23 10:30:22-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-23 10:23:43-07:00", "committer_id": 11875, "message": "Update random number generator with ADC, timers\n\nRedo the RNG to do additional twists and include ADC noise and appropriate\ntimer configs.  Timer1 set to freerunning because WDT is not guaranteed to\nbe exactly 16ms, nor is the timer itself when running from intosc.  So we\njust want to free run as the LSB will still be random and evenly distributed.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-23 10:23:43-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-21 14:08:26-07:00", "committer_id": 11875, "message": "Start system at 1MHz, so update the clock timings accordingly\n\nWas coming up assuming we were at a different frequency than the\nreal one causing the Serial port to go off.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-21 14:08:26-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-21 14:03:48-07:00", "committer_id": 11875, "message": "RNG fix to use TCNT1 properly, add in temp and volt entropy\n\nRNG now uses the internal reference voltage and temperature sensors\nto add some more entropy.  Also clear up the TCNT1 usage so it's\nmore aligned to WDT timeout.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-21 14:03:48-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-18 15:50:05-07:00", "committer_id": 11875, "message": "1MHz bootloader added, log messages from sensor OTA\n\nAs we are now using INTOSC/8, need a 1MHZ bootloader to actually put\nnew code into the flash.  Use Optiboot with 1MHz F_CPU and 9600bps as\nupload rate (safer for upload to uncalibrated clocks).\n\nAdd some logging as to clock rate to ensure testing of 4MHZ low-voltage\noperation.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-18 15:50:05-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-16 13:43:10-07:00", "committer_id": 11875, "message": "Minor refactor of sensor_t and bugfixes\n\nMove sensor_t to a header so we can see it elsewhere.\n\nFix 256-char case off-by-one error in hex dumper.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-16 13:43:10-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-16 11:21:33-07:00", "committer_id": 11875, "message": "Fix error handler, was missing \\r\\n in headers\n\nFirefox would hang when the www-authenticate was sent because there\nwas no training \\r\\n before closing the connection.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-16 11:21:33-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-16 10:18:17-07:00", "committer_id": 11875, "message": "Invalid login will prompt for correct one\n\nWhen an invalid user/pass received, return 401 and not 403 to allow\nuser to retry.\n\nMemory fix in b64decoder.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-16 10:18:17-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-16 10:00:24-07:00", "committer_id": 11875, "message": "HTTP basic authentication added\n\nUser and password required to do any operations on the website.  As this\nis HTTP Basic authentication, need to use a SSL proxy (pound) on real\nsystem to prevent eavesdropping.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-16 10:00:24-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-16 09:06:07-07:00", "committer_id": 11875, "message": "JSON config, mutex protect sensor, web update\n\nUse a JSON (libjson-c) file format for the sensors report file.  As\nit writes the AES key out it'll need to be protected by chmod/chown\nin practice.\n\nProtect access to gSensor[] via a MUTEX so the web UI and other threads\ncan't stomp on things or get inconsistent information.\n\nAdd simple way to remove a sensor from the gateway via the web GUI.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-16 09:06:07-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-15 14:43:51-07:00", "committer_id": 11875, "message": "Web interface to allow display and control instead of console\n\nAdd simple webserver on port 1000 to display the joined sensors and\nto enable joining (or other things like removal or renaming).", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-15 14:43:51-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-15 10:36:25-07:00", "committer_id": 11875, "message": "Refactor out common code, move to 3-bit msgtype\n\nMoved common message and radio code to lib folder to reduce duplication\nof work with the sensor and gateway.\n\nMessage type is now 3 bits (0-7) to allow 32 reports before regenerating\nthe AES key (an expensive, slow operation).", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-15 10:36:25-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-14 15:43:40-07:00", "committer_id": 11875, "message": "Handle case of sensor re-joining after powercycle\n\nWhen a sensor reconnects after a powercycle we do same protocol as\nbefore, but instead of adding it to the end of the list we overwrite\nits entry.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-14 15:43:40-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-14 15:16:15-07:00", "committer_id": 11875, "message": "Use 4-byte MAC to ID sensor, allow event messages to retry faster\n\nA 4-byte MAC is auto-generated first run to uniquely identify the\nsensor node.  This is stored w/a checksum in EEPROM.\n\nWhen an event causes the controller to wake up before standard\nreport-in time, allow it to retry sending that event 10x faster\nthan a standard checkin retry, hopefully allowing events a\nquicker response.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-14 15:16:15-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-14 11:50:11-07:00", "committer_id": 11875, "message": "Move clock out to separate file, adjust for battery limits\n\nClock routines pushed to another file.  Also set the max clock\nas a function of the battery voltage.  Need to set fuses for\nINTOSC + DIV/8 to get a 1MHz startup and then the code will\ncheck battery levels and adjust the max clock to 8 or 4MHz.\nEvery time the battery/temp sensor is checked we can adjust\nthis value.\n\nAlso add -O2 to hopefully speed up some of the crypto routines\nbut no extensive testing done yet.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-14 11:50:11-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-13 21:49:59-07:00", "committer_id": 11875, "message": "Copy the new AEK key after generating the ACK message\n\nWas sending the K2S ACK using the new key, not the old.  Sensor\nis expecting the old key until they see this ACK, so it was being\ndropped.\n\nAlso, sensor once in K2S sent state, waiting for ACK of new key, must\nstay there until the ACK comes because the GW may have already seen\nthe K2S message and sent an ACK which we missed.\n\nThe remaining portions need appropriate timeouts for rekey success.\nShould probably resend the initial REKEY request if we timeout at\nany stage, but not yet implemented.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-13 21:49:59-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-13 21:10:24-07:00", "committer_id": 11875, "message": "Refactor listener state machine to 1-per-sensor\n\nInitial work to allow interleaved multiple sensors, to ensure that we\ncan handle multiple sensor sequences in parallel (and that a single long\nrekey won't block messages from others).  Works in simple case but still\nhas a long way to go to be non-hackish.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-13 21:10:24-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-13 07:58:40-07:00", "committer_id": 11875, "message": "Add MQTT preliminary publishing to gateway\n\nUsing libpaho, publish MQTT messages on sensor reports.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-13 07:58:40-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-10 19:24:07-07:00", "committer_id": 11875, "message": "Add broadcom libraries to gateway link\n\nBuilt on RPI natively,need to include -lbrcm to get SPI operations.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-10 19:24:07-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-10 14:45:33-07:00", "committer_id": 11875, "message": "Move to newer libs", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-10 14:45:33-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-10 14:29:40-07:00", "committer_id": 11875, "message": "Use the standard Atmel bootloader\n\nOptiboot makes it harder to upload from Arduino IDE when needed, so revert\nto the stock one.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-10 14:29:40-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-10 13:02:27-07:00", "committer_id": 11875, "message": "Convert to makefiles and use common lib directory\n\nWIP merging the two codebases to build using makefiles instead of scripts\nand to both reference the same libraries.  This is complicated by the\nlimitations of the INO tool used to build the AVR code.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-10 13:02:27-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-10 10:24:36-07:00", "committer_id": 11875, "message": "Add message format spreadsheet\n\nSimple bitmap of each message.  Explicit pack/unpack required to ensure\nthat any packing differenced between gcc-avr, gcc-x86, and gcc-arm don't\ncause problems.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-10 10:24:36-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-10 10:12:11-07:00", "committer_id": 11875, "message": "Initial checkin from working sources.\n\nPlease see README.md for more information.", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-10 10:12:11-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 67881335, "repo_owner_id": 11875, "commit_at": "2016-09-10 09:18:43-07:00", "committer_id": 11875, "message": "Initial commit", "repo_description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "generate_at": "2016-09-10 09:18:43-07:00", "author_id": 11875, "repo_name": "earlephilhower/sensy"}, {"repo_id": 50574931, "repo_owner_id": 12663778, "commit_at": "2018-01-31 13:56:20.000-08:00", "committer_id": 11875, "message": "Replace addr2line with GDB to get accurate line #s\n\nAddr2line on the xtensa seems to have trouble with identifying the\nproper file:line number for an exception address.  Until there is a\nfix, the workaround is to use GDB to locate them.\n\nSee https://github.com/jcmvbkbc/binutils-gdb-xtensa/issues/5 .\n\nReplace the addr2line processing/formatting with gdb's formatting,\nleaving the output identical with one exception:  addresses with\nno source code (i.e. not code, but constant data somewhere or just\nrandom variables on the stack) *will not print*.  They're silently\nignored in the output.\n\nThis also now presents the EPC1/PC and EXCVADDR on their own\nlines hilighted at the top of the dump.\n\nAdditionally, handle the case where the exception dumper itself\non the ESP8266 hits the WDT (i.e. during dump of an infinite\nrecursion).  In this case the final \"<<<stack<<<\" line may not be\ngenerated, so simply parse everything from \">>>stack>>>\" to the end.", "repo_description": "Exception Stack Trace Decoder for ESP8266 and ESP32", "generate_at": "2018-01-22 21:34:31.000-08:00", "author_id": 11875, "repo_name": "me-no-dev/EspExceptionDecoder"}, {"repo_id": 50574931, "repo_owner_id": 12663778, "commit_at": "2018-01-22 19:13:15.000-08:00", "committer_id": 11875, "message": "Add optional, automatic OOM logger parsing\n\nAn updated ESP8266 panic function can print out the calling function/line\nand size requested for the last malloc/realloc/calloc/new allocation that\nfailed, without the overhead of full the OOM stack.\n\nAdd parsing for this line, when present, and output the function, file,\nline, and amount of memory requested to the display.  When not present,\ndo nothing different.", "repo_description": "Exception Stack Trace Decoder for ESP8266 and ESP32", "generate_at": "2018-01-22 19:13:15.000-08:00", "author_id": 11875, "repo_name": "me-no-dev/EspExceptionDecoder"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-29 15:52:44.000-07:00", "committer_id": 11875, "message": "Add filesystem sectors to constructor and utils\n\nCan create filesystems for any defined SPIFFS configuration using a\nnew --sectors option.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-29 14:57:57.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-29 16:23:57.000-07:00", "committer_id": 11875, "message": "Remvoe final compiler warnings", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-29 16:23:57.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-29 16:20:17.000-07:00", "committer_id": 11875, "message": "Move all utils into single binary", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-29 16:20:17.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-28 21:07:03.000-07:00", "committer_id": 11875, "message": "On a read-modify-write sector, allocate new sector\n\nWhen a write over existing data is done, try and allocate a new sector\nto write the updated data instead of overwriting the existing sector.\nThis should help spread around writes and help wear-levelling at no\nperformance cost.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-28 21:07:03.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-27 13:07:29.000-07:00", "committer_id": 11875, "message": "Add tools and ensure cross platform compatibilty\n\nCommand-line tools to generate and modify binary images of the filesystem\nfor later upload with esptool.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-27 13:07:29.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-29 13:42:24.000-07:00", "committer_id": 11875, "message": "Check for errors on fileentry creation\n\nCheck that we actually have create a file entry after trying to create one\nbefore returning from ::open.  On error, now return NULL.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-29 13:42:24.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-27 14:52:16.000-07:00", "committer_id": 11875, "message": "Cleanup debug, fix unformatted mount error\n\nWas able to mount a filesystem that wasn't formatted (assumed the FAT was\nat 0).  Now return false from mount and don't succeed.\n\nClean up debug potential crash by 0-terminating name.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-27 14:52:16.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-27 15:18:39.000-07:00", "committer_id": 11875, "message": "Fix memory leak on debug paths", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-27 15:18:39.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-23 21:09:22.000-07:00", "committer_id": 11875, "message": "Initial checkin, semi-working in testbed code\n\nImplements file open/close for read and writes with seeks on a 4K sector\nbased underlying storage.  Right now running under Linux for debugging, but\nonce completed wihh move to real ESP8266 with real flash writes.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-23 21:09:22.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-23 21:08:41.000-07:00", "committer_id": 19864447, "message": "Initial commit", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-23 21:08:41.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-25 20:14:37.000-07:00", "committer_id": 11875, "message": "Add DEBUGFASTROMFS macro to enable/disable messages", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-25 20:14:37.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-25 20:06:17.000-07:00", "committer_id": 11875, "message": "Fix file extend on first sector\n\nFirst sector of a new file was not erased on an extend operation.\nNow determine if we need to erase it, and do so in File creation.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-25 20:05:13.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-25 21:05:59.000-07:00", "committer_id": 11875, "message": "Rename classes to FastROM*, add speed test app", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-25 21:05:59.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-25 21:29:27.000-07:00", "committer_id": 11875, "message": "seek() returns bool, fix testing script\n\nseek() in SPIFFS returns true/false on success/failure, seems sensible co\ncopy that behavior.\n\nInitial tests on a 160MHz, 4MB WeMos D1 Mini show sequential writes ~3% slower, but\nsequential reads at **2x** and evil reverse reads (aka random) at **266x** SPIFFS!\n------Using FastROMFS\nCreating 512KB file, may take a while...\n==> Time to write 512KB in 256b chunks = 11909 milliseconds\n==> Created file size = 524288\nReading 512KB file sequentially in 256b chunks\n==> Time to read 512KB sequentially in 256b chunks = 103 milliseconds = 5090000 bytes/s\nReading 512KB file in reverse by 256b chunks\n==> Time to read 512KB in reverse in 256b chunks = 166 milliseconds = 3158000 bytes/s\n------Using SPIFFS\nCreating 512KB file, may take a while...\n==> Time to write 512KB in 256b chunks = 11521 milliseconds\n==> Created file size = 524288\nReading 512KB file sequentially in 256b chunks\n==> Time to read 512KB sequentially in 256b chunks = 226 milliseconds = 2319000 bytes/s\nReading 512KB file in reverse by 256b chunks\n==> Time to read 512KB in reverse in 256b chunks = 44151 milliseconds = 11000 bytes/s", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-25 21:25:51.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-26 20:42:23.000-07:00", "committer_id": 11875, "message": "Add misaligned read speed test", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-26 20:42:23.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-26 20:49:52.000-07:00", "committer_id": 11875, "message": "Move into library format", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-26 20:49:52.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-26 20:23:07.000-07:00", "committer_id": 11875, "message": "Add 1-word cache to ReadPartial\n\nStore the last 32-bit value we read from flash in a cache variable in case\nwe have a pathological case like while(1) { c=f->fetc(); }.  Speeds up that\ncase by 2x at the cost of about 16 bytes of RAM.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-26 20:23:07.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-26 20:08:08.000-07:00", "committer_id": 11875, "message": "Modify on-flash format for portability\n\nInclude the # of sectors and give a fixed # of file entries.  By construction\nflash sizes up to 4MB can be used with the current configuration.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-26 20:08:08.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-26 07:38:22.000-07:00", "committer_id": 11875, "message": "Add Stream/Print class methods", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-26 07:38:22.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-26 21:01:31.000-07:00", "committer_id": 11875, "message": "Add library.* for Arduino toolchain", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-26 20:55:04.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-25 19:32:06.000-07:00", "committer_id": 11875, "message": "Run against real hardware. File extension broken.\n\nTurn the Linux .C into an Arduion compilable file and ran against real\nESP8266 hardware.  Everything but the file extension seems OK, need to\ndo more debugging.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-25 19:32:06.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-25 15:39:22.000-07:00", "committer_id": 11875, "message": "Add fgetc/fputc (putc/gets are #define macros)", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-25 15:39:22.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-25 15:24:17.000-07:00", "committer_id": 11875, "message": "Add File::{size,name}, test ReadPartialSector@10k", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-25 15:24:17.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-25 15:11:34.000-07:00", "committer_id": 11875, "message": "PartialRead from flash using 4K alignment only\n\nBlack magic to enable all partial reds to be handled with only a small\nadditional buffer space for alignment.  Most data is read and aligned\nin the passed-in buffer, minimizing the need for extra RAM.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-25 15:11:34.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-25 09:37:46.000-07:00", "committer_id": 11875, "message": "Check alignment on WriteSector, fsMounted on posix", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-25 09:37:46.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-31 15:40:39.000-07:00", "committer_id": 11875, "message": "Remove memory clear in ReadPartial\n\nNo need to clear memory before reading flash in ReadPartialSector.\nThis was only used during debugging to make it easier to see where\nthings ended up in the buffer.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-31 15:40:39.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-31 15:32:59.000-07:00", "committer_id": 11875, "message": "Rationalize constructor using default value\n\nInstead of replicating the Filesystem constructor, use a single one\nwith a default sector count of 0 which will then calculate the max\nsize appropriately.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-31 15:32:59.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-31 12:28:13.000-07:00", "committer_id": 11875, "message": "Keep track of FAT overwrite order, don't scan\n\nInstead of looking on-flash each time we update the FAT, keep an ordered\nlist in memory of the order in which we should be writing to the FAT copies.\n\nThis also adds full validation of FAT sectors before putting them in the\nlist, so invalid (i.e. power lost inmiddle of erase or write) are\noverwritten first.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-31 12:26:58.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-30 08:25:25.000-07:00", "committer_id": 11875, "message": "Remove dependency on external CRC32 lib\n\nthe Arduino CRC32 library dumps a \"deprecated\" warning every time it's\ncalled.  Just use the same one on PC and ESP8266, with a hardcoded table\nin PROGMEM, to calculate instead and remove the CRC32 dependency.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-30 08:25:25.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-30 14:25:38.000-07:00", "committer_id": 11875, "message": "Fix memory leak on FastROMFile::close()\n\nWe were not deleting the data or the actual object properly, leading\nto either 64B or 4KB+64B being lose on each file->close().  Now delete\nthe object and memory references properly.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-30 14:25:38.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-30 11:09:17.000-07:00", "committer_id": 11875, "message": "Add PC test target, remove GCC warnings\n\nEnable -Wall and -Wpedantic and clear up all the warnings shown by\nGCC.\n\nAdd a \"test\" makefile target which runs FSTEST with Valgrind to check\nfor memory leaks or corruption.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-30 11:09:17.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-30 19:44:06.000-07:00", "committer_id": 11875, "message": "FindOldestFAT uses STDINT MAX macro\n\nHad an integer overflow problem on the ESP8266 (not PC) because was shifting\n1L >32 bits.  Use STDINT MAX macro instead.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-30 19:44:06.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-24 19:29:34.000-07:00", "committer_id": 11875, "message": "Add error checking and FAT flushing", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-24 19:29:34.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-24 20:55:39.000-07:00", "committer_id": 11875, "message": "Test 1-byte writes, 1-byte reads on a w+ file", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-24 20:55:39.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-24 18:32:39.000-07:00", "committer_id": 11875, "message": "Add FAT persistence, opendir interface, CRC", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-24 18:30:14.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-24 04:20:43.000-07:00", "committer_id": 11875, "message": "Move to a 12-bit, packed FAT", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-24 04:20:43.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-24 20:15:29.000-07:00", "committer_id": 11875, "message": "Use accessors and keep track of FS dirty/clean", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-24 20:15:29.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-24 20:49:07.000-07:00", "committer_id": 11875, "message": "Fix read/write on a 4K boundary error", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-24 20:49:07.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-10-24 20:32:05.000-07:00", "committer_id": 11875, "message": "Add some add'l file functions, delete File @ close", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-10-24 20:32:05.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 108075370, "repo_owner_id": 11875, "commit_at": "2017-11-01 16:54:50.000-07:00", "committer_id": 11875, "message": "Fix ::read problem when spanning sectors\n\nHad an off-by-one condition when trying to detect if there was no more\ndate available in the sector to read.", "repo_description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "generate_at": "2017-11-01 16:54:50.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266FastROMFS"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-04-03 00:32:35.000+02:00", "committer_id": 4800356, "message": "Add flash for vtable destination, make it default, and add build menu to control options (#4582)\n\n* Add flash for vtable destination, make it default\r\n\r\nAdd an option for placing vtables in flash to complement the existing\r\niram and heap options.  \"make flash\"\r\n\r\nNow that there is a way to change it, move to vtables in flash as default\r\nas only users with interrupts which use vtables require the vtable to\r\nbe in RAM.  For those users, if the tables are small enough they can put\r\nthem in IRAM and save heap space for their app.  If not, then the vtables\r\ncan be placed in HEAP which supports much larger tables.\r\n\r\n* Add VTable menu, FLASH as default, remove Makefile\r\n\r\nConvert from manual \"make\" operated app.ld creation to runtime creation\r\nwhose options are selected from the build menu.\r\n\r\nUse a prelink recipe to create the output app.ld file each run, without\r\nneed for any special tools.\r\n\r\nUpdate the boards.txt.py script to generate this new config.", "repo_description": null, "generate_at": "2018-04-02 15:32:35.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-04-02 07:37:21.000-07:00", "committer_id": 19864447, "message": "I2s input API and examples (#4539)\n\nEnables I2S stereo input via DMA using new API calls:\r\n\r\n. i2s_rxtx_begin(bool rx, rool tx);\r\n. i2s_read_sample(uint32_t *l, uint32_t *r);\r\n\r\nOriginal API calls will only enable TX, so this is backwards compatible.\r\n\r\nAdd simple I2S input example code using Arduino serial plotter.\r\n\r\nAdd UDP transmit of I2S microphone data to a PC (remote microphone).\r\n\r\nClean up and reorganize code to share RX and TX logic as much as\r\npossible.  Fix a potential WDT error while in blocking sample read\r\nand write.", "repo_description": null, "generate_at": "2018-04-02 07:37:21.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-03-27 20:40:34.000-03:00", "committer_id": 16824838, "message": "I2S driver fixes for IRQs, protocol, factoring (#4574)\n\n* I2S driver fixes for IRQs, protocol, factoring\r\n\r\nAll redundant ICACHE_FLASH_ATTR decorators were removed, we already do\r\nthis by default for all routines, anyway,\r\n\r\nThe actual ISR and its called function moved to to IRAM.  Used to be in flash\r\ndue to the decorator, which could lead to crashes.  Use ets_memset to mute\r\nbuffers in ISR.\r\n\r\nFix the I2S on-the-wire protocol by enabling the transmit delay I2STMS because\r\nI2S is supposed to send the MSB one clock after LRCLK toggles.  This was\r\ncausing I2S to be twice as loud as intended in the best of cases, and causing\r\ngarbage/noise output when the MSB was set since data was effectively shifted.\r\n\r\nRefactor the clock divider setting to be done in one function only, as there\r\nis no reason to do the same complicated bit setting in two spots.\r\n\r\n* Comment some add'l registers, use optimstic_yield\r\n\r\nComment the known and unknown I2S register settings for posterity, using\r\nthe ESP32 guide as a basis.\r\n\r\nUse optimistic_yield() instead of esp_wdt_disable/enable when busy\r\nwaiting in blocking writes to ensure we don't hog the CPU completely.\r\n\r\nMove the constant IO pins to #defines for easier understanding.", "repo_description": null, "generate_at": "2018-03-27 16:40:34.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-03-27 14:06:56.000+02:00", "committer_id": 4800356, "message": "Add linker MAP artifact to standard build process (#4186)\n\nGenerate and preserve a linker .MAP file for the project in the usual\r\nbuild directory.  This map file is useful for finding out where FLASH,\r\nIROM, and IRAM are being used as it shows gcc internally generated\r\nthings such as jump tables and constant function-local variables.", "repo_description": null, "generate_at": "2018-03-27 05:06:56.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-03-22 00:53:37.000-03:00", "committer_id": 16824838, "message": "Fix WebServerSecure streamFile() (#4545)\n\n* Fix WebServerSecure streamFile()\r\n\r\nESP8266WebServerSecure's streamFile was using the base class' method\r\nwhich did not use SSL encrypt before transmitting, leading to failure.\r\n\r\nAdd a new template method and required support for\r\nWiFiClientSecure::write(Stream&) (using a local temp buffer since the\r\nSSL libs do not grok Arduino Streams at all).\r\n\r\nFixes #4544\r\n\r\n* Match ClientContext buffer and yield() behavior\r\n\r\nClientContext sends out 256 bytes at a time and gives a yield after\r\neach chunk to ensure the WDT doesn't fire.  Mimic that behavior in\r\nWiFiClientSecure::write(Stream&).", "repo_description": null, "generate_at": "2018-03-21 20:53:37.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-03-18 08:53:08.000+08:00", "committer_id": 4349050, "message": "Fix exception handler, add assert, reduce RAM (#4187)\n\nMove all exception strings to IRAM and out of both PMEM (illegal) and add\r\noutput of any assert() failinf conditions.\r\n\r\nThe exception handler may be called while the SPI interface is in a bad\r\nstate.  This means no PROGMEM reads are allowed, and all data and functions\r\nused must be in system RAM or IRAM.\r\n\r\nAdd a new helper macro, ets_printf_P(), which places a constant string in\r\nIRAM and copies it to the stack before calling the real ets_printf().\r\nThis makes the code simpler to read as no unwieldy combinations of\r\nets_putc/ets_printf/... are required to output anything.\r\n\r\nThe old handler also mistakenly used PSTR() strings in some places, so\r\nfix those with this patch as well.\r\n\r\nGives back ~180 bytes of heap to every sketch built as the exception handler\r\nis always included an application.", "repo_description": null, "generate_at": "2018-03-17 17:53:08.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-03-17 07:51:32.000-07:00", "committer_id": 19864447, "message": "Record last failed alloc, dump on a panic (#4220)\n\nAt runtime, whenever a realloc, malloc, calloc, or new call fails to\r\nfind enough memory, record the calling function and size requested.\r\nDoes not print anything or call any heavyweight functions on this, as it\r\nis legal to return NULL to an alloc-type call.\r\n\r\nIf the main application handles this NULL properly, there should be no\r\npanic and nothing different will happen.\r\n\r\nIf the main application panics() at any later point in time, this record\r\nwill be printed out as part of the crash log for processing with an\r\nupdated EspExceptionDecoder.java.\r\n\r\nThis adds 2-3 instructions overhead in the normal case, and around 10-12\r\ninstructions in the failing case, and requires an additional 8 bytes of\r\n.BSS to function.\r\n\r\nOnly a single address is kept, the final failing malloc-type function call\r\nbefore a panic, but it is trivial to extend to a fifo with little overhead\r\nin the common, non-failing case.", "repo_description": null, "generate_at": "2018-03-17 07:51:32.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-03-17 01:38:56.000-03:00", "committer_id": 16824838, "message": "Check Print::write(byte) return and stop on fail (#4527)\n\nThe default Print::write(byte, count) method was continuing to send\r\nbytes one-by-one even when a prior write returned 0.  Because the buffer\r\npointer was incremented no matter success or fail, this leads to data\r\ncorruption as you'll not send some bytes in the middle and will then\r\nsend extra bytes past the end of the passed in buffer.\r\n\r\nBecause there's no concept of timeout, just stop on the first time\r\nwrite(byte) fails and return the total bytes successfully written\r\nand let the user worry about retrying or handling an error.\r\n\r\nFound by @d-a-v and discussed on gitter.", "repo_description": null, "generate_at": "2018-03-16 21:38:56.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-03-16 07:56:34.000-07:00", "committer_id": 19864447, "message": "Remove stray sigma_delta.h header (#4523)\n\nRemove stray, older version of sigma_delta.h\r\n\r\nAn older version of sigma_delta.h was committed to the root directory. Remove it, as we only want the later, new one already present in cores/esp8266. Thanks, @reaper7, for noticing it.", "repo_description": null, "generate_at": "2018-03-16 07:56:34.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-03-10 12:07:04.000-08:00", "committer_id": 19864447, "message": "Add support for hardware Sigma Delta generator\n\nProvides a simple interface to attach/detach pins to the sigma-delta generator, and get/set the 2 parameters prescaler & target.  Working example that fades the onboard LED is provided.  Code and sample by @stefaandesmet2003.", "repo_description": null, "generate_at": "2018-03-10 12:07:04.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-02-17 18:47:10.000-08:00", "committer_id": 19864447, "message": "Add -Werror to acceptance builds for C and CPP (#4369)\n\nUse platform.local.txt to add -Werror to GCC for the build of all\r\ncode.  Any warnings on a submitted patch will cause an error.\r\n\r\nSeveral examples and libraries had warnings/errors (missing returns\r\non functions, types, etc.).  Clean those up with this commit as well.", "repo_description": null, "generate_at": "2018-02-17 18:47:10.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-02-14 07:50:26.000-08:00", "committer_id": 19864447, "message": "Fix double-free in ESP8266WebServer (#4365)\n\nIn issue #4350, @mongozmaki found that the web server was accessing a\r\ndeleted variable in the destructor.  Implement his suggested change\r\nand move the close() before any freeing.  Could also have simply\r\nNULL'd out the _currentHeaders member after freeing as well.\r\n\r\nFixes issue #4350", "repo_description": null, "generate_at": "2018-02-14 07:50:26.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-02-10 08:12:38.000-08:00", "committer_id": 19864447, "message": "Wrap mimetype strings in FSPTR()s (#4338)\n\nMimetype is now in progmem, so any accesses to it need to be using FPSTR()\r\nwrapped Strings.\r\n\r\nFixes #4329", "repo_description": null, "generate_at": "2018-02-10 08:12:38.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-02-08 15:25:24.000-03:00", "committer_id": 16824838, "message": "Fix mem leak in SSL server, allow for concurrent client and server connections w/o interference (#4305)\n\n* Fix leak on multiple SSL server connections\r\n\r\nFixes #4302\r\n\r\nThe refcnt setup for the WiFiClientSecure's SSLContext and ClientContext\r\nhad issues in certain conditions, causing a massive memory leak on each\r\nSSL server connection.  Depending on the state of the machine, after two or\r\nthree connections it would OOM and crash.\r\n\r\nThis patch replaces most of the refcnt operations with C++11 shared_ptr\r\noperations, cleaning up the code substantially and removing the leakage.\r\n\r\nAlso fixes a race condition where ClientContext was free'd before the SSLContext\r\nwas stopped/shutdown.  When the SSLContext tried to do ssl_free, axtls would\r\nattempt to send out the real SSL disconnect bits over the wire, however by\r\nthis time the ClientContext is invalid and it would fault.\r\n\r\n* Separate client and server SSL_CTX, support both\r\n\r\nRefactor to use a separate client SSL_CTX and server SSL_CTX.  This\r\nallows for separate certificates to be installed on each, and means\r\nthat you can now have both a *single* client and a *single* server\r\nrunning in parallel at the same time, as they'll have separate memory\r\nareas.\r\n\r\nTested using mqtt_esp8266 SSL client with a client certificate and a\r\nWebServerSecure with its own custom certificate and key in parallel.\r\n\r\n* Add brackets around a couple if-else clauses", "repo_description": null, "generate_at": "2018-02-08 10:25:24.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-02-06 07:33:26.000-08:00", "committer_id": 19864447, "message": "SSL server DEBUG, code cleanup fixes (#4280)\n\nThe server needs to load an X509 and RSA key, but instead of using\r\nthe existing loadObject() calls implemented its own.  Remove them and\r\nuse the standard ones instead.\r\n\r\nThe DEBUG_OUTPUT macro was undefined in the SSL Web server.  Add it\r\nin do that when you compile with DEBUG=HTTP_SERVER it actually compiles.", "repo_description": null, "generate_at": "2018-02-06 07:33:26.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-02-06 11:06:05.000-03:00", "committer_id": 16824838, "message": "Refrech api.github.com x509 certificate (#4306)\n\nThe certificate fingerprint included with the HTTPSRequest example seems\r\nto be for an expired api.github.com certificate.  Replace with the current\r\none to avoid reporting \"certificate mismatch\" errors when running.", "repo_description": null, "generate_at": "2018-02-06 06:06:05.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-02-04 20:59:31.000-08:00", "committer_id": 19864447, "message": "Remove warnings when NDEBUG build option used (#4196)\n\nWhen building using the new NDEBUG option recently added, the assert()\r\nmacro is defined to nothing. This leaves a few variables unused in the\r\nWiFi stack causing compiler warnings. Add in empty casts to remove\r\nthese warnings. Does not affect actual assert use when NDEBUG is not\r\ndefined.", "repo_description": null, "generate_at": "2018-02-04 20:59:31.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-01-21 13:54:53.000+08:00", "committer_id": 4349050, "message": "Clear calloc block only if malloc succeeds\n\nCalloc was calling memset(0) on NULL when its implicit malloc failed,\ncausing a crash in UMM.  Instead, only do the memset if the memory\nallocation succeeds.\n\nFixes issue #4207", "repo_description": null, "generate_at": "2018-01-20 20:14:37.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-01-17 14:10:40.000-03:00", "committer_id": 16824838, "message": "Move C++ vtables into IRAM, out of HEAP (#4179)\n\nGCC places vtables in .rodata, with a mangled name of \"_ZTV*.\"  Because\r\nthese are simply address jump tables, there is no need to place them in\r\nRAM.  Instead, have the linker place them in the .text (aka IRAM) section.\r\nThis will free up a variable amount of heap space, depending on the number\r\nof classes with virtual functions used in any particular project.", "repo_description": null, "generate_at": "2018-01-17 09:10:40.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2018-01-10 11:56:32.000+08:00", "committer_id": 4349050, "message": "Add SSL enabled WiFiServer, Updater, WebServer\n\nAdds SSL server mode for WiFiServerSecure, for plain SSL connections,\nESP8266WebServerSecure, for HTTPS web serving, and SecureHTTPSUpdater for\nencrypted OTA updates.\n\nExample code is provided for all new options, as well as a BASH script for\ngenerating their own, self-signed certificates.\n\nBoth ESP8266WebServerSecure and SecureHTTPSUpdater are important for secure\npassword-based authentication.  HTTP Basic Authentication, the only supported\nmodel presently, sends the username and password in *cleartext* and therefore\nshould *never* be used in any un-SSL encrypted channel unless you don't mind\nsharing your login and password with anyone else on the internet.  Even if the\nESP8266 is not safety critical, this cleartext broadcast could expose you should\nyou reuse this password elsewhere on your network or the internet.", "repo_description": null, "generate_at": "2017-02-27 20:17:04.000-08:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": null, "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": null, "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": null, "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 128265595, "repo_owner_id": 38113818, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": null, "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "skydev360/Arduino"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-17 12:52:17-08:00", "committer_id": 11875, "message": "Initial checkin\n\nSetup, configuration, storage, timers, NTP, scheduling, and web interface\nworking.\n\nTBD:\n* MQTT, SSL(may be limited to MQTT client only due tomemory constrinats)\n* Cleanup and refactor into multiple files\n* Web page prettification", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-17 12:52:17-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-17 12:32:10-08:00", "committer_id": 11875, "message": "Initial commit", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-17 12:32:10-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-20 10:46:51-08:00", "committer_id": 11875, "message": "Clean up formatting, reduce image size", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-20 10:46:51-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-02 20:32:39-08:00", "committer_id": 11875, "message": "Save about 1/4KB by moving strings to PMEM\n\nAnother 256 bytes or so saved by moving constant strings to PMEM.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-02 20:32:39-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-02 20:31:31-08:00", "committer_id": 11875, "message": "Fix Verify() wrong pointer type\n\nWas creating an array ot 20 char* instead of an array of 20 char in\nthe Verify() routine.  Fix to only allocate 20 bytes, not 20*4=80.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-02 20:31:31-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-12 10:33:20-07:00", "committer_id": 11875, "message": "Fix DST calculations because of off-by-1 in xvert\n\nThe DST start and end times in UTC weren't being calculated properly due\nto the fact that TimeLib uses 1-indexing for day of week and month of year.\ngmtime/time.h uses 0-indexing.  So when tested under Unix it worked OK\nbut on the Arduino, where the mktime/gmtime_r wrappers functions were\nneeded, it failed horribly.  Added extra debugging and verified conversion.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-12 10:33:20-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-10 19:30:52-08:00", "committer_id": 11875, "message": "Move a few more constant strings/ints to PMEM", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-10 19:30:52-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-10 19:29:29-08:00", "committer_id": 11875, "message": "Check for NTP error codes while getting time\n\nNTP can return various error codes which set \"legal\" values in the\ntime field, causing the time to go crazy.  Check for these error codes,\nand when one is returned act appropriately (i.e. stop requesting time,\nincrease inter-request delay, etc.)", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-10 19:29:29-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-02 08:02:47-08:00", "committer_id": 11875, "message": "Remove warnings about #define macro in \"\" string\n\nC++11 warning about \"text\"ENCODING\"text\", simply add a space around the macro\nname to remove.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-02 08:02:47-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-02 07:54:12-08:00", "committer_id": 11875, "message": "Remove Wire from power.cpp, save some bytes\n\ninclude <Wire> causes a Wire object to be statically created, but we're\nnot using it until we figure out the real way to access the power chip.\nComment out that include and shave a few more bytes off the ROdata.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-02 07:54:12-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-02 07:40:35-08:00", "committer_id": 11875, "message": "Move web error strings to PMEM\n\nSave an additional 128 bytes or so by moving the error code text into\nPMEM.  Also normalizes the strings so it's saner as well.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-02 07:40:35-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-02 07:09:34-08:00", "committer_id": 11875, "message": "Undo ENCODING macro donein error", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-02 07:09:34-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-02 07:07:00-08:00", "committer_id": 11875, "message": "Move 196 bytes of strings to PMEM using _P macros\n\nMemory is very tight, move every string possible into ROM only and out of\n.RODATA since that eats RAM.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-02 07:07:00-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-02 06:53:51-08:00", "committer_id": 11875, "message": "Add CGI for all actions\n\nAllow all actions to be executed from a https:// GET to make it useful\nfor things like resetting a cable modem where you'd lose connectivity when\npower was removed.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-02 06:53:51-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-23 23:22:32-08:00", "committer_id": 11875, "message": "Stop the web.client object to avoid memory leaks\n\nWas not calling client.stop() after each web request processed, leading to a\nlarge and permanent memory leak on each connection.  Add the stop() call and\nheap seems stable after multiple connections (but appears to have some\ntime-dependent connection data of ~184 bytes that takes XX seconds to be\nfreed after the connectino is closed.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-23 23:22:32-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-19 17:33:25-08:00", "committer_id": 11875, "message": "Listen for MQTT, do HW reset when config changed\n\nAdd MQTT subscriber action (remotepower=0/1/toggle).\nUse ESP.restart() to reset when changing any configuration (to avoid any\nmemory leaks/etc. from old WIFI and other configurations).\nClean up some old code and commented out stuff.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-19 17:33:25-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-19 16:21:54-08:00", "committer_id": 11875, "message": "Massive refactoring, cleanup, and mqtt integration\n\nRefactored into multiple source files for much simpler maintenance.\nAdded MQTT publish binding and SSL options.\nMake forms POST, not GET, and update accordingly.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-19 16:21:54-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-19 22:19:49-08:00", "committer_id": 11875, "message": "Update readme with instructions, code cleanup\n\nUpdated the readme to include enough information for a user to build and\nrun the software on their own plug (I hope).   Still need to pretty it up\nand include some pictures of the solder points and instructions on getting\nthe ESP8266 Arduino build chain.\n\nSerial.* converted to Log() outputs everywhere.\n\nUpdated name to PsychoPlug wherever WIFIPLUG existed.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-19 22:19:49-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-20 08:51:20-08:00", "committer_id": 11875, "message": "Avoid millis() rollover issues\n\nRewrite logic to use a timout # of delay(1)s to avoid the issue of millis()\nrollover.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-20 08:51:20-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-20 10:33:09-08:00", "committer_id": 11875, "message": "Update the docmentation with images, etc.\n\nIncluding images for uploading configuration and web pages to make\nit a little more approachable for folks.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-20 10:33:09-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-22 20:09:28-08:00", "committer_id": 11875, "message": "Add timezone/DST capabilities using master tz file\n\nmake-tz-h.pl takes the official tz tarball and parses the configuration\nrules files and dumps a header with data structures describing both\nall timezones as well as daylight savings rules.\nAdditional library allows conversion from UTC to a user-specified local\ntime automagically, taking care of any clock adjustments.\nTODO: Include a picker, fully integrate LocalTime() calls in scheduler\nand output display.  Also want to strip out TZ/DST library and make it\navailable separately.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-22 20:09:28-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-22 22:03:20-08:00", "committer_id": 11875, "message": "Include timezone everywhere, allow ASCTIME config\n\nTimezone now accessible via the configuration page and used everywhere.\nFixed issue in perl converter eating the %s format strings.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-22 22:03:20-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-22 22:15:11-08:00", "committer_id": 11875, "message": "Fix power reading/mqtt reporting not delaying\n\nPower monitoring was happening every loop() and not every 10s as\nrequired, causing the entire system to drag to a halt when MQTT was\nenabled (SSL is slow on this chip).  Fix it properly and get around\nany millis() overflow issues", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-22 22:15:11-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-23 08:15:49-08:00", "committer_id": 11875, "message": "Use time format optinos throughout the interface\n\nWeb UI modified to use the selected time formatting options.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-23 08:15:49-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-22 22:34:13-08:00", "committer_id": 11875, "message": "Select timezone on the config page automatically\n\nSort the timezones in the browser with Javascript and then select the\nappropriate one (again in JS).  Can't sort in the ESP8266, not enough\nmemory to hold the list or the whole webpage we generate.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-22 22:34:13-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-23 08:31:29-08:00", "committer_id": 11875, "message": "Remove AMPM select from non-12hr event editor", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-23 08:31:29-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-23 23:09:14-08:00", "committer_id": 11875, "message": "Move strings and tzdata to ROM and out of RODATA\n\nSSL connections for MQTT take over 25K of DRAM to start up, and even with\narrays and strings specified as CONST they were ending up in precious\nDRAM in the .RODATA segment.\n\nUsing char[] instead of char* and being sure to always memcpy_P from a\ntimezone data structure to a DRAM buffer first saves several KB by\nkeeping the (constant!) string tables out of DRAM.\n\nWebPrintf() overloaded to use a snprintf_P and a PSTR() around the format\nstring saving even more DRAM.\n\nCan now start MQTT SSL connections reliably and have about 10K free on\nthe heap afterwards.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-23 23:09:14-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-23 20:20:08-08:00", "committer_id": 11875, "message": "Clean up warnings, move some stuff to ROM\n\nMemory is very tight and SSL is iffy due to DRAM limits so reduce the size\nof in-memory footprint wherever practical.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-23 20:20:08-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-25 10:12:37-08:00", "committer_id": 11875, "message": "Disable MQTT while web tranfer ongoing\n\nThere is only enough memory for one SSL context, so when the web interface\nis used it tramples the MQTT context and causes a disconnect.  If things\nare very bad the MQTT will try and reconnect while the web page is being\nserved, causing both to fail.\n\nAlso remove the power monitoring for now.  Until we get a more stable\nreadout it's pretty much garbage.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-25 10:12:37-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-25 06:16:31-08:00", "committer_id": 11875, "message": "Fix ome over-aggresive buffer shortenings", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-25 06:16:31-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-25 03:36:19-08:00", "committer_id": 11875, "message": "Use 512b certs to save every byte we can\n\nmake-certs can generate the certificate arrays using openssl for cut-and-paste\ninto the main app.  Using 512b certificates saves around 500 bytes which seems\nto be enough to keep it stable and sane.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-25 03:36:19-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-25 02:57:08-08:00", "committer_id": 11875, "message": "Add HTTPS server using custom Arduino setup\n\nMemory is crazy tight so SSL on HTTPS and MQTT looks to be unstable.\nHowever, individually using one or the other runs fine.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-25 02:57:08-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-02-25 18:11:48-08:00", "committer_id": 11875, "message": "Ass HTTP->HTTPS redirector, clean up WebError head\n\nAny HTTP request will now be redirected to the HTTPS interface by a 301\nautomatically.\n\nWebErrors's headers should not end in \\r\\n, and we statically add those\nto the start of the HTML error page.\n\nMQTT private PAUSED variable to avoid messing up settings{} which affected\nthe reconfigure page since it was always showing mqttEnabled==false.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-02-25 18:11:48-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-20 07:18:08-07:00", "committer_id": 11875, "message": "Add uptime to current status display\n\nDisplay the time since power-on in the main status window as a sanity\ncheck and to help identify recent power outages.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-20 07:18:08-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-19 18:16:28-07:00", "committer_id": 11875, "message": "Update README to include latest features", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-19 18:13:53-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-19 14:23:48-07:00", "committer_id": 11875, "message": "Move web utility functions to separate files\n\nGeneric web interface utilities moved to a separate file to allow\nfor reuse in other projects.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-19 14:23:48-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-19 17:36:53-07:00", "committer_id": 11875, "message": "Add 10-minute OTA update support from Status page\n\nAfter logging in to the HTTPS, password protected setup interface, can\nenable an OTA updated on :8080 (unencrypted for now) which will automatically\nreset after 10 minutes.  If the update succeeds, immediate reboot.\n\nSettings are preserved.\n\nMake sure the build board is set to 1M (64K SPIFFS) to allow this to work.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-19 17:36:53-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-19 14:37:02-07:00", "committer_id": 11875, "message": "Output DNS hostname all at once\n\nWhen logging DNS requests, dumping the hostname with 1-byte writes was\nquite slow.  Batch up the entier name and write it out all at once.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-19 14:37:02-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-13 08:39:20-07:00", "committer_id": 11875, "message": "Forgot PSTR() around constant string in sprintf_P", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-13 08:39:20-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-13 08:34:18-07:00", "committer_id": 11875, "message": "Increase speed of status and edit HTML sending\n\nUsing same aggregation as the timezones, try and combine an individual\nrow or menu popup into a dingle packet for transmission.  Speeds up\ninterface significantly.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-13 08:34:18-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-13 08:06:27-07:00", "committer_id": 11875, "message": "Combine multiple TZs into single packet for speed\n\nEach WiFiClient->Print() sends an individual packet and is very slow.\nWhen 100s of timezones are sent over to the web browser during setup\nit can take 10+ seconds to render the setup HTML.  Coalesce multiple\n<option> lines into one larger packet which should be <MTU and\ngo out as a single packet, speeding things up by 2-3x.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-13 08:06:27-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-13 08:04:17-07:00", "committer_id": 11875, "message": "Add attribution to original sources", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-13 08:04:17-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-05 15:03:20-08:00", "committer_id": 11875, "message": "Move to the API suggested by my pull request\n\nPull request has a single cert/key and _P method to set the HTTPS\nstuff.  Use that so it'll compile once the pull gets merged.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-05 15:03:20-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-04 11:20:00-08:00", "committer_id": 11875, "message": "Fix random SoftAP mode, clean up html, free memory\n\nESP8266 sometimes starts up with softAP enabled, so ensure we explicitly\ndisable it in our setup().\n\nHTML cleaned up and validates with w3c checker.\n\nMove few more strings into PMEM, giving ~20KB free with SSL MQTT and\nSSL https server running.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-04 11:20:00-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-04 10:09:10-08:00", "committer_id": 11875, "message": "Use hostname to identify plug on webpages", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-04 10:09:10-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-03 08:36:31-08:00", "committer_id": 11875, "message": "Remove voltage, set IP to 192.168.1.4 during setup\n\nWhen redirecting in setup, send to 192.168.1.4 because our IP is returned\nas 0.0.0.0.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-03 08:36:31-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-04 13:08:39-08:00", "committer_id": 11875, "message": "Move to SHA256 generated certificates", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-04 13:08:39-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-04 13:34:40-08:00", "committer_id": 11875, "message": "Move certificates to separate, non GIT file\n\nmake-certs-256 will now generate #include'able hex strings that the main\nsketch can load without having to check in a cert file.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-04 13:34:40-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-13 20:55:18-07:00", "committer_id": 11875, "message": "Clear up gcc warnings\n\nEnabling All warnings in the IDE showed a few spots with real issues.\nFix them, mostly with type changes.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-13 20:55:18-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-12 19:19:01-07:00", "committer_id": 11875, "message": "Flush sockets before stop()ing them", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-12 19:19:01-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-12 18:50:57-07:00", "committer_id": 11875, "message": "Revert to index.html on the setup page for sanity", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-12 18:50:57-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-03-12 18:28:55-07:00", "committer_id": 11875, "message": "Add DNS responder, but disabled for now\n\nAttempt to redirect all DNS to the setup page, but having issues with the\nESP8266 freezing for multiple seconds in a loop waiting on a socket write.\nFor now still need to manually go to http://192.168.1.4", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-03-12 18:28:55-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-04-20 08:05:40-07:00", "committer_id": 11875, "message": "Timezones w/o DST need sprintf replacement\n\nSome timezones (Japan, for example) have no daylight savings time but\nstill include a \"%s\" in their name string.  Do a sprintf() always in\nASCTIME to get the timezone, and use \"S\" to convert from J%sT->JST/etc.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-04-20 08:05:40-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-05-26 21:13:51-07:00", "committer_id": 11875, "message": "Note the correct flash size for EcoPlugs is 1M", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-05-26 21:13:51-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-05-26 21:23:20-07:00", "committer_id": 11875, "message": "Factory reset by holding button and plugging in.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-05-26 21:23:20-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-05-27 14:56:35-07:00", "committer_id": 11875, "message": "Add Connection: close header to responses\n\nWithout the Connection: close header, certain web apps will try and keep the\nHTTP connection open between requests.  We don't support this, so add the\nheader to let the client know to close and reestablish a new connection for\neach request.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-05-27 14:56:35-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-05-27 15:10:53-07:00", "committer_id": 11875, "message": "Add WIFI discovered list to setup\n\nAdd a popup menu to the configuration page to make it easier to select a\nWIFI network to connect with.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-05-27 15:10:53-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-21 00:23:52.000-07:00", "committer_id": 11875, "message": "Disconnect MQTT before handling web interface\n\nThe latest 2.5.x SDK leaves us even less memory than 2.3.x,\nso we need to disconnect any SSL MQTT connections before we do\nany qork via the web interface.  It gracefully reconnects on the\nnext loop().", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-21 00:23:52.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-20 19:22:23.000-07:00", "committer_id": 11875, "message": "Remove PauseMQTT, no longer needed", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-20 19:22:23.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-21 02:42:06.000-07:00", "committer_id": 11875, "message": "Reduce memory footprint a bit\n\nSome small strings and variable resizes.  Seems to be a 24 byte memory leak\non every MWTT stop/start.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-21 02:16:48.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-21 00:40:23.000-07:00", "committer_id": 11875, "message": "Use dynamic allocation for wifiMQTT", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-21 00:40:23.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-21 00:40:07.000-07:00", "committer_id": 11875, "message": "Only need 8 bytes  for MAC in log output", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-21 00:38:34.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-11 16:56:59-07:00", "committer_id": 11875, "message": "Add info on making own cert and keys\n\nBefore the first compilation, you need to generate a private SSL certificate\nand key pair.  Document the steps in the README.md per issue 3.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-11 16:56:59-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-11 13:22:42-07:00", "committer_id": 11875, "message": "Fix DNS response header\n\nDNS redirection during setup needs to change certain fields in the request\nheader before sending it back. Matches a wireshark captured DNS request\nresponse, now.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-11 13:22:42-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-11 17:26:51-07:00", "committer_id": 11875, "message": "Add documentation on the tz.h file generation", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-11 17:26:51-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-11 10:51:57-07:00", "committer_id": 11875, "message": "Add note about 160MHz setting", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-11 10:51:57-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-11 11:14:33-07:00", "committer_id": 11875, "message": "Fix 12:00 AM/PM input end display\n\nNoon and midnight were being displayed wrong in the status and edit\npages. Fix the display, internally the hours were being handled OK\nalready.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-11 11:14:33-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-06-11 10:48:41-07:00", "committer_id": 11875, "message": "Don't stop MQTT while running web interface\n\nLatest changes in pull request 3001 allow multiple SSL connections\nat the same time, so no need to call PauseMQTT, it just works now.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-06-11 10:48:41-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 99187933, "repo_owner_id": 11875, "commit_at": "2017-08-02 20:45:41.000-07:00", "committer_id": 11875, "message": "Initial commit", "repo_description": "ESP8266 alarm clock with 8x32 LED display, NTP time, and MOD/WAV music alarms", "generate_at": "2017-08-02 20:45:41.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoclock"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-07-29 14:23:50.000-07:00", "committer_id": 11875, "message": "Disable MQTT duting OTA to save memory", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-07-29 14:23:50.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2018-01-15 14:05:07.000-08:00", "committer_id": 11875, "message": "Fix the MAC in logs, move web buffer to stack\n\nThe MAC was being reported wrong in the logs due to a simple error.\nThe web request buffer moved from the heap to the stack as it is only used\nin the request handler and not elsewhere.", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2018-01-15 14:05:07.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 99187933, "repo_owner_id": 11875, "commit_at": "2017-11-14 15:18:47.000-08:00", "committer_id": 11875, "message": "Initial checkin\n\nA fully 3d-printed clock that sets the time automatically and can play\nMOD, MP3, WAV, or anything else as an alarm.", "repo_description": "ESP8266 alarm clock with 8x32 LED display, NTP time, and MOD/WAV music alarms", "generate_at": "2017-08-02 20:46:51.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/psychoclock"}, {"repo_id": 82335573, "repo_owner_id": 11875, "commit_at": "2017-12-25 11:44:32.000-08:00", "committer_id": 11875, "message": "Fix issues relates to 2.4-rc2 Arduino\n\nThe Arduino core libs have changed as well as the SDK for the 2.4 release.\nDon't call the esp_setconn* functions as they're not in the latest SDK.\nDon't set 0.0.0.0 IP address in WiFi as it no longer indicates \"request DHCP\naddress.\"\n\nFixes issue #10 and issue #11 .", "repo_description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "generate_at": "2017-12-25 11:44:32.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/psychoplug"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-08-25 10:20:37-07:00", "committer_id": 11875, "message": "Remove invalid local-table entries and graphc preview links\n\nCharts saved from OpenOffice contain a copy of the data tables used to\ngenerate them as well as a reference to the original sheet data.  Remove\nthese local-data tables because they're no longer valid after we replace\nwith new test results.\n\nAlso blow away links to the cached chart images as we've removed them\n(again because they're no longer valid after we change sheet data).", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-08-25 10:20:37-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-08-24 13:59:18-07:00", "committer_id": 11875, "message": "Remove debugging overrides in Windows script\n\nAccidentally checked in a version with an abridged test suite that was\nused to verify the prior ODF format change.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-08-24 13:59:18-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-08-24 13:55:20-07:00", "committer_id": 11875, "message": "Remove stale binary previews from output ODF file\n\nThe ODF original file includes a binary graphic version of all of the\ngraphs.  These graphs are no longer valid once we've replaced the data\nin the sheet, so remove them from the file and manifest to ensure\nOpenOffice will rebuild the graph using our new data.  Same for the\nthumbnail image.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-08-24 13:55:20-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-08-17 10:20:06-07:00", "committer_id": 11875, "message": "Use spaces instead of tabs in Windows PowerShell\n\nThe PS1 file had spaces in some spots, tabs in others.  Converting all\nto simple spaces so it won't look so wonky outside of Notepad++.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-08-17 10:20:06-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-08-17 10:17:43-07:00", "committer_id": 11875, "message": "Add -outDir option to Windows version\n\nAllow setting the output file and details directory to a path specified\non the command line.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-08-17 10:17:43-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-08-05 11:16:15-07:00", "committer_id": 11875, "message": "Check the async IO limits in the kernel are large enough to run tests\n\nVerify at least the required AIO depth is available from the Linux kernel\n/proc entry.  If the setting is too low, FIO will fail, so we warn the\nuser and give them the command they can execute to increase the value.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-08-05 11:16:15-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-08-03 09:33:37-07:00", "committer_id": 11875, "message": "Check for minimum IO size, skip test if its block size is below it\n\nSome NVME devices only export 4K physical and logical sectors, so IO requests\nsmaller than 4096 bytes will fail.  Before every test check the minimum IO\nsize using blockdev, and when the test can't be run return a result of all 0s\nand skip to the next test.\n\nTODO: Does Windows support 4K physical/logical devices, and how can one\ncheck in PowerShell the minimum IO size?", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-08-03 09:33:37-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-03-29 11:22:30-07:00", "committer_id": 11875, "message": "Updated documentation to note enterprise workloads", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-03-29 11:22:30-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-02-22 14:22:25-08:00", "committer_id": 11875, "message": "Update legal boilerplate", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-02-22 14:22:25-08:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-02-22 12:31:34-08:00", "committer_id": 11875, "message": "Update user guide to fix some typos", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-02-22 12:31:34-08:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-02-17 14:10:59-08:00", "committer_id": 11875, "message": "Add back the preconditioning, lost in debugging\n\nAccidentally disabled preconditioning while doing debugging and let\nit slide into the prior git commits.  Adding it back in.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-02-17 14:10:59-08:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-02-17 14:04:51-08:00", "committer_id": 11875, "message": "Remove 512b tests from sequence, fix misc format\n\n512b tests removed from tests ran.  Updating the scripts and the\nspreadsheet template to match.\n\nFix the endlines in the .ps1 version of the file\n\nRemove the debugging 1-second code for the .py script", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-02-17 14:04:51-08:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2016-02-09 10:59:55-08:00", "committer_id": 11875, "message": "Initial commit, tested under Linux and Windows", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2016-02-09 10:59:55-08:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-03-14 15:35:39-07:00", "committer_id": 11875, "message": "Add space btw FIO path and command line options", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-03-14 15:35:39-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-03-14 16:10:53-07:00", "committer_id": 11875, "message": "Fix mbps output to be locale invariant\n\nWhen run under Windows with a locale which has a \",\" as a\ndecimal separator, we were generating an ASCII number which\nwas not legal in the CSV (contained a \",\") which led to errors\nwhen it was converted into the ODS.\n\nNow manually make that number using a \".\" radix character\nto ensure we get the right # format no matter the current\nlocale settings.\n\nTested under a US English Windows where the decimal separator\nwas manually set to \",\" and the 1000s separator was set to \".\",\nso local numbers display as 1.234.567,987654321...", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-03-14 16:10:53-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-02-09 11:55:02-08:00", "committer_id": 11875, "message": "Fix path calculation for ODS source file\n\nThe original.ods file was using \"$CWD/original.ods\" which is not valid in\nthe case where you run the script from another directory (i.e.\npython ezfio/ezfio.py ...).\n\nUse realpath() of the script file instead, and check that the file exists\nat this spot before even starting a test to ensure runs don't fail after many\nhours.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-02-09 11:55:02-08:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-03-30 13:35:08-07:00", "committer_id": 11875, "message": "Fix ODSSRC file path generation\n\nThe .ODS file was being referenced using a full path relative to the\nexecutable, but because of an errant parenthesis it actually ended up\npointing to the executable itself.  Move parenthesis to the right spot\nand path is now correct.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-03-30 13:35:08-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-05-24 12:09:00-07:00", "committer_id": 11875, "message": "Use index of iostat file, not column name\n\nIn localized versions of Windows, the columns in the CSV for the\ntimeseries data are localized as well.  So we can't search for \"read\" or\n\"write\" and need to fall back to the index number.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-05-24 12:09:00-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-06-12 11:17:19-07:00", "committer_id": 11875, "message": "Fix startup to work in paths with spaces\n\nThe EZFIO.BAT script needs to invoke a couple levels of PowerShell\nto start our script, and if quoting rules are not carefully followed\nthis will fail if there is a space anywhere in the path to the script.\nRewrote and tested the bouncer batch file using a directory including\na space.  Fixes issue 14 and issue 8.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-06-12 11:17:19-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-07-14 11:04:45.000-07:00", "committer_id": 11875, "message": "Add exceedance charting to main branch\n\nMerge in the changes in the exceedance branch, as wall as additional\nsupport for the latest FIO 2.99 which has a different latency report\nformat (lat_ns, no weird semi-log implied latencies).\n\nWindows exceedance generation not tested w/2.99 since the latest\nbluestop release is only 2.18, but that version does work w/the PS1.\nAt some point when new release hits Windows we'll need to do the same\nchanges as in Linux.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-07-14 11:04:45.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-07-19 12:53:35.000-07:00", "committer_id": 11875, "message": "Enable legend and create label for add'l ODS files\n\nStill very preliminary, but enables the legend and changes the\nseries name to reflect the suffix when combining ODS files.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-07-19 12:53:35.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-07-19 12:25:44.000-07:00", "committer_id": 11875, "message": "Preliminary stab at combining utility\n\nTakes two complete ODS runs and combine them into a single, merged\nfile.\n\nThis seems to work in preliminary testing, but needs more work to\nbe robust and ensure correctness.  It's doing a lot of ugly XML\nhacking using regular expressions, which is not the method most\npeople would use...with good cause.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-07-19 12:25:44.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-07-18 15:20:51.000-07:00", "committer_id": 11875, "message": "Refactor out some CSV->Sheet routines.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-07-18 15:20:51.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-07-18 14:33:29.000-07:00", "committer_id": 11875, "message": "Change JSON+ format support detection.\n\nSome old version of FIO will ignore --output-format specifications\nthey don't understand, silently, so we can't just check that there\nis no error on trying \"--output-format=json+\". Instead, check the\noutput of --help to see if json+ is mentioned. If not, then fallback\nto json format.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-07-18 14:33:29.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-07-18 09:24:08.000-07:00", "committer_id": 11875, "message": "Add \"FIO Version\" to on-screen test output\n\nSimple 1-liners to add FIO version printout to screenshots to make\nease debugging when people post screenshots of failed tests w/o the\nfull directory ZIP/tarball.  No CSV or ODS changes.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-07-18 09:24:08.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-07-31 18:14:57.000-07:00", "committer_id": 11875, "message": "Initial commit", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-07-31 18:14:57.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-07-31 18:25:11.000-07:00", "committer_id": 11875, "message": "Create config file by hand", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-07-31 18:25:11.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-07-31 18:15:55.000-07:00", "committer_id": 11875, "message": "Initial checkin of libmad-0.15.1b\n\nUnmodified tarball from ftp.mars.org/pub/mpeg.", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-07-31 18:15:55.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2017-08-01 18:37:26.000+03:00", "committer_id": 4349050, "message": "Move ASSERT() macro file text to PMEM (#3477)\n\nEvery assert() includes a __FILE__ constant string to RODATA which\r\ncan be quite large as it includes the complete path as well as\r\nthe filename.\r\n\r\nMove that string into PMEM, and update the postmortem to work with\r\neither PMEM or RAM strings for dumping abort/assert/exception\r\ninformation.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2017-08-01 08:37:26.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2017-08-01 18:38:35.000+03:00", "committer_id": 4349050, "message": "Remove unused ax_port_*alloc() functions (#3482)\n\nThe ax_port_malloc, ax_port_calloc, ax_port_realloc, and ax_port_free\r\nfunctions in WiFiClientSecure are not actually used by the AXTLS library.\r\nIt's directly using the library routines, and these function are never\r\nused.  Remove these dead bits of code to make the axtls operation clearer.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2017-08-01 08:38:35.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-07 17:35:35.000-07:00", "committer_id": 11875, "message": "Move static temp storage to dynamic heap\n\nInstead of using the memory for all time, use malloc()/free() to get the\ntmp[] and xr[] arrays used to mangle the data into proper order\nin layer3.c with error reporting in case of OOM.\n\nMove xr[2][576] to dynheap from static allocation\n\nDynamically allocate/deallocate the xr[] array in III_decode as needed so\nwe don't eat up heap when not actually using the decoder.", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-07 14:56:53.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-07 13:22:49.000-07:00", "committer_id": 11875, "message": "Run through Arduion auto-format\n\nSpaces/tabs got munged somewhere in the import, leaving some functions\nwith really weird spacing. Auto-format to fix indenting", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-07 13:22:49.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-07 08:10:53.000-07:00", "committer_id": 11875, "message": "Memory use debugging via a macro in config.h", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-07 08:10:53.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-05 15:05:30.000-07:00", "committer_id": 11875, "message": "Move 2560 byte stack tmp to heap in III_reorder", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-05 15:05:30.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-05 15:02:37.000-07:00", "committer_id": 11875, "message": "Remove unneeded files from GIT", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-05 15:02:25.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-05 11:05:23.000-07:00", "committer_id": 11875, "message": "Change to work on ESP8266, add output functions\n\nLIBMAD needs lots of memory for constants and internal variables, with both\nheap and stack really tight.  Move all constants I can into PROGMEM, disable\nLayer-I and Layer-II decoders, move some things from the stack to heap,\nchange some structures from char/short to ints to allow for PROGMEM easy\naccess, and finally add a simple testbed.\n\nTested with Newcleus' Jam On It, has 3K heap free.  Needs memory optimization\nas well.", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-07-31 18:39:08.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-05 11:17:31.000-07:00", "committer_id": 11875, "message": "Fix error reporting in testbed\n\nReport the correct byte offset in file when decode errors occur.", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-05 11:17:31.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-05 13:44:19.000-07:00", "committer_id": 11875, "message": "Use 16-bit for output samples, save ~5KB\n\nSynth now directly scales its output instead of storing all 32 bits, saving much\nmemory.", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-05 13:44:19.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-05 19:29:21.000-07:00", "committer_id": 11875, "message": "Fix FPM_* definitions (now just DEFAULT)", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-05 19:29:21.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-05 19:06:57.000-07:00", "committer_id": 11875, "message": "Remove more unneeded files", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-05 19:06:57.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-05 17:06:50.000-07:00", "committer_id": 11875, "message": "Reduce mem by 4.5K by sending audio as generated\n\nsynth() used to generate all 1152(x2 channels x2 bytes/sample) PCM values\nbefore calling the output module.   Instead, flip the logic around and send\nout each set of stereo 32-sample bunches out as generated.  Reduces the\nDRAM needed by (1152-32) * 2 * 2 = 4.5KB.  Now have ~10KB heap available", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-05 17:06:50.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-05 19:04:20.000-07:00", "committer_id": 11875, "message": "Move ~120 mad_fixed_t to PROGMEM\n\nUse accessor functions which guarantee 32-bit reads from PMEM or\nvolatile pointers and typecasting.", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-05 18:08:31.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-05 17:46:55.000-07:00", "committer_id": 11875, "message": "Move a couple constants to PROGMEM", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-05 17:46:55.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2017-08-07 15:44:30.000+03:00", "committer_id": 4349050, "message": "Move MIME type table into PROGMEM to save RAM (#3475)\n\nThe extension -> MIME type routine uses lots of constant strings which end\r\nup in the RODATA segment of RAM.  Refactor the comparison to use a table of\r\nstrings stored in PMMEM instead, freeing ~370 bytes for the heap.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2017-08-07 05:44:30.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2017-08-07 15:43:28.000+03:00", "committer_id": 4349050, "message": "Move debug constant strings to PROGMEM (#3478)\n\nUMM debugging strings are normally placed in RODATA, which uses up scarse\r\nmemory.  Move them to PROGMEM and use macros to replace printf with a\r\nversion that can handle ROM strings.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2017-08-07 05:43:28.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-11 21:45:25.000-07:00", "committer_id": 11875, "message": "Convert to a sample-based decoder, allowing loop()\n\nThe libmad decoder library ddefault function runs until the entire MP3\nis completed. This makes it unusable for event-driven things as you can't\ndo things like check for buttons, run a webserver, etc. while it is doing\nthe decode.\n\nBuild a AudioGeneratorMP3 class which calls internal libmad functions but\nwhich supports returning after filling the I2S buffers, so it can be run\nas part of the loop() without hogging the CPU.", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-11 21:45:25.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-11 22:19:32.000-07:00", "committer_id": 11875, "message": "Clean up some GCC warnings in AudioGeneratorMP3", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-11 22:19:32.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-11 22:15:42.000-07:00", "committer_id": 11875, "message": "Remove debug printf()s from decoder.c", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-11 22:15:42.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 98944550, "repo_owner_id": 11875, "commit_at": "2017-08-11 22:13:51.000-07:00", "committer_id": 11875, "message": "Enable -O3 for all libmad source files\n\nArduino default compiler optimizes for size, but we need speed here as we\nnormally have plenty of flash for the code on the ESP8266.  Add GCC pragma\nto all libmad files to enable -O3, max optimization mode.", "repo_description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "generate_at": "2017-08-11 22:13:51.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/libmad-8266"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-09-01 15:44:56.000-07:00", "committer_id": 11875, "message": "Update Windows to support FIO 2.99\n\nFIO 2.99 uses a different latency output format that's saner but incompatible with the prior methods.  Update the PowerShell to handle this format if it is present, same as the Linux version update a while back.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-09-01 15:44:56.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-01-21 13:54:53.000+08:00", "committer_id": 4349050, "message": "Clear calloc block only if malloc succeeds\n\nCalloc was calling memset(0) on NULL when its implicit malloc failed,\ncausing a crash in UMM.  Instead, only do the memset if the memory\nallocation succeeds.\n\nFixes issue #4207", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-01-20 20:14:37.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-01-17 14:10:40.000-03:00", "committer_id": 16824838, "message": "Move C++ vtables into IRAM, out of HEAP (#4179)\n\nGCC places vtables in .rodata, with a mangled name of \"_ZTV*.\"  Because\r\nthese are simply address jump tables, there is no need to place them in\r\nRAM.  Instead, have the linker place them in the .text (aka IRAM) section.\r\nThis will free up a variable amount of heap space, depending on the number\r\nof classes with virtual functions used in any particular project.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-01-17 09:10:40.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2017-10-06 15:17:44.000-07:00", "committer_id": 11875, "message": "Fix crash when running on 4K-sector drives\n\nOn 4K sector drives we have to skip tests for 512b/etc. Because there\nwas no JSON generated for this skipped test, the python would crash\nunceremoniously.\n\nNow, when skipping a test skip JSON parsing altogether and just hardcode\nthe 0 iops/mbps results in the output.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2017-10-06 15:17:44.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-02-06 11:06:05.000-03:00", "committer_id": 16824838, "message": "Refrech api.github.com x509 certificate (#4306)\n\nThe certificate fingerprint included with the HTTPSRequest example seems\r\nto be for an expired api.github.com certificate.  Replace with the current\r\none to avoid reporting \"certificate mismatch\" errors when running.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-02-06 06:06:05.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-02-06 07:33:26.000-08:00", "committer_id": 19864447, "message": "SSL server DEBUG, code cleanup fixes (#4280)\n\nThe server needs to load an X509 and RSA key, but instead of using\r\nthe existing loadObject() calls implemented its own.  Remove them and\r\nuse the standard ones instead.\r\n\r\nThe DEBUG_OUTPUT macro was undefined in the SSL Web server.  Add it\r\nin do that when you compile with DEBUG=HTTP_SERVER it actually compiles.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-02-06 07:33:26.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-02-04 20:59:31.000-08:00", "committer_id": 19864447, "message": "Remove warnings when NDEBUG build option used (#4196)\n\nWhen building using the new NDEBUG option recently added, the assert()\r\nmacro is defined to nothing. This leaves a few variables unused in the\r\nWiFi stack causing compiler warnings. Add in empty casts to remove\r\nthese warnings. Does not affect actual assert use when NDEBUG is not\r\ndefined.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-02-04 20:59:31.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-02-08 15:25:24.000-03:00", "committer_id": 16824838, "message": "Fix mem leak in SSL server, allow for concurrent client and server connections w/o interference (#4305)\n\n* Fix leak on multiple SSL server connections\r\n\r\nFixes #4302\r\n\r\nThe refcnt setup for the WiFiClientSecure's SSLContext and ClientContext\r\nhad issues in certain conditions, causing a massive memory leak on each\r\nSSL server connection.  Depending on the state of the machine, after two or\r\nthree connections it would OOM and crash.\r\n\r\nThis patch replaces most of the refcnt operations with C++11 shared_ptr\r\noperations, cleaning up the code substantially and removing the leakage.\r\n\r\nAlso fixes a race condition where ClientContext was free'd before the SSLContext\r\nwas stopped/shutdown.  When the SSLContext tried to do ssl_free, axtls would\r\nattempt to send out the real SSL disconnect bits over the wire, however by\r\nthis time the ClientContext is invalid and it would fault.\r\n\r\n* Separate client and server SSL_CTX, support both\r\n\r\nRefactor to use a separate client SSL_CTX and server SSL_CTX.  This\r\nallows for separate certificates to be installed on each, and means\r\nthat you can now have both a *single* client and a *single* server\r\nrunning in parallel at the same time, as they'll have separate memory\r\nareas.\r\n\r\nTested using mqtt_esp8266 SSL client with a client certificate and a\r\nWebServerSecure with its own custom certificate and key in parallel.\r\n\r\n* Add brackets around a couple if-else clauses", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-02-08 10:25:24.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-01-10 11:56:32.000+08:00", "committer_id": 4349050, "message": "Add SSL enabled WiFiServer, Updater, WebServer\n\nAdds SSL server mode for WiFiServerSecure, for plain SSL connections,\nESP8266WebServerSecure, for HTTPS web serving, and SecureHTTPSUpdater for\nencrypted OTA updates.\n\nExample code is provided for all new options, as well as a BASH script for\ngenerating their own, self-signed certificates.\n\nBoth ESP8266WebServerSecure and SecureHTTPSUpdater are important for secure\npassword-based authentication.  HTTP Basic Authentication, the only supported\nmodel presently, sends the username and password in *cleartext* and therefore\nshould *never* be used in any un-SSL encrypted channel unless you don't mind\nsharing your login and password with anyone else on the internet.  Even if the\nESP8266 is not safety critical, this cleartext broadcast could expose you should\nyou reuse this password elsewhere on your network or the internet.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2017-02-27 20:17:04.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2018-01-09 12:17:49.000-08:00", "committer_id": 11875, "message": "Update to new FIO 3.x JSON formatting", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2018-01-09 12:17:49.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2018-01-12 10:59:15.000-08:00", "committer_id": 11875, "message": "Update README with note about FIO3.1 under Win\n\nIssue #19 hilighted a problem w/FIO 3.1 from BlueStop running for\na very, very long time beyond the test specification.  Add a note\nwarning about this and suggesting the official CI builds instead.\n\nAlso add in a \"thanks\" section to call out folks.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2018-01-12 10:59:15.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-02-10 08:12:38.000-08:00", "committer_id": 19864447, "message": "Wrap mimetype strings in FSPTR()s (#4338)\n\nMimetype is now in progmem, so any accesses to it need to be using FPSTR()\r\nwrapped Strings.\r\n\r\nFixes #4329", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-02-10 08:12:38.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-02-14 07:50:26.000-08:00", "committer_id": 19864447, "message": "Fix double-free in ESP8266WebServer (#4365)\n\nIn issue #4350, @mongozmaki found that the web server was accessing a\r\ndeleted variable in the destructor.  Implement his suggested change\r\nand move the close() before any freeing.  Could also have simply\r\nNULL'd out the _currentHeaders member after freeing as well.\r\n\r\nFixes issue #4350", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-02-14 07:50:26.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-02-17 18:47:10.000-08:00", "committer_id": 19864447, "message": "Add -Werror to acceptance builds for C and CPP (#4369)\n\nUse platform.local.txt to add -Werror to GCC for the build of all\r\ncode.  Any warnings on a submitted patch will cause an error.\r\n\r\nSeveral examples and libraries had warnings/errors (missing returns\r\non functions, types, etc.).  Clean those up with this commit as well.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-02-17 18:47:10.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2018-03-06 11:08:10.000-08:00", "committer_id": 11875, "message": "Update to non-obsolete GPL v2 license text", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2018-03-06 11:08:10.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2018-03-06 09:07:39.000-08:00", "committer_id": 11875, "message": "Update links to https:// because it's 2018, darn it", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2018-03-06 09:07:39.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-03-10 12:07:04.000-08:00", "committer_id": 19864447, "message": "Add support for hardware Sigma Delta generator\n\nProvides a simple interface to attach/detach pins to the sigma-delta generator, and get/set the 2 parameters prescaler & target.  Working example that fades the onboard LED is provided.  Code and sample by @stefaandesmet2003.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-03-10 12:07:04.000-08:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-03-16 07:56:34.000-07:00", "committer_id": 19864447, "message": "Remove stray sigma_delta.h header (#4523)\n\nRemove stray, older version of sigma_delta.h\r\n\r\nAn older version of sigma_delta.h was committed to the root directory. Remove it, as we only want the later, new one already present in cores/esp8266. Thanks, @reaper7, for noticing it.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-03-16 07:56:34.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-03-22 00:53:37.000-03:00", "committer_id": 16824838, "message": "Fix WebServerSecure streamFile() (#4545)\n\n* Fix WebServerSecure streamFile()\r\n\r\nESP8266WebServerSecure's streamFile was using the base class' method\r\nwhich did not use SSL encrypt before transmitting, leading to failure.\r\n\r\nAdd a new template method and required support for\r\nWiFiClientSecure::write(Stream&) (using a local temp buffer since the\r\nSSL libs do not grok Arduino Streams at all).\r\n\r\nFixes #4544\r\n\r\n* Match ClientContext buffer and yield() behavior\r\n\r\nClientContext sends out 256 bytes at a time and gives a yield after\r\neach chunk to ensure the WDT doesn't fire.  Mimic that behavior in\r\nWiFiClientSecure::write(Stream&).", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-03-21 20:53:37.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-03-17 01:38:56.000-03:00", "committer_id": 16824838, "message": "Check Print::write(byte) return and stop on fail (#4527)\n\nThe default Print::write(byte, count) method was continuing to send\r\nbytes one-by-one even when a prior write returned 0.  Because the buffer\r\npointer was incremented no matter success or fail, this leads to data\r\ncorruption as you'll not send some bytes in the middle and will then\r\nsend extra bytes past the end of the passed in buffer.\r\n\r\nBecause there's no concept of timeout, just stop on the first time\r\nwrite(byte) fails and return the total bytes successfully written\r\nand let the user worry about retrying or handling an error.\r\n\r\nFound by @d-a-v and discussed on gitter.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-03-16 21:38:56.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-03-18 08:53:08.000+08:00", "committer_id": 4349050, "message": "Fix exception handler, add assert, reduce RAM (#4187)\n\nMove all exception strings to IRAM and out of both PMEM (illegal) and add\r\noutput of any assert() failinf conditions.\r\n\r\nThe exception handler may be called while the SPI interface is in a bad\r\nstate.  This means no PROGMEM reads are allowed, and all data and functions\r\nused must be in system RAM or IRAM.\r\n\r\nAdd a new helper macro, ets_printf_P(), which places a constant string in\r\nIRAM and copies it to the stack before calling the real ets_printf().\r\nThis makes the code simpler to read as no unwieldy combinations of\r\nets_putc/ets_printf/... are required to output anything.\r\n\r\nThe old handler also mistakenly used PSTR() strings in some places, so\r\nfix those with this patch as well.\r\n\r\nGives back ~180 bytes of heap to every sketch built as the exception handler\r\nis always included an application.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-03-17 17:53:08.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-03-17 07:51:32.000-07:00", "committer_id": 19864447, "message": "Record last failed alloc, dump on a panic (#4220)\n\nAt runtime, whenever a realloc, malloc, calloc, or new call fails to\r\nfind enough memory, record the calling function and size requested.\r\nDoes not print anything or call any heavyweight functions on this, as it\r\nis legal to return NULL to an alloc-type call.\r\n\r\nIf the main application handles this NULL properly, there should be no\r\npanic and nothing different will happen.\r\n\r\nIf the main application panics() at any later point in time, this record\r\nwill be printed out as part of the crash log for processing with an\r\nupdated EspExceptionDecoder.java.\r\n\r\nThis adds 2-3 instructions overhead in the normal case, and around 10-12\r\ninstructions in the failing case, and requires an additional 8 bytes of\r\n.BSS to function.\r\n\r\nOnly a single address is kept, the final failing malloc-type function call\r\nbefore a panic, but it is trivial to extend to a fifo with little overhead\r\nin the common, non-failing case.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-03-17 07:51:32.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-04-03 00:32:35.000+02:00", "committer_id": 4800356, "message": "Add flash for vtable destination, make it default, and add build menu to control options (#4582)\n\n* Add flash for vtable destination, make it default\r\n\r\nAdd an option for placing vtables in flash to complement the existing\r\niram and heap options.  \"make flash\"\r\n\r\nNow that there is a way to change it, move to vtables in flash as default\r\nas only users with interrupts which use vtables require the vtable to\r\nbe in RAM.  For those users, if the tables are small enough they can put\r\nthem in IRAM and save heap space for their app.  If not, then the vtables\r\ncan be placed in HEAP which supports much larger tables.\r\n\r\n* Add VTable menu, FLASH as default, remove Makefile\r\n\r\nConvert from manual \"make\" operated app.ld creation to runtime creation\r\nwhose options are selected from the build menu.\r\n\r\nUse a prelink recipe to create the output app.ld file each run, without\r\nneed for any special tools.\r\n\r\nUpdate the boards.txt.py script to generate this new config.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-04-02 15:32:35.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-04-02 07:37:21.000-07:00", "committer_id": 19864447, "message": "I2s input API and examples (#4539)\n\nEnables I2S stereo input via DMA using new API calls:\r\n\r\n. i2s_rxtx_begin(bool rx, rool tx);\r\n. i2s_read_sample(uint32_t *l, uint32_t *r);\r\n\r\nOriginal API calls will only enable TX, so this is backwards compatible.\r\n\r\nAdd simple I2S input example code using Arduino serial plotter.\r\n\r\nAdd UDP transmit of I2S microphone data to a PC (remote microphone).\r\n\r\nClean up and reorganize code to share RX and TX logic as much as\r\npossible.  Fix a potential WDT error while in blocking sample read\r\nand write.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-04-02 07:37:21.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-03-27 20:40:34.000-03:00", "committer_id": 16824838, "message": "I2S driver fixes for IRQs, protocol, factoring (#4574)\n\n* I2S driver fixes for IRQs, protocol, factoring\r\n\r\nAll redundant ICACHE_FLASH_ATTR decorators were removed, we already do\r\nthis by default for all routines, anyway,\r\n\r\nThe actual ISR and its called function moved to to IRAM.  Used to be in flash\r\ndue to the decorator, which could lead to crashes.  Use ets_memset to mute\r\nbuffers in ISR.\r\n\r\nFix the I2S on-the-wire protocol by enabling the transmit delay I2STMS because\r\nI2S is supposed to send the MSB one clock after LRCLK toggles.  This was\r\ncausing I2S to be twice as loud as intended in the best of cases, and causing\r\ngarbage/noise output when the MSB was set since data was effectively shifted.\r\n\r\nRefactor the clock divider setting to be done in one function only, as there\r\nis no reason to do the same complicated bit setting in two spots.\r\n\r\n* Comment some add'l registers, use optimstic_yield\r\n\r\nComment the known and unknown I2S register settings for posterity, using\r\nthe ESP32 guide as a basis.\r\n\r\nUse optimistic_yield() instead of esp_wdt_disable/enable when busy\r\nwaiting in blocking writes to ensure we don't hog the CPU completely.\r\n\r\nMove the constant IO pins to #defines for easier understanding.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-03-27 16:40:34.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-03-27 14:06:56.000+02:00", "committer_id": 4800356, "message": "Add linker MAP artifact to standard build process (#4186)\n\nGenerate and preserve a linker .MAP file for the project in the usual\r\nbuild directory.  This map file is useful for finding out where FLASH,\r\nIROM, and IRAM are being used as it shows gcc internally generated\r\nthings such as jump tables and constant function-local variables.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-03-27 05:06:56.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2018-04-09 09:52:39.000-07:00", "committer_id": 11875, "message": "Remove \"p#\" partition labels is possible\n\nNVME device partitions come up as \"nvme0n1pXXX\", not the standard\n\"sda1\" (i.e. a \"p\" before the partnum) since the base device name ends\nin an integer.  Update the regexp to remove this \"p#\" as well as \"#\"\nif the passed-in device is a partition.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2018-04-09 09:52:39.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2018-04-27 14:27:24.000-07:00", "committer_id": 11875, "message": "Update Bluestop link to https://", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2018-04-27 14:27:24.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2018-05-03 11:32:16.000-07:00", "committer_id": 19864447, "message": "Merge pull request #24 from earlephilhower/gatch\n\nRefactor exceedance chart generation to allow multiple sheets", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2018-05-03 11:32:16.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2018-05-03 11:30:04.000-07:00", "committer_id": 11875, "message": "Allow Windows to generate multiple exceedances\n\nUpdate Powershell to enable the same refactoring on the exceedance sheet\nas the Python.  At this time only the original exceedance chart is being\ngenerated, but with these changes it is possible to do additonal ones,\neasily.", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2018-05-03 11:28:08.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 51390783, "repo_owner_id": 11875, "commit_at": "2018-04-23 13:13:18.000-07:00", "committer_id": 11875, "message": "Allow for multiple exceedance replacements", "repo_description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "generate_at": "2018-04-23 13:13:18.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ezfio"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-05-21 14:34:15.000-04:00", "committer_id": 16824838, "message": "Add build_even/odd types to split Arduino tests (#4737)\n\nArduino builds are now taking 49 minutes or more, and failing due to\r\nTravis timeouts.\r\n\r\nSplit the Arduino build task into even and odd half, where each job\r\nwill build every other test.  This will reduce any test's runtime\r\nby 50% and speed up checks to avoid the timeout.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-05-21 11:34:15.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-05-23 19:50:26.000-07:00", "committer_id": 19864447, "message": "Add a build directory for libbearssl.a (#4736)\n\nSimple git submodule and makefile for building the bearssl library\r\nfrom source in the Arduino tree.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-05-23 19:50:26.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-05-14 20:46:47.000-07:00", "committer_id": 19864447, "message": "Add BearSSL client and server, support true bidir, lower memory, modern SSL (#4273)\n\nBearSSL (https://www.bearssl.org) is a TLS(SSL) library written by\r\nThomas Pornin that is optimized for lower-memory embedded systems\r\nlike the ESP8266. It supports a wide variety of modern ciphers and\r\nis unique in that it doesn't perform any memory allocations during\r\noperation (which is the unfortunate bane of the current axTLS).\r\n\r\nBearSSL is also absolutely focused on security and by default performs\r\nall its security checks on x.509 certificates during the connection\r\nphase (but if you want to be insecure and dangerous, that's possible\r\ntoo).\r\n\r\nWhile it does support unidirectional SSL buffers, like axTLS,\r\nas implemented the ESP8266 wrappers only support bidirectional\r\nbuffers. These bidirectional buffers avoid deadlocks in protocols\r\nwhich don't have well separated receive and transmit periods.\r\n\r\nThis patch adds several classes which allow connecting to TLS servers\r\nusing this library in almost the same way as axTLS:\r\nBearSSL::WiFiClientSecure - WiFiClient that supports TLS\r\nBearSSL::WiFiServerSecure - WiFiServer supporting TLS and client certs\r\n\r\nIt also introduces objects for PEM/DER encoded keys and certificates:\r\nBearSSLX509List - x.509 Certificate (list) for general use\r\nBearSSLPrivateKey - RSA or EC private key\r\nBearSSLPublicKey - RSA or EC public key (i.e. from a public website)\r\n\r\nFinally, it adds a Certificate Authority store object which lets\r\nBearSSL access a set of trusted CA certificates on SPIFFS to allow it\r\nto verify the identity of any remote site on the Internet, without\r\nrequiring RAM except for the single matching certificate.\r\nCertStoreSPIFFSBearSSL - Certificate store utility\r\n\r\nClient certificates are supported for the BearSSL::WiFiClientSecure, and\r\nwhat's more the BearSSL::WiFiServerSecure can also *require* remote clients\r\nto have a trusted certificate signed by a specific CA (or yourself with\r\nself-signing CAs).\r\n\r\nMaximum Fragment Length Negotiation probing and usage are supported, but\r\nbe aware that most sites on the Internet don't support it yet.  When\r\navailable, you can reduce the memory footprint of the SSL client or server\r\ndramatically (i.e. down to 2-8KB vs. the ~22KB required for a full 16K\r\nreceive fragment and 512b send fragment).  You can also manually set a\r\nsmaller fragment size and guarantee at your protocol level all data will\r\nfit within it.\r\n\r\nExamples are included to show the usage of these new features.\r\n\r\naxTLS has been moved to its own namespace, \"axtls\".  A default \"using\"\r\nclause allows existing apps to run using axTLS without any changes.\r\n\r\nThe BearSSL::WiFi{client,server}Secure implements the axTLS\r\nclient/server API which lets many end user applications take advantage\r\nof BearSSL with few or no changes.\r\n\r\nThe BearSSL static library used presently is stored at\r\nhttps://github.com/earlephilhower/bearssl-esp8266 and can be built\r\nusing the standard ESP8266 toolchain.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-05-14 20:46:47.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-05-22 11:04:32.000-07:00", "committer_id": 19864447, "message": "Report connected when any bytes are available (#4754)\n\nThe SSL pipeline is multi-stage, and the TCP connection can go down\r\neven though there is still data waiting to be decrypted or in the\r\ndecryption buffer.\r\n\r\nExplicitly check that there if there can be any data made available\r\nto the app, and if so report that we are still connected().  When\r\nthere is no data and there is no TCP connection, report disconnected.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-05-22 11:04:32.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-05-23 08:24:34.000-07:00", "committer_id": 19864447, "message": "Return data in internal SSL buffers after close (#4756)\n\nWhen the TCP socket is closed there may be some data left in the\r\nBearSSL internal buffers which can be read by the application.\r\n\r\nThe BearSSL pump, however, would always return no data available\r\nin the case the socket was disconnected before checking if the\r\nSSL was in a state where the app could possibly read.\r\n\r\nFix by returning if the state is available, even if the connection\r\nis gone.  Eventually no more data will become available to read\r\nand the original -1 will be returned.\r\n\r\nThis should match the existing axTLS ::connected() behavior.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-05-23 08:24:34.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-06-07 18:38:58.000-07:00", "committer_id": 19864447, "message": "Support multiple tone(), analogWrite(), and Servo (#4640)\n\nRemove and rewrite all the parts of the core/libraries using TIMER1\r\nand consolidate into a single, shared waveform generation interrupt\r\nstructure.  Tone, analogWrite(), Servo all now just call into this\r\nshared resource to perform their tasks so are all compatible\r\nand can be used simultaneously.\r\n\r\nThis setup enables multiple tones, analogWrites, servos, and stepper\r\nmotors to be controlled with reasonable accuracy.  It uses both TIMER1\r\nand the internal ESP cycle counter to handle timing of waveform edges.\r\nTIMER1 is used in non-reload mode and only edges cause interrupts.  The\r\ninterrupt is started and stopped as required, minimizing overhead when\r\nthese features are not being used.\r\n\r\nA generic \"startWaveform(pin, high-US, low-US, runtime-US)\" and\r\n\"stopWaveform(pin)\" allow for further types of interfaces.  Minimum\r\nhigh or low period is ~1 us.\r\n\r\nAdd a tone(float) method, useful when working with lower frequencies.\r\n\r\nFixes #4321.  Fixes 4349.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-06-07 18:38:58.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-06-12 19:06:26.000-07:00", "committer_id": 19864447, "message": "Remove dependency on SD/SPIFFS from CertStore (#4760)\n\nDue to popular demand, remove the hardcoded dependency on SPIFFS\r\nor SD from the CertStore by factoring out the file interface into\r\na new class (CertStoreFile) that the user will need to implement\r\nas a thin wrapper around either a SPIFFS.file or a SD.file\r\n\r\nCombine the downloaded certificates into a UNIX \"ar\" archive\r\nand parse that on-the-fly to allow easy inspection and creation\r\nof the Cert Store database.\r\n\r\nExamples updated with a new certificate downloader that creates\r\nthe certs.ar archive and with a single sample that can be built\r\nfor either SPIFFS or SD with a #define.  Users can copy the\r\nimplementation of the CertStoreFile they need to their own code\r\nas it is self-contained.\r\n\r\nAlso move the CertStore to the BearSSL namespace and remove the\r\nsuffix and separate SPIFFS/SD sources.\r\n\r\nRemove the \"deep+\" change from the CI build as well (no special\r\noptions needed on any PIO or makefile build).\r\n\r\nWe'll revisit the filesystem wrapper for 2.5.0, hopefully having a\r\nunified template for both filesystem usage at a global level.  For\r\ncurrent users, be aware the interface may change (simplify!) in\r\nrelease 2.5.0.\r\n\r\nFixes #4740", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-06-12 19:06:26.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 32969220, "repo_owner_id": 8943775, "commit_at": "2018-06-12 13:18:00.000-07:00", "committer_id": 19864447, "message": "Make BearSSL::write() blocking, match axTLS (#4804)\n\nWhen a message is sent by the app that is larger than the SSL buffer,\r\nit will take multiple TLS fragments to transfer.  Writes will loop\r\nthrough and not return until either all data is transferred or there\r\nis an error.", "repo_description": "ESP8266 core for Arduino", "generate_at": "2018-06-12 13:18:00.000-07:00", "author_id": 11875, "repo_name": "esp8266/Arduino"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-17 08:48:19.000-08:00", "committer_id": 11875, "message": "Add SetGain to I2S outputs to scale output volume\n\nA new SetGain(float 0.0 ... 4.0) method can scale the output volume of\nan I2S DAC or SW DAC by scaling the samples. Proper clipping is performed.\nAdds a 16x16 multiply and a couple shifts/branches to every sample output.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-17 08:48:19.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-15 13:17:43.000-08:00", "committer_id": 11875, "message": "Less naive double-buffer reading\n\nUse memcpy instead of complicated byte-by-byte operations to read data\nout of the buffer.  Should allow for somewhat faster reads.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-15 13:17:43.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-14 15:11:59.000-08:00", "committer_id": 11875, "message": "Handle OOM in note_on without SEGV\n\nWhen note_on tries to reallocate the voices[] array, realloc can return\nNULL.  In this case, instead of faulting, restore the original pointer\n(which is untouched per realloc() semantics) and ignore the note_on\ncommand.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-14 15:11:59.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-14 13:32:55.000-08:00", "committer_id": 11875, "message": "Fix unitialized MONO flag\n\nMONO was not set and could result (randomly at start of runtime) in\nmixing the two channels instead of sending them across unmolested.\nNow initialize it to FALSE and normal behaviour.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-14 13:32:55.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-21 08:11:05.000-08:00", "committer_id": 11875, "message": "Reduce default MP3 buffer to max frame size + fluff\n\nMP3 maximum frame size of 1441 bytes, and now that there is a real\nbuffering class available it makes no sense to include additional space\nin ths decoder.  Reduce to the minimum to save memory in default case.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-21 08:11:05.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-21 07:45:02.000-08:00", "committer_id": 11875, "message": "Add FIR and decimation filter for frequency xvert\n\nA simple FIR filter with decimation and specifable taps and rational\ndecimation allows for frequency conversion or any other kind of filtering\ndesired.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-21 07:45:02.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-21 08:36:17.000-08:00", "committer_id": 11875, "message": "Force refill of buffer when emptied completely\n\n@armSeb founf another case in issue #9 where the buffer would never\nrefill if the input stream was very slightly below the output stream\nvelocity.  In that case, when we hit a 0-water mark, force a complete\nrefill of the buffer on the next pass.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-21 08:36:17.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-20 07:11:17.000-08:00", "committer_id": 11875, "message": "Fix buffer example snippet to actually work\n\n@gerardwr found that the cut-n-pasted original example code could never\nactually work, in issue 9.  Rewrite so instead of a full working sample\n(which would be 40+ lines due to WiFi setup) only the relevant changes are\nshown.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-20 07:11:17.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-20 07:04:11.000-08:00", "committer_id": 11875, "message": "Fix noise during amplification\n\n@armSeb, in issue 7, noticed noise being introduced when amplifying the\noutput.  By moving the amplification to right before submitting the sample\nto I2S it went away.  Update with his suggested fix.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-20 07:04:11.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-20 12:15:32.000-08:00", "committer_id": 11875, "message": "Add buffering to MP3 streaming\n\nThe buffer class seems to work very well to avoid hiccups while\nstreaming from the web, so add it by default to the example to\nmake it easier for users to cut-n-paste and make it work.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-20 08:59:59.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-18 08:45:48.000-08:00", "committer_id": 11875, "message": "Remove the FastROMFS bits for now\n\nHaving the FastROMFS file source caused the importation of the entire\nFastROMFS library, which most folks will not have installed.  Remove it\nfor now.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-18 08:45:48.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-18 08:42:09.000-08:00", "committer_id": 11875, "message": "Add AAC playback using Helix from RealNetworks\n\nAACs can now be played back on the ESP8266 thanks to the RealNetworks\nHelix project's AAC decoder.  SBR is *not* supported, as there is not\nenough RAM in the system to support it.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-18 08:39:55.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-18 18:53:58.000-08:00", "committer_id": 11875, "message": "Remove GCC -Wall warnings\n\nClear up warnings generated with -Wall used to compile.  No functional change.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-18 18:53:58.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-18 19:15:46.000-08:00", "committer_id": 11875, "message": "Save 88 bytes by moving a table to PROGMEM", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-18 19:15:46.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-18 19:12:24.000-08:00", "committer_id": 11875, "message": "Free 188 bytes of RAM by moving bitrevtab to PMEM", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-18 19:12:24.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-18 19:04:33.000-08:00", "committer_id": 11875, "message": "Fix typos and add links to other projects", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-18 19:04:33.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-21 11:55:23.000-08:00", "committer_id": 11875, "message": "Preliminary ICY HTTP stream support\n\nAdd a subclass of the HTTPStream that can extract the ICY metadata.\nNeeds to implement a callback function or parse it internally and expose\na class variable to let the UI see the current stream information.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-21 11:48:20.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-21 20:09:37.000-08:00", "committer_id": 11875, "message": "Fix block corruption when hitting an ICY block\n\nWasn't incrementing the returned data pointer when we had to split the\nrequested read into pre- and post-ICY blocks.  This resulted in errors\nin the decoded stream.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-21 20:09:37.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-15 07:14:27.000-08:00", "committer_id": 11875, "message": "Turn on O3 optimization on the buffer filter", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-15 07:14:27.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-14 07:08:45.000-08:00", "committer_id": 11875, "message": "Add double-buffer input file source\n\nAudioFileSourceBuffer allows system RAM to be used to buffer an\ninput file (normally just a HTTP Stream) to help avoid hiccups.\nThis could also be subclassed to use an external SRAM, at some\nsoint.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-13 12:54:07.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-20 06:59:57.000-08:00", "committer_id": 11875, "message": "Fix buffering losing bytes\n\nCorrect issue @armSeb found and fixed where some bytes on the fallthrough\ncase were not being recorded as stored, leading to mp3 playback errors.\nFixes one half of issue 7.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-20 06:57:59.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-23 19:04:30.000-08:00", "committer_id": 11875, "message": "Add SBR code back in, but disable for now.\n\nThe SBR code compiles, but it requires an additional 50,788 bytes of system\nRAM to run so it's not going to work on the ESP8266.  Add the code in just in\ncase someone wants to move it to another architecture w/more RAM available.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-23 19:04:30.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-23 19:31:39.000-08:00", "committer_id": 11875, "message": "Move a few small tables into PROGMEM\n\nNo reason not to save a few bytes of RAM by moving some char[] to PROGMEM.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-23 19:31:39.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-22 07:20:42.000-08:00", "committer_id": 11875, "message": "Add retry logic to HTTP Streams\n\nOn a 0-byte read or a disconnect, optionally automatically reconnect\nup to a user specified number of tries with a delay between each attempt.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-22 07:20:42.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-23 20:01:38.000-08:00", "committer_id": 11875, "message": "Add note about SBR not being supported due to RAM", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-23 20:01:38.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-05-14 11:52:32.000-07:00", "committer_id": 11875, "message": "Merge branch 'master' of https://www.bearssl.org/git/BearSSL", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-05-14 11:52:32.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-05-15 12:31:17.000-07:00", "committer_id": 11875, "message": "Add README-esp8266.txt explaning build and changes", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-05-15 12:31:17.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-05-15 07:04:42.000-07:00", "committer_id": 11875, "message": "Explicitly reference SPIFFS namespace File\n\nEnsure we grap the SPIFFS version of file by prepending the fs:: to\nthe File local object.  Fixes #93.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-05-15 07:04:42.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-05-15 07:22:49.000-07:00", "committer_id": 11875, "message": "Add I2S debug/wiring notes", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-05-15 07:21:23.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-17 18:25:04.000-07:00", "committer_id": 11875, "message": "Add FLAC support to the framework via libflac-1.3.2\n\nPorted libFLAC v1.3.2 to the ESP8266.  Moved CRC constants to PROGMEM\nand the error strings.  Still to be done would be decreasing the output\nbuffer to an int16_t and moving a larce number of \"const int\" to enums\nsince \"const int\" eats 4 bytes per variable.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-17 18:22:19.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-18 13:07:23.000-07:00", "committer_id": 11875, "message": "Clean up headers and remove unneeded source files\n\nRemove STDIO/FILE references from code and headers.  Remove any header\nfiles not needed to support stread_decoder playback.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-18 12:52:40.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-18 13:10:53.000-07:00", "committer_id": 11875, "message": "Add -O3 optimization to all C files\n\nArduino normally builds with -Os (optimize for size). For audio decode\nwe'd rather go fast, so add pragma inside files.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-18 13:10:53.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-18 11:50:42.000-07:00", "committer_id": 11875, "message": "Fix header paths to not need symlinks\n\nThe FLAC makefile has additional -I include paths which let them use\nfiles in other directories without path specifiers.  Arduino doesn't\nsupport this, so while my development system was using symlinks, this\nwould not work well under Windows.  Instead, simply add proper path\nspecifiers to includes in other directories.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-18 11:50:42.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-18 08:18:22.000-07:00", "committer_id": 11875, "message": "Add SD card file input class", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-18 08:18:22.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-12 09:01:42.000-07:00", "committer_id": 11875, "message": "Bring in files from original projects\n\nThe library was originally part of several separate projects.  Make the\nneeded structure and bring those files in, including some READMEs.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-12 09:01:42.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-12 07:47:25.000-07:00", "committer_id": 11875, "message": "Initial commit", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-12 07:47:25.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-12 09:20:09.000-07:00", "committer_id": 11875, "message": "Add WAV and PROGMEM example", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-12 09:20:09.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-12 09:29:56.000-07:00", "committer_id": 11875, "message": "Add MOD sample code", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-12 09:29:56.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-12 09:35:32.000-07:00", "committer_id": 11875, "message": "Add more info on speaker driver power", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-12 09:35:32.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-12 10:06:04.000-07:00", "committer_id": 11875, "message": "Update README with class information", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-12 10:01:35.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-12 10:39:29.000-07:00", "committer_id": 11875, "message": "Fix the schematic to remove overlaps", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-12 10:39:29.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-15 20:58:16.000-07:00", "committer_id": 11875, "message": "Warning and static removal\n\nClean up compiler warnings and make static variables in class functions\ninto class variables where they belong.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-15 19:00:58.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-14 19:47:22.000-07:00", "committer_id": 11875, "message": "Add a HTTP streamer music \"file\" reader class\n\nImplements a simple and stupid HTTP stream reader to allow for ShoutCast\nand other MP3 radio streaming to happen.  Presently seems to stutter on\n128K, 44.1KHz streams, but may be better on lower bitrates.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-14 19:47:22.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-04-11 15:27:40.000-07:00", "committer_id": 11875, "message": "Add EC public key decoding to pkey_decoder", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-04-11 15:27:40.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-04-01 19:09:38.000-07:00", "committer_id": 11875, "message": "Add JohannesMTC link", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-04-01 19:09:38.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-08-18 13:44:23.000-07:00", "committer_id": 11875, "message": "Add shifting for 24- and 32-bit audio output\n\nRight-shift appropriate # of bits for the higher bit depths.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-08-18 13:44:23.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-09-06 12:12:22.000-07:00", "committer_id": 11875, "message": "Add classes to syntax hilighter", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-09-06 12:12:22.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-09-28 12:01:41.000-07:00", "committer_id": 11875, "message": "Explicitly call out path to config.h\n\nUnder Windows it seems that the Arduino compilation can't find\n<config.h> from inside a subdirectory.  So just point explicitly to\n\"../config.h\" for includes in subdirs.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-09-28 12:01:41.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-09-29 06:58:03.000-07:00", "committer_id": 11875, "message": "Minor note about WEMOS SD card shield", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-09-29 06:58:03.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-10-02 11:09:20.000-07:00", "committer_id": 11875, "message": "Update the library descriptions properly.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-10-02 11:09:20.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-10-05 19:04:40.000-07:00", "committer_id": 11875, "message": "Add SPIFFS file output option\n\nAudioOutputSPIFFSWAV writes a valid WAV file to the SPIFFS filesystem.\nBe sure to do a SPIFFS.start() or .format before calling any output.\nSet the filename using the additional ->SetFilename() call.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-10-05 18:39:56.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-12 20:00:19.000-08:00", "committer_id": 11875, "message": "Free RAM by not using jump tables\n\nJump tables using the current ESP8266 toolchain are placed in RODATA,\nwhich is copied into RAM on startup.  Until GCC is built with the\n-DJUMP_TABLES_IN_TEXT=1 macro, disable jump tables here and free\nabout 1.3KB of RAM for all apps.  With the tight memory constraints\nof doing SSL on this chip, every byte helps and the small performance\ndegradation should not be bad compared to the long-running RSA/EC\ncodes.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-12 20:00:19.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-12 15:24:25.000-08:00", "committer_id": 11875, "message": "Move EC vtable-equivalents to PROGMEM", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-12 15:24:25.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-12 12:28:52.000-08:00", "committer_id": 11875, "message": "Move remaining constant uint32_ts into PROGMEM", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-12 12:28:52.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-12 12:20:51.000-08:00", "committer_id": 11875, "message": "Move _vtable consts into PROGMEM\n\nAll _vtables consist of nothing but 4-byte size_t, unsigned, and\nfunction pointers.  Move them to PROGMEM and save 560 bytes of\nheap", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-12 12:13:26.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-02-08 17:39:51.000-08:00", "committer_id": 11875, "message": "Fix overflow for 256x oversampling\n\nFixes #55", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-02-08 17:39:51.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-02-14 20:02:41.000-08:00", "committer_id": 11875, "message": "Fix ID3v2 decoding, avoid infinite loop\n\nThe ID3 reader was incorrectly skipping extended headers and was\ncutting off the last 10 bytes of the last ID3 entry. Correct per\nhttp://id3.org specs.\n\nFixes #41", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-02-14 20:02:41.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-14 12:55:13.000-08:00", "committer_id": 11875, "message": "Use time() to get time by default\n\nconfigTime() on the ESP8266 lets you use NTP to set the internal\nsystem clock. This means the UNIX time() function can be used instead\nof requiring the minimal_set_time call.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-14 12:55:13.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-14 12:41:32.000-08:00", "committer_id": 11875, "message": "Merge branch 'memsaver'", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-14 12:41:32.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-14 12:40:58.000-08:00", "committer_id": 11875, "message": "Merge branch 'master' of https://www.bearssl.org/git/BearSSL", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-14 12:40:58.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-14 12:18:13.000-08:00", "committer_id": 11875, "message": "Merge branch 'memsaver' of https://github.com/earlephilhower/bearssl-esp8266 into memsaver", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-14 12:18:13.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-14 12:07:19.000-08:00", "committer_id": 11875, "message": "Add callback for x509 issuer DN to parser\n\nAllow external code to grab the Issuer DN. This is required to detect\na self-signed certificate, which is a common (and insecure) way of\ndoing SSL verification.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-14 12:07:19.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-13 16:07:44.000-08:00", "committer_id": 11875, "message": "Add STACK_PROXY_* macros to allocate some locals\n\nAllow an application to get a small stack from the heap at the beginning of use\nand use that space for allocating large variables.  This lets apps which do not\nuse the SSL code to not need larger stacks than they'd otherwise have to.\n\nStack always gives out 32-bit aligned addresses", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-13 08:46:22.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-13 08:46:22.000-08:00", "committer_id": 11875, "message": "Add STACK_PROXY_* macros to allocate some locals\n\nAllow an application to get a small stack from the heap at the beginning of use\nand use that space for allocating large variables.  This lets apps which do not\nuse the SSL code to not need larger stacks than they'd otherwise have to.\n\nStill WIP, but runs to completion now on bearssl.org connections.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-13 08:46:22.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-10-22 10:04:19.000-07:00", "committer_id": 11875, "message": "Add timeout and HTTP size to streamer EOF checks\n\nHTTPStreamer assumed the server would drop the connection when no more\ndata was available to be transferred from the source file.\nFor individual files, though, the web server will send the expected length\nin the headers and leave the connection open (i.e. to recycle the connection\nand accelerate web browsing).  In this case, the streamer would effectively\nhang waiting for more data than was being transmitted.\n\nNow check the read data against the expected data, and also add a 0.5s\ntimeout no matter what to the reading.\n\nTested on streaming and served files, seems to work fine.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-10-22 09:38:50.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-10-21 21:15:59.000-07:00", "committer_id": 11875, "message": "Fix mono MP3 decoding causing choppy output\n\nFixes issue #5 about choppy audio on low bitrate, mono MP3s.\n\nThe number of 32-sample elements to generate per MP3 data frame was\nset to 36 as that was what I saw on all my source files.  However, on\nmono files only half the number of samples are to be generated and\nyou'd end up with the synthesizer bands running out of energy and\nhave periods of 0-samples between proper data.\n\nNow simply check each decoded frame for the proper NSMAX value and\nonly generate that many.  Tested on force.mp3 in the issue referenced.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-10-21 21:15:59.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-10-29 17:43:00.000-07:00", "committer_id": 11875, "message": "MIDI + Soundfont wavetable synthesis capability\n\nAudioGeneratorMIDI plays a .MID file using any Soundfont2 wavetable\nsynthesis file.  This is a highly hacked combination of TinySoundFont\nand MIDITONES, and requires the FastROMFS to run at real-time in most\ncases.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-10-29 17:43:00.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-10-27 21:14:14.000-07:00", "committer_id": 11875, "message": "Add double buffer and FastROMFS classes\n\nAudioFileSourceFastROMFS connects with the new FastROMFS to enable\nhigher speed read from SPI flash for files.  Requires\nhttps://github.com/earlephilhower/ESP8266FastROMFS to be installed.\n\nAudioOutputBuffer implements a 2nd-level memory buffer for output\ndat to hopefully allow playback w/o hiccups, but needs to be vetted.\nWithout being able to call it from an interrupt, not sure it can actually\nimprove output performance.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-10-27 21:14:14.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-10-30 20:08:23.000-07:00", "committer_id": 11875, "message": "Fix meta_len MIDI entry parsing\n\nmeta_length is a varlen, not a single byte.  Use get_varlen() to handle\n>127 byte entries automatically.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-10-30 20:08:23.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-10-30 20:58:54.000-07:00", "committer_id": 11875, "message": "Call StopMIDI on ::stop() invocation to free mem", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-10-30 20:58:54.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-24 09:20:01.000-08:00", "committer_id": 11875, "message": "Clean up DecodeNextFrame path to something sane\n\nAs seen in issue #21, the MP3 decoder would barf on a single lost sync\nerror, even though it was not actually a fatel error.\n\nRewrote the logic to include another Input() on DNF failure, and only die\nwhen Input() actually fails.  Seems to fix the problem in issue #21 and also\ndid not break the WebRadio.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-24 09:20:01.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-24 09:31:36.000-08:00", "committer_id": 11875, "message": "Include type and volume in checksum, cleanup code", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-24 09:31:36.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-12 14:04:13.000-08:00", "committer_id": 11875, "message": "Remove debugging stack() calls", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-12 14:04:13.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-15 14:44:56.000-08:00", "committer_id": 11875, "message": "Add instructions for use with GIT 2.4+ only", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-15 14:43:48.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-15 14:58:14.000-08:00", "committer_id": 11875, "message": "Fix MetadataCallback function signatures\n\nThe MD callback now gets a string, not a stream, so update the examples\nto compile properly.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-15 14:58:14.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-14 11:09:43.000-08:00", "committer_id": 11875, "message": "Add URL save and restore on reboot", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-14 11:09:43.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-14 10:50:55.000-08:00", "committer_id": 11875, "message": "Move strings to PROGMEM, save a few heap bytes", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-14 10:50:55.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-14 10:35:14.000-08:00", "committer_id": 11875, "message": "Refactor and store to EEPROM, restore on reboot\n\nSave the current URL to EEPROM on each change, and try and restart it\nafter a power loss or reset", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-14 10:35:14.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-16 16:16:01.000-08:00", "committer_id": 11875, "message": "Fix ICY decoder overflow causing streams to die", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-15 22:31:36.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-16 16:17:47.000-08:00", "committer_id": 11875, "message": "Update to include the 2.4.0-rc2 JSON link", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-16 16:17:47.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-22 20:20:46.000-08:00", "committer_id": 11875, "message": "Fix ID3V2.2 decoding, non-unsync handling\n\nAdd handing of ID3V2.2.x (tested) and (I think) V2.3.x, and fix the\nunsync handling.\n\nIssue 23 found a problem where ID3V2.2 headers, which are very different\nfrom v2.3 and v2.4, caused crashes.  Fixing that showed another bug where\nthe unsyunc flag was not honored and all data was assumed to be unsync'd\ncausing improper reads of ID3 tags in some circumstances.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-22 20:20:46.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-22 21:28:28.000-08:00", "committer_id": 11875, "message": "Fix PROGMEM string accesses in callbacks\n\nThe MD and STATUS callbacks can be passed PROGMEM strings, so be sure to\nuse proper strcpy_p()s to move them to RAM before printing to avoid crashes.\nFound during debug of issue #21 .", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-22 21:28:28.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-22 21:19:06.000-08:00", "committer_id": 11875, "message": "Remove infinite loop on error in DecodeNextFrame\n\nDecodeNextFrame had a leftover while(1) in the inner loop without any\nadditional Input() calls, which could lead to an infinite loop on an\nerror condition.  Remove that unneeded loop.  Addresses some of the\nstuff found in issue #21", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-22 21:18:01.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-22 21:39:13.000-08:00", "committer_id": 11875, "message": "Fix the URL max limit in web interface\n\nThe web interface has a hardcoded 64 char URL limit, even though the\nactual url[] array was increased to 96 chars.  Use sizeof(url) in the\nhandler instead of a hardcoded number to enable use of all space.\nAddresses issue #21 , again.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-22 21:39:13.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-11-24 10:35:20.000-08:00", "committer_id": 11875, "message": "Add loop method to all input and outputs\n\nAdds a virtual loop() method to the file input and audio output objects.\nBy default does nothing, but it can be used to prefill buffers/etc. in the\ncase of a buffered input, or to update a volume meter on an output, etc.\n\nThe AudioGenerators all now call it as part of their own loop()s, so there\nis no user intervention required to make it work.\n\nThanks to @armSeb for the idea with his SPI RAM code.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-11-24 10:27:33.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-02 13:01:46.000-08:00", "committer_id": 11875, "message": "Add inline ID3 decoder w/callback interface\n\nID3 tags can now automatically give your app a callback with different tag\ntypes without any additional work on your application.  See the PlayMP3 example\nfor a very simple example of AudioFileSourceID3's use.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-02 13:01:46.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-04 09:46:16.000-08:00", "committer_id": 11875, "message": "Fix infinite loop on EOF in SPI buffer\n\nEmil Plalan found and fixed a bug where the buffer refill would loop\nforever (until WDT) when there was no more data to read.  For web streams\nthis wasn't detected, since there isn't really an EOF.  However, single\nfiles streamed from a web server would have this problem.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-04 09:46:16.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-04 10:01:50.000-08:00", "committer_id": 11875, "message": "Redirect to original SPIRAM library\n\nChange from my own patched copy of SPIRAM libs to the original source\nsince the required patches were just commited.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-04 10:01:50.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-10 08:04:39.000-08:00", "committer_id": 11875, "message": "Obey data size field, avoid WAV clicks w/metadata\n\nThe DATA chunk has a size field that was ignored.  When there was additional\nmetadata after the chunk, however, it would try and play it leading to\nclicks.  Store and only read that amount of data now.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-10 08:04:39.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-01 11:41:31.000-08:00", "committer_id": 11875, "message": "Preallocate all memory and move imdct_s to progmem\n\nBecause the mp3 player is a long living object and needs to allocate\nlarge contiguous chunks on each frame, it is safer to allocate the\nlarge xr[] and tmp[] arrays at the beginning.  Add them to the frame\nstructure which lives the entire time the mp3 object is alive.  No\nheap allocations are now used by the mp3 player.\n\nMove the imdct_s[] array to progmem, but do a memcpy_P() to stack\nas the macros may cause a 16-bit access after optimization.  It's only\n36 words long and each data is read, anyway, so this doesn't increase\nthe CPU work significantly.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-01 11:41:31.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-04 12:45:16.000-08:00", "committer_id": 11875, "message": "Add metadta callback for Icy streams\n\nAllow a UI to get a notification when a StreamTitle or other metadata\ncomes into the stream. Callback function would normally just update a\nflag and let the next global event loop handle updating the display.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-04 12:45:16.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-04 12:53:58.000-08:00", "committer_id": 11875, "message": "Add ICY Metadata callback to the example", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-04 12:53:58.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-04 10:51:20.000-08:00", "committer_id": 11875, "message": "Fix crash on ::loop in MIDI generator\n\nForgot to save the passed in *AudioFileSource, since it was not needed\nin the MIDI playback engine (it's encapsulated in a buffered object).  Now\nwith ::loop in every object, it's needed and we were calling a garbage\nobject causing a random crash.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-04 10:51:20.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-06 21:11:23.000-08:00", "committer_id": 11875, "message": "Add callbacks for metadata and status reports\n\nAll objects can have a metadata and/or status report callback once created.\nThey will call the source program with the parsed ID3 tag, ICY StreamTitle,\nor text and numeric error ID of any interesting event.  It is up to the end\napplication to figure out what to do with this.  Normally, you'd just print\nit to the LCD or Serial port.  But it is possible to detect, say, a buffer\noverflow and then switch to a lower bitrate stream for example.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-06 21:11:23.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-06 14:20:39.000-08:00", "committer_id": 11875, "message": "Update the instructions for installation\n\nThe library will not compile w/o the SPI driver, add it to the README.\nPoint to my fork until @armSeb's pull request in the original is merged.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-06 14:07:06.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-08 19:58:45.000-08:00", "committer_id": 11875, "message": "Add HELIX MP3 decoder initial revision\n\nInclude the RealNetworks HELIX MP3 decoder as AudioGeneratorMP3a.\nRight now runs fine, but requires a full 1152*2 sample buffer and\nseems to run slower than real time.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-08 19:32:43.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-08 13:07:59.000-08:00", "committer_id": 11875, "message": "Add WebRadio example, a web page controller\n\nSimple example web interface to the player.  Can change the volume and\nthe station through a slider and menu box.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-08 13:07:59.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-08 22:09:46.000-08:00", "committer_id": 11875, "message": "Add in status update and free memory reporting\n\nAlso removed Serial.print() of status and Serial.flush() to avoid\nhiccups.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-08 21:51:11.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-08 07:16:01.000-08:00", "committer_id": 11875, "message": "Rationalize the MP3 generation loop\n\nRemove the inInnerDecode flag in the main generation loop and make the\nrender path more readable in the MP3 decoder object.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-08 07:16:01.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-14 09:47:00.000-08:00", "committer_id": 11875, "message": "Move request buff to stack\n\nSave 384 heap bytes by handling the web request buffering in the loop()\nstack context.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-14 09:47:00.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-14 09:43:19.000-08:00", "committer_id": 11875, "message": "Fix web page update, move string to PROGMEM", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-14 09:43:19.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-12 16:57:20.000-08:00", "committer_id": 11875, "message": "Try and allocate inner loop mem on stack\n\nCheck the available stack space, and if large enough use a stack\nvariable for the inner loop.  If not, fall back to heap allocation.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-12 16:57:20.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-12 17:06:21.000-08:00", "committer_id": 11875, "message": "Use low-mem web server to save RAM for playback\n\nInstead of ESP8266WebServer, which is something of a RAM hog and has\nextensive use of Strings and allocations, use a simpler one with no\ndynamic memory allocations at all, borrowed from PsychoPlug\nhttps://github.com/earlephilhower/psychoplug.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-12 16:59:00.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-15 19:03:03.000-08:00", "committer_id": 11875, "message": "Fix EEPROM save/load and corruption on restart\n\nEEPROM saving was not calculating the correct checksum because it was\nnot clearing memory before writing.  Fix that so it automatically will\nrestart the connection on a reset.\n\nThere was a fatal corruption caused by improper delete'ing of objects\nwithout clearing their pointers when the initial connection to a stream\nfailed.  Refactor to use the proper StopPlaying() routine.\n\nExtend the URL to 96 characters.  We not have enough memory to do so!", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-15 19:03:03.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-15 19:49:37.000-08:00", "committer_id": 11875, "message": "Fix ICY decoding when apostrophes encountered\n\nThe ICYMDReader was not properly returning the unread \"'\" characters\nand so StreamTitles were being truncated at the first apostrophe.  Fix\nthe unread() and read() member functions to clean up.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-15 19:49:37.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-15 22:18:23.000-08:00", "committer_id": 11875, "message": "Actually change volume in the HandleVolue callback", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-15 22:18:23.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-15 12:03:05.000-08:00", "committer_id": 11875, "message": "Move the callback constant strings to PMEM", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-15 11:45:45.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-15 10:31:19.000-08:00", "committer_id": 11875, "message": "Store AAC/MP3 flag in EEPROM for WebRadio", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-15 10:31:19.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-14 15:58:39.000-08:00", "committer_id": 11875, "message": "Try and restart a stream 2secs after a disconnect.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-14 15:58:39.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2017-12-15 12:54:49.000-08:00", "committer_id": 11875, "message": "Replace Stream with simple string in MD callback\n\n@armSeb found that the stream interface caused a big slowdown and\nhiccups in his playback, replace the MetadataCallback's *Stream with\na simple *char for faster operation and less overhead.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2017-12-15 12:54:49.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-19 15:57:30.000-08:00", "committer_id": 11875, "message": "Enable Travis-CI builds\n\nEnable automatic building of all examples and SAM(speech) on a\ncommit by using Travis-CI.  Build against ESP8266 and ESP32.\n\nMinor tweaks to examples and codebase to allow successful compilation\non ESP32 compiler.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-19 12:18:25.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-20 09:24:10.000-08:00", "committer_id": 11875, "message": "Fix double close in ID3 routine, add buff to tests", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-20 09:24:10.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-20 08:42:51.000-08:00", "committer_id": 11875, "message": "Include ID3 tag scanner in MP3 test", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-20 08:42:51.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-20 18:32:21.000-08:00", "committer_id": 11875, "message": "Only mad_*_finish after a successful mad_*_start\n\nWhen the input file(stream) doesn't open, you could end up calling\nmp3::stop() which would try and mad_finish structures that were\nnot yet initialized.  Now carry a flag when these are set, and only\n_finish when it's set.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-20 18:32:21.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-20 20:56:05.000-08:00", "committer_id": 11875, "message": "More paranoid input checks, random error injection\n\nCheck for NULL input data buffers and set values to NULL after freeing()\nlocal variables to avoid memory corruption on use-after-freee.\n\nAdd lots of error injection in the host testing to help find bugs on\nthe PC where they're easier to debug.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-20 20:56:05.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-19 10:01:43.000-08:00", "committer_id": 11875, "message": "Fix I2S helpers to send/nonblock properly\n\nThe original I2S setup had the wrong # of bits being sent to the DAC\nas well as wrong timeouts specified on the write_sample wrappers.\nFix those, allowing things like WebRadio.ino to work.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-19 09:46:20.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-18 10:09:25.000-08:00", "committer_id": 11875, "message": "Update to include 2.4 release + ESP32 support", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-18 10:09:25.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-18 10:01:32.000-08:00", "committer_id": 11875, "message": "Clean up ESP32 compile warnings, use audio PLL\n\nRemove a couple compiler warnings found when building for the ESP32.\n\nEnable the high-precision audio PLL as clock source on ESP32.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-18 10:01:32.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-18 10:15:02.000-08:00", "committer_id": 11875, "message": "Include info on using BCLK/LRCLK as inputs w/SWDAC\n\nThe bit clock and l/r clock can be used as inputs, per issue #32 testing.\nExplain how to do this in the readme.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-18 10:15:02.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-18 10:57:02.000-08:00", "committer_id": 11875, "message": "Remove hostname setting for ESP32 compatability\n\nThe examples were setting a hostname for the WiFi connection, but this is\ndone via a different call on the ESP32 vs. the ESP8266.  To avoid #ifdef\nexplosion, simply remove the call as it's unneeded anyway.\n\nThanks to @reaper7 for reporting this in pull #33.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-18 10:55:22.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-18 10:53:03.000-08:00", "committer_id": 11875, "message": "Enable AAC-SBR on ESP-32, there's enough RAM\n\nAAC-SBR allows for lower bitrates to have higher quality audio output,\nand is used by many web radio stations.  It was disables on the ESP8266\ndue to RAM limitations (about 50KB too little), but the ESP32 has no\nsuch problem.  Enable it automatically during compile.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-18 10:53:03.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-21 19:27:07.000-08:00", "committer_id": 11875, "message": "Fix warnings and off-by-one in AAC", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-21 19:27:07.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-25 19:15:02.000-08:00", "committer_id": 11875, "message": "Refactor I2S to be cleaner, more extensible\n\nWith the multiple I2S modes on the ESP32, it makes sense to use a\ncleaner class hierarchy for the I2S tools.  Make I2SNoDAC into a\nsubclass of I2S (renamed from I2SDAC) and remove about 80% of the\ncode which was identical exept for the per-sample bitstream synthesis.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-25 11:46:57.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-25 20:52:58.000-08:00", "committer_id": 11875, "message": "Enable onboard DAC output", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-25 20:52:58.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-02-01 12:30:30.000-08:00", "committer_id": 11875, "message": "Add more default values to I2S output", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-02-01 12:30:30.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-24 13:44:43.000-08:00", "committer_id": 11875, "message": "Use a single hardcoded I2S config, tested working\n\nTested working i2s config for both I2S and I2SNoDac, only have the\none copy for later refactor into optional configuration.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-24 13:44:43.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-21 13:08:25.000-08:00", "committer_id": 11875, "message": "Merge branch 'master' of https://github.com/earlephilhower/ESP8266Audio", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-21 13:08:25.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-21 13:02:05.000-08:00", "committer_id": 11875, "message": "Enable static allocated buffers, no dynamic malloc\n\nBecause we are allocating objects totaling over 80% of the ESP8266 memory\nspace, we are very sensitive to memory fragmentation.  While we can control\nour own allocs, the IP and SDK can allocate any size, at any time, which\ncan cause us to not be able to find the large contiguous memory areas we need\nfor the codes.\n\nWork around this by preallocating, before anything else, buffer memory and\nnever freeing it.  Pass this memory into the codec and it will allocate from\nthis block and be guaranteed to always succeed.\n\nThis may fix the last of the hangs on the webradio/http streaming, which only\nseemed to happen after a stop/start cycle.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-21 10:38:23.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-20 21:08:13.000-08:00", "committer_id": 11875, "message": "More paranoid input checks, random error injection\n\nCheck for NULL input data buffers and set values to NULL after freeing()\nlocal variables to avoid memory corruption on use-after-freee.\n\nAdd lots of error injection in the host testing to help find bugs on\nthe PC where they're easier to debug.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-20 20:56:05.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-21 15:07:40.000-08:00", "committer_id": 11875, "message": "Update WebRadio to use prealloc'd buffers\n\nTo avoid allocations in the application, preallocate all decoder and\nbuffer memory in and then never free it.  Use the new pre-alloc'd\nconstructors to generate the playback objects.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-21 15:07:40.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-19 20:40:00.000-08:00", "committer_id": 11875, "message": "Don't crash on an invalid (layer I or II) frame\n\nWe removed the MP2-layer I and II decoders to save space, but an occasional\nbad frame can come in that, by random chance, specifies one of this type.\nWas calling NULL because of that.  Now, just skip the frame and no crash.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-19 20:40:00.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-19 21:09:37.000-08:00", "committer_id": 11875, "message": "Ensure BPS=16 is set in MP3 decoder\n\nValgrind found another uninitialized use.  BitsPerSample was not being\ncalled by the LIBMAD decoder, so it was possible to start out in a bad\nstate.  Now always set it to 16, the decoder native output size.\n\nChannels are initialized to 2, but this setting is always reset on\na per-frame basis anyway.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-19 20:58:12.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-19 21:25:34.000-08:00", "committer_id": 11875, "message": "Merge branch 'hosttests'", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-19 21:25:34.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-19 21:23:17.000-08:00", "committer_id": 11875, "message": "MP3 test in Valgrind\n\nRun a host MP3 test using valgrind, shows no errors.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-19 21:23:17.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-19 19:39:19.000-08:00", "committer_id": 11875, "message": "WIP - build some code on the PC to run valgrind/etc.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-19 19:17:30.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-19 22:11:52.000-08:00", "committer_id": 11875, "message": "Add AAC valgrind test on the host, clean up warns\n\nThe AAC codec didn't show any issues on initial valgrind runs except\nfor having a different stop() behavior than the MP3 one.  Make them\nmatch.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-19 22:11:52.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-01-19 22:28:00.000-08:00", "committer_id": 11875, "message": "Remove ESP8266 compile warning in layer3.c", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-01-19 22:28:00.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-07 08:02:10.000-08:00", "committer_id": 11875, "message": "Support DER certificates in PROGMEM", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-07 08:02:10.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-07 07:22:00.000-08:00", "committer_id": 11875, "message": "Add support for PROGMEM .CRT/.KEY textual files", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-07 07:22:00.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-06 18:38:53.000-08:00", "committer_id": 11875, "message": "Port to ESP8266 toolchain and memory environment\n\nT0 state machines compiled to use progmem for the state and address\ntables (datatables are used in different spots so can't easily be\nmodified this way).\n\nAll (u)int32_t constants moved to progmem\n\nUse hardware random register for the random number generator.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-01 20:09:14.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-09 17:23:46.000-08:00", "committer_id": 11875, "message": "Add dynamic trust anchor for Certificate Store\n\nAdd an optional callback that allows for a certificate store to search\namong known certs that don't fit in RAM (in the ta[] array). This allows\nfor hundreds of certs to be used even on the ESP8266 as only a single one\nneeds to be in RAM at any time instead of the whole chain.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-09 17:23:46.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-08 12:42:51.000-08:00", "committer_id": 11875, "message": "Add public key x509 decoder (RSA only)\n\nThere was no way to parse a public key as generated by openssl or\nother tools, you were expected to have the N and E already somehow.\n\nAdd a very basic pkey_decoder, structures, and methods that can\nparse out public keys as generated by openssl -pubkey.\n\nForth makes my head hurt, and I cannot find a good description of\nthe ASN.1 encoding for public keys, so this code probably has a bug\nor ten.  Apologies in advance.\n\nI could find no information on the EC public key in ASN.1 form, so\nthat presently is not supported.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-08 12:42:51.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-02-17 15:24:29.000-08:00", "committer_id": 11875, "message": "Set builtindac mamber before calling SetPinout\n\nHans-J. Ubben found a bug where the pinout wasn't being set properly on\nESP32s because the builtInDAC member was not set before calling SetPinout.\nFix per his suggestion.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-02-17 15:24:29.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-16 21:21:32.000-08:00", "committer_id": 11875, "message": "Move add'l locals to 2ndary stack\n\n*_context can often be very big, so move those to the secondary stack.\nAlso move additional arrays off to the extra stack.  About 4.5KB of\n2ndary stack can be used now, with ~2KB of real stack left available\nfor applications.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-16 21:21:32.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-16 16:09:35.000-08:00", "committer_id": 11875, "message": "Move 64-byte temp variables to 2ndary stack", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-16 16:09:35.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-14 15:13:09.000-08:00", "committer_id": 11875, "message": "Move EC locals to secondary stack\n\nThere are many large local variables that blow out the ESP8266's\nstack.  Use the special esp8266_stack to allocate these variables\ninstead.\n\nAlso fixes some build issues on x86 due to API change on x509_init", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-14 15:13:09.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-02-25 13:37:17.000-08:00", "committer_id": 11875, "message": "WIP - AudioOutputMixer to combine multiple streams\n\nThis runs but amplification is not working yet.  See MixerSample\nfor a very crufty example.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-02-25 13:37:17.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-02-25 14:24:38.000-08:00", "committer_id": 11875, "message": "Support volume on each input channel\n\nCall stub->SetGain(float) to set an input's volume before mixing.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-02-25 14:24:38.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-01 21:10:44.000-08:00", "committer_id": 11875, "message": "Fix memory leak in server hash_data\n\nSTACK_PROXY_EXIT wasn't called on one branch of flow in the server's\nhash_data function.  Fix it to avoid a 208 byte memory leak on each\nserver invocation.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-01 21:08:33.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-02-28 20:35:59.000-08:00", "committer_id": 11875, "message": "Add links to cool uses", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-02-28 18:39:26.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-23 08:43:42.000-08:00", "committer_id": 11875, "message": "Fix STACK_PROXY_EXIT missing on some x509 branches\n\nHad a memory leak of 64 bytes per x509 on the 2ndary stack, fix with\nproper STACK_PROXY_EXIT calls.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-23 08:43:42.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-02-23 08:14:42.000-08:00", "committer_id": 11875, "message": "Fix missing STACK_PROXY_EXIT() in prf", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-02-23 08:14:42.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-02-26 13:11:23.000-08:00", "committer_id": 11875, "message": "Add Mixer::loop() to allow just sending I2S data\n\nAllow users to call the ::loop() method to pump out any possible data\nto the I2S interface, without requiring any Stubs to pump the queue.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-02-26 13:11:23.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-02-26 12:56:48.000-08:00", "committer_id": 11875, "message": "Add AudioOutputMixer to valgrind testing\n\nIt, amazingly, worked without any issues found by Valgrind on the\nfirst try.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-02-26 12:56:48.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-02 08:08:37.000-08:00", "committer_id": 11875, "message": "Remove unneeded PROGMEM changes for 32-bit fcns\n\nWe only use i15/16 functions because we don't have the needed\n32x32->64 multiply instruction in the ESP8266, so remove the\nunneeded and unused changes to the 32/31 bit functions.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-02 08:08:37.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-02 18:31:34.000-08:00", "committer_id": 11875, "message": "Fix makefile, move t0_datablock to PROGMEM\n\nMakefile did not have a dependency on kern.t0, so changes to it would\nnot cause a rebuild of the T0 core.\n\nMove t0_datablock[]s to PROGMEM, saving around 1KB of heap.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-02 18:31:34.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-02 14:55:55.000-08:00", "committer_id": 11875, "message": "Add kern.t0 to the dependencies for T0Comp.exe", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-02 14:55:55.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-05 13:42:55.000-08:00", "committer_id": 11875, "message": "Move SHA1 IV to PROGMEM", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-05 13:42:55.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-05 13:26:37.000-08:00", "committer_id": 11875, "message": "Move HASH_OID to PROGMEM, not speed critical\n\nSave around 40-80 bytes of RAM by moving the OIDs for different\nserver hashes into progmem, copying into RAM just before use.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-05 13:26:37.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-03-09 10:11:05.000-08:00", "committer_id": 11875, "message": "Add ESP32-fs-plugin link to README, thx @rfestag", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-03-09 10:11:05.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-03-05 07:26:12.000-08:00", "committer_id": 11875, "message": "README now contains latest SPIFFS on ESP32", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-03-05 07:26:12.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-09 21:05:08.000-08:00", "committer_id": 11875, "message": "Clean up debug printout defines, go to -O3 FWIW", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-09 21:05:08.000-08:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-13 12:10:19.000-07:00", "committer_id": 11875, "message": "Add a callback context for the findHashedTA CB", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-13 12:10:19.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-16 16:01:24.000-07:00", "committer_id": 11875, "message": "Add yield()s in the EC code, hit WDT occasionally\n\nThe Elliptic Curve crypto is many times slower than RSA, which can\ncause the SSL handshake to hit a watchdog error when connecting to\ncertain sites (i.e. tls.mbed.org).\n\nAdd in yields() into the EC path, which will marginally increase\nhandshake time but ensure we pump the WDT to allow WiFi/etc. to\nwork properly.\n\nShould have no effect on performance once connected since the\ndata encryption does not use EC or RSA.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-16 16:01:24.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-18 10:31:34.000-07:00", "committer_id": 11875, "message": "Use optimistic_yield() to support AsyncTCP calls\n\nAlso removed unneeded yield()s since it's being pumped by the lowest\nlevel of EC handling.\n\nThanks to @Adam5Wu for the profiling and AsyncTCP info.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-16 18:46:04.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-03-15 12:31:47.000-07:00", "committer_id": 11875, "message": "Clean up GCC -o levels, settle on -O2\n\nHad -Os and -O3 on the GCC command line, but only the last one has\nan effect.  After testing found that -O2 was only ~5KB more than -Os,\nbut -O3 was ~20KB larger in code size and not worth the space.", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-03-15 12:31:47.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-03-25 21:45:38.000-07:00", "committer_id": 11875, "message": "Merge branch 'master' of https://github.com/earlephilhower/ESP8266Audio", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-03-25 21:45:38.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-03-25 21:44:22.000-07:00", "committer_id": 11875, "message": "Initial RTTTL (Nokia ringtone) checkin\n\nSeems to be some problem with square wave production, but the note\nprocessing looks good for now.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-03-25 21:44:22.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-04-02 14:20:57.000-07:00", "committer_id": 11875, "message": "New use case byu CosmicMac", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-04-02 14:20:57.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-04-01 19:09:38.000-07:00", "committer_id": 11875, "message": "Add JohannesMTC link", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-04-01 19:09:38.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-05-23 08:20:28.000-07:00", "committer_id": 11875, "message": "Add linear clock note", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-05-23 08:20:28.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-05-23 08:56:08.000-07:00", "committer_id": 11875, "message": "Add warning about amplified speakers on 1T", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-05-23 08:56:08.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-05-23 22:40:29.000-07:00", "committer_id": 11875, "message": "Fix 8->16 bit output conversion overflow error\n\nThe I2S outputs were converting samples in the buffer passed in\nfrom u8->s16 on every call.  When the I2S was full, however, the\nsample would not get pushed and the output function would be\ncalled at a later time with the same buffer...which was already\nat 16 bits.  It'd be converted again and turned into a high\nfrequency noise on the output.\n\nNow only modify a copy of the input sample in I2S and I2SNoDAC.\nFixes the conversion problem competely.\n\nFixes #2", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-05-23 22:35:56.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-05-23 22:59:22.000-07:00", "committer_id": 11875, "message": "Merge branch 'master' of https://www.bearssl.org/git/BearSSL", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-05-23 22:59:22.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-05-24 11:40:27.000-07:00", "committer_id": 11875, "message": "Make compile warnings an error on ESP8266", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-05-24 11:40:27.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-05-24 11:38:37.000-07:00", "committer_id": 11875, "message": "Merge branch 'master' of https://www.bearssl.org/git/BearSSL", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-05-24 11:38:37.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-05-15 07:04:42.000-07:00", "committer_id": 11875, "message": "Explicitly reference SPIFFS namespace File\n\nEnsure we grap the SPIFFS version of file by prepending the fs:: to\nthe File local object.  Fixes #93.", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-05-15 07:04:42.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 100118525, "repo_owner_id": 11875, "commit_at": "2018-05-15 07:22:49.000-07:00", "committer_id": 11875, "message": "Add I2S debug/wiring notes", "repo_description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "generate_at": "2018-05-15 07:21:23.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/ESP8266Audio"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-05-14 11:52:32.000-07:00", "committer_id": 11875, "message": "Merge branch 'master' of https://www.bearssl.org/git/BearSSL", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-05-14 11:52:32.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}, {"repo_id": 119930337, "repo_owner_id": 11875, "commit_at": "2018-05-15 12:31:17.000-07:00", "committer_id": 11875, "message": "Add README-esp8266.txt explaning build and changes", "repo_description": "Port of https://bearssl.org BearSSL to ESP8266", "generate_at": "2018-05-15 12:31:17.000-07:00", "author_id": 11875, "repo_name": "earlephilhower/bearssl-esp8266"}], "bio": null, "commits": 613, "company": null, "following_list": [], "public_gists": 1, "name": "Earle F. Philhower, III", "created_at": "2008-05-29 15:44:32", "email": "earlephilhower@yahoo.com", "following": 0, "login": "earlephilhower", "repo_list": [{"fork": false, "license": "GNU General Public License v3.0", "has_wiki": true, "description": "Control Jandy Aqualink via a web interface", "language": "Python", "default_branch": "master", "created_at": "2016-09-10 15:50:46", "forks_count": 4, "updated_at": "2017-09-22 18:07:06", "pushed_at": "2017-08-13 13:59:31", "full_name": "earlephilhower/aquaweb", "open_issues": 0, "stargazers_count": 8, "owner_id": 11875, "id": 67879966, "size": 150}, {"fork": true, "license": "GNU Lesser General Public License v2.1", "has_wiki": true, "description": "ESP8266 core for Arduino", "language": "C", "default_branch": "master", "created_at": "2017-02-28 03:31:42", "forks_count": 1, "updated_at": "2018-06-13 22:15:08", "pushed_at": "2018-06-13 22:14:56", "full_name": "earlephilhower/Arduino", "open_issues": 0, "stargazers_count": 5, "owner_id": 11875, "id": 83385402, "size": 47745}, {"fork": true, "license": "GNU General Public License v2.0", "has_wiki": false, "description": "Arduino plugin for uploading files to the ESP8266 FastROMFilesystem", "language": "Java", "default_branch": "master", "created_at": "2017-10-29 20:50:35", "forks_count": 0, "updated_at": "2017-10-29 20:56:29", "pushed_at": "2017-10-29 23:36:09", "full_name": "earlephilhower/arduino-esp8266fastromfs-plugin", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 108770241, "size": 370}, {"fork": true, "license": null, "has_wiki": true, "description": "Arduino libraries and examples", "language": "C++", "default_branch": "master", "created_at": "2016-09-10 18:13:49", "forks_count": 0, "updated_at": "2016-09-10 18:16:46", "pushed_at": "2016-09-10 21:28:54", "full_name": "earlephilhower/arduinocrypto", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 67886943, "size": 19208}, {"fork": true, "license": "BSD 3-Clause \"New\" or \"Revised\" License", "has_wiki": true, "description": "axTLS port for ESP8266", "language": "C", "default_branch": "master", "created_at": "2017-07-28 20:23:49", "forks_count": 0, "updated_at": "2017-11-26 17:21:38", "pushed_at": "2018-03-09 05:42:05", "full_name": "earlephilhower/axtls-8266", "open_issues": 0, "stargazers_count": 1, "owner_id": 11875, "id": 98685588, "size": 4174}, {"fork": false, "license": "MIT License", "has_wiki": true, "description": "Port of https://bearssl.org BearSSL to ESP8266", "language": "C", "default_branch": "master", "created_at": "2018-02-02 04:07:47", "forks_count": 1, "updated_at": "2018-05-30 10:59:30", "pushed_at": "2018-05-24 18:40:47", "full_name": "earlephilhower/bearssl-esp8266", "open_issues": 1, "stargazers_count": 6, "owner_id": 11875, "id": 119930337, "size": 1393}, {"fork": true, "license": null, "has_wiki": true, "description": "An Arduino library for calculating a CRC32 checksum.", "language": "C++", "default_branch": "master", "created_at": "2017-10-18 17:21:44", "forks_count": 0, "updated_at": "2017-10-18 17:21:46", "pushed_at": "2016-12-01 18:55:40", "full_name": "earlephilhower/CRC32", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 107440144, "size": 10}, {"fork": false, "license": null, "has_wiki": true, "description": "Github.io pages", "language": "HTML", "default_branch": "master", "created_at": "2018-03-02 21:13:00", "forks_count": 0, "updated_at": "2018-03-02 21:14:12", "pushed_at": "2018-03-02 21:14:11", "full_name": "earlephilhower/earlephilhower.github.io", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 123631449, "size": 0}, {"fork": true, "license": null, "has_wiki": true, "description": "Free and open (as much as possible) integrated SDK for ESP8266/ESP8285 chips", "language": "Makefile", "default_branch": "master", "created_at": "2018-01-25 21:24:24", "forks_count": 0, "updated_at": "2018-01-25 21:24:26", "pushed_at": "2018-01-20 06:47:45", "full_name": "earlephilhower/esp-open-sdk", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 118969481, "size": 338}, {"fork": false, "license": "GNU General Public License v3.0", "has_wiki": true, "description": "Arduino library to play MOD, WAV, FLAC, MIDI, RTTTL, MP3, and AAC files on I2S DACs or with a software emulated delta-sigma DAC on the ESP8266 and ESP32", "language": "C", "default_branch": "master", "created_at": "2017-08-12 14:47:25", "forks_count": 33, "updated_at": "2018-06-12 20:29:45", "pushed_at": "2018-05-24 05:40:49", "full_name": "earlephilhower/ESP8266Audio", "open_issues": 27, "stargazers_count": 148, "owner_id": 11875, "id": 100118525, "size": 3483}, {"fork": true, "license": "Other", "has_wiki": true, "description": "MP3/AAC/FLAC Codecs for Teensy 3.1/3.2", "language": "C", "default_branch": "master", "created_at": "2017-11-17 20:01:29", "forks_count": 1, "updated_at": "2018-03-05 09:00:23", "pushed_at": "2017-11-18 15:37:23", "full_name": "earlephilhower/ESP8266AudioAAC", "open_issues": 0, "stargazers_count": 2, "owner_id": 11875, "id": 111145417, "size": 42046}, {"fork": false, "license": "Other", "has_wiki": true, "description": "Port of Helix MP3 code to ESP8266", "language": "C", "default_branch": "master", "created_at": "2017-12-08 21:33:22", "forks_count": 3, "updated_at": "2017-12-08 21:34:37", "pushed_at": "2017-12-08 23:28:05", "full_name": "earlephilhower/ESP8266AudioMP3", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 113619238, "size": 643}, {"fork": false, "license": "GNU General Public License v3.0", "has_wiki": true, "description": "Higher-speed filesystem to replace SPIFFS in apps not needing all SPIFFs assurances.", "language": "C++", "default_branch": "master", "created_at": "2017-10-24 04:08:41", "forks_count": 0, "updated_at": "2018-03-09 02:14:08", "pushed_at": "2017-11-01 23:55:52", "full_name": "earlephilhower/ESP8266FastROMFS", "open_issues": 0, "stargazers_count": 2, "owner_id": 11875, "id": 108075370, "size": 133}, {"fork": false, "license": null, "has_wiki": true, "description": "Speech synthesis for ESP8266 using S.A.M. port", "language": "C", "default_branch": "master", "created_at": "2017-09-30 20:28:29", "forks_count": 4, "updated_at": "2018-06-11 17:10:38", "pushed_at": "2018-03-09 18:44:00", "full_name": "earlephilhower/ESP8266SAM", "open_issues": 0, "stargazers_count": 27, "owner_id": 11875, "id": 105398805, "size": 55}, {"fork": false, "license": "GNU General Public License v3.0", "has_wiki": true, "description": "Obsolete, please use ESP8266Audio - TinySoundFont + MidiTones based MIDI player using SoundFont2 patch sets.", "language": "C", "default_branch": "master", "created_at": "2017-10-24 04:13:55", "forks_count": 2, "updated_at": "2018-05-09 22:48:41", "pushed_at": "2017-10-28 00:04:42", "full_name": "earlephilhower/ESP8266WavetableSynth", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 108075713, "size": 39}, {"fork": true, "license": "GNU General Public License v2.0", "has_wiki": true, "description": "SPI library for Serial SRam 23A1024/23LC1024 by Microchip Technology Inc.", "language": "C++", "default_branch": "master", "created_at": "2017-12-06 22:03:11", "forks_count": 0, "updated_at": "2018-01-02 11:34:21", "pushed_at": "2017-12-06 22:19:50", "full_name": "earlephilhower/ESP8266_Spiram", "open_issues": 0, "stargazers_count": 1, "owner_id": 11875, "id": 113371885, "size": 13}, {"fork": true, "license": "GNU General Public License v2.0", "has_wiki": true, "description": "Exception Stack Trace Decoder for ESP8266 and ESP32", "language": "Java", "default_branch": "master", "created_at": "2018-01-22 19:57:22", "forks_count": 0, "updated_at": "2018-01-22 19:57:24", "pushed_at": "2018-03-26 16:06:39", "full_name": "earlephilhower/EspExceptionDecoder", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 118507648, "size": 1207}, {"fork": false, "license": "GNU General Public License v2.0", "has_wiki": true, "description": "Simple NVME/SAS/SATA SSD test framework for Linux and Windows", "language": "PowerShell", "default_branch": "master", "created_at": "2016-02-09 18:57:23", "forks_count": 11, "updated_at": "2018-06-12 07:38:29", "pushed_at": "2018-05-03 18:32:18", "full_name": "earlephilhower/ezfio", "open_issues": 0, "stargazers_count": 26, "owner_id": 11875, "id": 51390783, "size": 6019}, {"fork": true, "license": "Other", "has_wiki": true, "description": "gcc for xtensa", "language": "C", "default_branch": "call0-4.8.2", "created_at": "2018-01-16 21:52:16", "forks_count": 0, "updated_at": "2018-01-16 21:54:34", "pushed_at": "2018-01-25 19:11:57", "full_name": "earlephilhower/gcc-xtensa", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 117746820, "size": 941380}, {"fork": true, "license": "Other", "has_wiki": false, "description": "Amazon Simple Storage Service (S3) resource plugin for iRODS", "language": "C++", "default_branch": "master", "created_at": "2016-06-03 21:30:45", "forks_count": 0, "updated_at": "2016-06-03 21:30:45", "pushed_at": "2016-06-03 21:43:44", "full_name": "earlephilhower/irods_resource_plugin_s3", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 60378850, "size": 107}, {"fork": false, "license": "Other", "has_wiki": true, "description": "Port of libmad to ESP-8266 Arduino IDE - for historical purposes only, see ESP8266Audio for updated versions", "language": "C++", "default_branch": "master", "created_at": "2017-08-01 01:14:57", "forks_count": 0, "updated_at": "2018-05-09 22:47:00", "pushed_at": "2017-08-12 05:19:56", "full_name": "earlephilhower/libmad-8266", "open_issues": 0, "stargazers_count": 2, "owner_id": 11875, "id": 98944550, "size": 767}, {"fork": true, "license": "Other", "has_wiki": true, "description": null, "language": "C", "default_branch": "master", "created_at": "2016-06-01 20:17:49", "forks_count": 0, "updated_at": "2016-06-01 20:17:50", "pushed_at": "2016-06-02 17:42:51", "full_name": "earlephilhower/libs3", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 60207917, "size": 503}, {"fork": true, "license": "MIT License", "has_wiki": false, "description": "Convert MIDI files to a simplified time-ordered sequence of note commands", "language": "C", "default_branch": "master", "created_at": "2017-10-10 09:51:03", "forks_count": 0, "updated_at": "2017-10-10 09:51:05", "pushed_at": "2017-10-31 03:00:10", "full_name": "earlephilhower/miditones", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 106399068, "size": 545}, {"fork": true, "license": "Other", "has_wiki": true, "description": "newlib-xtensa fork intended for esp8266", "language": "C", "default_branch": "xtensa-2_2_0-lock-arduino", "created_at": "2018-01-11 02:15:09", "forks_count": 0, "updated_at": "2018-01-11 02:15:23", "pushed_at": "2018-03-09 05:42:48", "full_name": "earlephilhower/newlib-xtensa", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 117037769, "size": 94356}, {"fork": false, "license": "GNU General Public License v3.0", "has_wiki": true, "description": "ESP8266 alarm clock with 8x32 LED display, NTP time, and MOD/WAV music alarms", "language": "Objective-C", "default_branch": "master", "created_at": "2017-08-03 03:45:40", "forks_count": 1, "updated_at": "2018-03-05 08:57:00", "pushed_at": "2017-11-14 23:20:04", "full_name": "earlephilhower/psychoclock", "open_issues": 0, "stargazers_count": 1, "owner_id": 11875, "id": 99187933, "size": 37}, {"fork": false, "license": "GNU General Public License v3.0", "has_wiki": true, "description": "ESP8266 power outlet replacement firmware with standalone HTTP scheduler and MQTT integration", "language": "C++", "default_branch": "master", "created_at": "2017-02-17 20:32:09", "forks_count": 3, "updated_at": "2018-05-06 12:59:03", "pushed_at": "2018-01-15 22:06:36", "full_name": "earlephilhower/psychoplug", "open_issues": 2, "stargazers_count": 16, "owner_id": 11875, "id": 82335573, "size": 460}, {"fork": true, "license": null, "has_wiki": true, "description": "Optimized fork of nRF24L01 for Arduino and Raspberry Pi", "language": "C", "default_branch": "master", "created_at": "2016-09-10 18:26:34", "forks_count": 0, "updated_at": "2016-09-10 20:02:14", "pushed_at": "2016-09-10 20:02:12", "full_name": "earlephilhower/RF24", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 67887499, "size": 1293}, {"fork": true, "license": null, "has_wiki": true, "description": "Software Automatic Mouth - Tiny Speech Synthesizer ", "language": "C", "default_branch": "master", "created_at": "2017-10-04 18:26:23", "forks_count": 0, "updated_at": "2018-01-02 12:27:56", "pushed_at": "2017-10-06 07:16:06", "full_name": "earlephilhower/SAM", "open_issues": 0, "stargazers_count": 1, "owner_id": 11875, "id": 105803143, "size": 158}, {"fork": false, "license": "Other", "has_wiki": true, "description": "SANE backends local version, for updating Canon MAXIFY support", "language": "C", "default_branch": "master", "created_at": "2018-05-04 21:55:13", "forks_count": 0, "updated_at": "2018-05-04 21:57:55", "pushed_at": "2018-05-09 19:46:04", "full_name": "earlephilhower/sane-backends", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 132192651, "size": 28759}, {"fork": true, "license": null, "has_wiki": true, "description": "This project is a sane backend for the canon's scanner, based on the source code of scangearmp2.", "language": "C", "default_branch": "master", "created_at": "2018-04-28 19:57:19", "forks_count": 0, "updated_at": "2018-04-28 19:57:21", "pushed_at": "2018-04-28 20:03:49", "full_name": "earlephilhower/scangearmp2", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 131439999, "size": 534}, {"fork": false, "license": "GNU General Public License v3.0", "has_wiki": true, "description": "Secure home sensor network utilizing Elliptic Curve cryptographic key exchange, AES-128 encryption, and no cloud services", "language": "C++", "default_branch": "master", "created_at": "2016-09-10 16:18:42", "forks_count": 0, "updated_at": "2016-09-10 17:13:32", "pushed_at": "2016-10-02 04:34:12", "full_name": "earlephilhower/sensy", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 67881335, "size": 316}, {"fork": true, "license": "Apache License 2.0", "has_wiki": false, "description": "Repository for third party continuous integration teams to share tools, configurations, plug-ins and documents.", "language": "Python", "default_branch": "master", "created_at": "2015-06-15 20:07:01", "forks_count": 0, "updated_at": "2015-06-15 20:07:02", "pushed_at": "2015-07-20 20:22:21", "full_name": "earlephilhower/third-party-ci-tools", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 37488486, "size": 427}, {"fork": true, "license": null, "has_wiki": true, "description": "Time library for Arduino", "language": "C++", "default_branch": "master", "created_at": "2017-02-20 05:30:28", "forks_count": 0, "updated_at": "2017-02-20 05:30:30", "pushed_at": "2017-01-31 15:51:12", "full_name": "earlephilhower/Time", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 82520291, "size": 97}, {"fork": true, "license": "Other", "has_wiki": true, "description": "SoundFont2 synthesizer library in a single C/C++ file", "language": "C", "default_branch": "master", "created_at": "2017-10-06 19:36:54", "forks_count": 0, "updated_at": "2017-10-06 19:36:56", "pushed_at": "2017-11-02 13:32:59", "full_name": "earlephilhower/TinySoundFont", "open_issues": 0, "stargazers_count": 0, "owner_id": 11875, "id": 106043374, "size": 671}]}