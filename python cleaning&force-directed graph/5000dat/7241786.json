{"hirable": null, "public_repos": 0, "is_suspicious": false, "updated_at": "2018-06-26 15:29:20", "id": 7241786, "blog": "", "followers": 1, "location": null, "follower_list": [1110226], "type": "User", "commit_list": [{"repo_id": 113198890, "repo_owner_id": 34278277, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "ecatala/test"}, {"repo_id": 64617704, "repo_owner_id": 13791922, "commit_at": "2016-06-06 21:59:29Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14-04:00", "author_id": 7241786, "repo_name": "nikamajinkya/Wireshark"}, {"repo_id": 53634386, "repo_owner_id": 860066, "commit_at": "2016-06-06 21:59:29Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": "Shared in-progress wireshark tree.", "generate_at": "2016-06-06 13:53:14-04:00", "author_id": 7241786, "repo_name": "da4089/wireshark"}, {"repo_id": 134720429, "repo_owner_id": 1716247, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": "personal fork of wireshark for CIFS/SMB1/2/3 work", "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "aaptel/wireshark"}, {"repo_id": 132013380, "repo_owner_id": 33710908, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "xfinest/wireshark"}, {"repo_id": 82651751, "repo_owner_id": 25921935, "commit_at": "2016-06-06 21:59:29Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14-04:00", "author_id": 7241786, "repo_name": "asvwa/Wireshark2"}, {"repo_id": 64146869, "repo_owner_id": 5173499, "commit_at": "2016-06-06 21:59:29Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14-04:00", "author_id": 7241786, "repo_name": "williamtu/wireshark"}, {"repo_id": 21329550, "repo_owner_id": 6233056, "commit_at": "2016-06-06 21:59:29Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": "Read-only mirror of Wireshark's Git repository. GitHub won't let us disable pull requests. ☞ THEY WILL BE IGNORED HERE ☜ Please upload them at https://code.wireshark.org/review/ .", "generate_at": "2016-06-06 13:53:14-04:00", "author_id": 7241786, "repo_name": "wireshark/wireshark"}, {"repo_id": 71384214, "repo_owner_id": 9274420, "commit_at": "2016-06-06 21:59:29Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14-04:00", "author_id": 7241786, "repo_name": "douglasahlquist/wireshark"}, {"repo_id": 126532869, "repo_owner_id": 1063257, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "tstruk/wireshark"}, {"repo_id": 100740932, "repo_owner_id": 26355425, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": "Cross-compilation of wireshark for iOS", "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "Shawnxm/wireshark-for-ios"}, {"repo_id": 136935271, "repo_owner_id": 1750009, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "alanrevans/wireshark"}, {"repo_id": 96121703, "repo_owner_id": 10894804, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "jmmunoz86/tmp_wireshark"}, {"repo_id": 79362442, "repo_owner_id": 10078698, "commit_at": "2016-06-06 21:59:29Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14-04:00", "author_id": 7241786, "repo_name": "mitza-oci/wireshark"}, {"repo_id": 101705099, "repo_owner_id": 10910189, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "MakarandKulkarniG/wireshark"}, {"repo_id": 26864355, "repo_owner_id": 886074, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": "...various patches for mptcp (mostly)", "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "teto/wireshark"}, {"repo_id": 105645984, "repo_owner_id": 32484129, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "Cony-Liu/Cony-s-DB"}, {"repo_id": 17659126, "repo_owner_id": 64943, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": "My working copy of the Wireshark tree http://www.wireshark.org/develop.html + LISP dissector work", "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "ljakab/wireshark"}, {"repo_id": 87572693, "repo_owner_id": 12067722, "commit_at": "2016-06-06 21:59:29Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14-04:00", "author_id": 7241786, "repo_name": "DRTEK/wireshark"}, {"repo_id": 102286459, "repo_owner_id": 30649545, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": null, "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "kmmayya/DTN-Wireshark"}, {"repo_id": 94181243, "repo_owner_id": 28730813, "commit_at": "2016-06-06 21:59:29.000Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": "PvD aware wireshark implementation", "generate_at": "2016-06-06 13:53:14.000-04:00", "author_id": 7241786, "repo_name": "IPv6-mPvD/wireshark"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2016-10-13 07:12:25-04:00", "committer_id": 1110226, "message": "system: set Solaris 64-bit dynamic load libs\n\nafs-robotest fails on Solaris 11.3 with:\n\nsfs1.localdomain CommandFailed: \"Command failed! /usr/afs/bin/asetkey;\ncode=-9, stderr='ld.so.1: asetkey: fatal: libafshcrypto.so.2: open\nfailed: No such file or directory'\"\n\nThis because we are only configuring the dynamic loader for the default\n32 bit environment.\n\nAdd 'crle -64 -u -l <path> to configure 64-bit loader as well.", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2016-10-05 18:15:34-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2016-07-07 20:43:09-04:00", "committer_id": 1110226, "message": "aklog: tolerate dirty versions on aklog version check\n\nModify the regex to tolerate \"dirty\" versions of form:\n  OpenAFS 1.6.nn-*", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2016-06-10 16:29:44-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2016-07-07 20:41:08-04:00", "committer_id": 1110226, "message": "config: don't override --cf=\"--disable-checking\"\n\nWe were unconditianally appending '--enable-checking' for Linux.\n\nBut even on Linux we might want to disable checking for an old or customer\ncode base.\n\nModify the config option parsing to allow --disable-checking to work.", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2016-06-10 17:35:56-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2016-07-07 20:29:34-04:00", "committer_id": 1110226, "message": "afs-robotest: add --include keyword\n\nAllow tests to be included by tag on the command line.", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2016-04-05 15:07:22-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2016-07-07 20:29:34-04:00", "committer_id": 1110226, "message": "oafs: workaround HACK for \"stale\" mountpoint issue\n\nIf any test that creates a new volume and mountpoint (e.g. behavior)\nis run more than once without an intervening afs-robotest teardown,\nthe second run will fail at fs setacl with \"No such device\" ENODEV.\n\nThis is caused by the CM still having reference to the old volumeid from\nthe previous run (either in vcache or in vcache->mvid).  Hence it issues\nRXAFS_FetchACL for the wrong volume/fid.  Since the volume no longer\nexists (was torn down on the first run), the fileserver (after a long\ndelay while afs_Analyze does its 7 retry busy-ladder) replies with\nVNOVOL.  This ends up being reflected back to the CM (by afs_CheckCode)\nas ENODEV.\n\nInstead of trying to figure out where we are going wrong in the CM\nfor this very unusual use case, just workaround the problem for now\nby adding an fs checkvol to robotest create_volume, remove_volume,\nand release_volume.  It is actually recommended that fs checkvol be\nissued after a vos release that changes the number of replicas, so\nthis is not unreasonable.", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2016-03-18 10:17:15-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2016-07-07 20:29:34-04:00", "committer_id": 1110226, "message": "oafs: include command output in reports\n\nLog stdout and stderr from commands issued via keywords\nCommand Should Succeed and Command Should Not Succeed.", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2016-03-31 10:33:17-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2016-07-07 20:29:34-04:00", "committer_id": 1110226, "message": "afsutil: add additional servers to the stop check list\n\nadd missing servers:  buserver, butc, bucoord, upclient\n\nnot sure if anything could or should be done for cron jobs", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2016-03-18 10:15:10-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2016-07-07 20:29:29-04:00", "committer_id": 1110226, "message": "OpenAFSLibrary: log command arguments\n\nWhen a command fails, it's helpful to see what the arguments were.\n\nLog them too.", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2016-03-15 23:44:10-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2016-07-07 20:29:02-04:00", "committer_id": 1110226, "message": "tests: execute test fails on Solaris\n\necho -n is not supported for many shells on Solaris.\n\nModify the test to not use -n.", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2016-03-15 23:42:09-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2015-02-05 19:55:09-05:00", "committer_id": 7241786, "message": "reset:  empty the cache partition", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2015-02-05 19:55:09-05:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2015-02-05 19:48:22-05:00", "committer_id": 7241786, "message": "install:  purge cache partition", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2015-02-05 19:48:22-05:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2015-02-05 19:39:35-05:00", "committer_id": 7241786, "message": "prechecks:  verify cache partition is present and empty", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2015-02-05 19:39:35-05:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2017-04-26 15:38:21-04:00", "committer_id": 1110226, "message": "tests: fix errno automation for Solaris\n\nSome of the error names specified in resources/errorcodes.py are\nundefined on Solaris.  This causes the errrocodes.py script to fail,\nwhich leads to undefined variables in tests that reference any\nerror name, e.g.:\n\nTEST Create a Hard Link within a Volume\nFull Name: \tTests.Client.Basic.Create a Hard Link within a Volume\nStart / End / Elapsed: \t20170425 14:54:15.040 / 20170425 14:54:15.081 / 00:00:00.041\nStatus: \tFAIL (critical)\nMessage: \tVariable '${EXDEV}' not found.\n\nAs a temporary fix, comment out all error names that are undefined in\nSolaris.  Fortunately, none of these errors are currently referenced by\nany test.", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2017-04-25 15:52:41-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2017-09-11 12:37:57.000-04:00", "committer_id": 1110226, "message": "cell.py: first fileserver has incorrect CSDB\n\nIn setup_first_fs_server, the setcellhost call intends to modify the\nprimary fileserver's CSDB, but inadvertently sets the primary DB\nserver's CSDB instead.  This causes intermittent delays when the\nfileserver attempts to contact a DB server.", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2017-09-04 14:46:17.000-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2017-09-18 15:49:28.000-04:00", "committer_id": 1110226, "message": "afsrobot: support external pre/post install/remove commands\n\nAdd config support for afsutil pre/post install/remove external\ncommands.  Currently must be specified for each node.", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2017-09-18 15:47:29.000-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17804942, "repo_owner_id": 1110063, "commit_at": "2017-09-18 15:32:01.000-04:00", "committer_id": 1110226, "message": "afsutil: add post/pre install/remove command hooks\n\nAdd support for an optional pre/post install/remove external commands\nfor custom installations.\n\n   afsutil install --pre  \"command arg1 arg2\" ...\n   afsutil install --post \"command arg1 arg2\" ...\n   afsutil remove  --pre  \"command arg1 arg2\" ...\n   afsutil remove  --post \"command arg1 arg2\" ...\n\n[mmeffie: added pre and post for both install and remove]", "repo_description": "OpenAFS Robot Framework test suite", "generate_at": "2017-09-18 15:06:28.000-04:00", "author_id": 7241786, "repo_name": "openafs-contrib/openafs-robotest"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2013-09-18 07:08:34-07:00", "committer_id": 2910508, "message": "salvager: prevent assertion during -orphans attach\n\nImprove JudgeEntry() detection of orphaned directories to\nprevent unintentional deletion of their '.' and '..' entries.\nThis in turn prevents a later assert (opr_Verify) when we try to\ndelete and re-add '..' in order to attach the orphan.\n\nIn JudgeEntry(), 2 sources of information about a\ndirectory entry are compared for consistency:\n - vnodeEssence (unique) from its vnode index entry\n - name, vnodeNumber and unique from its dir blob entry\n\nA directory entry may be ignored, deleted, or repaired/replaced,\nbased upon the results of these and other tests (e.g. dirOprhaned).\n\nThe '.' and '..' entries are treated as special cases because\nwe do not want to delete them at this point if this directory\nis orphaned.  However, the current test for orphanhood\n(vnodeEssence->unique == 0) is not sufficient; it could be\nzero for other reasons.  This commit now uses the dirOrphaned\nflag to test for this.\n\nHowever, we are still interested in doing the right thing\nfor '.' and '..' entries with vnodeEssence->unique == 0.\nThis may indicate that the dir blob entry is pointing at the\nwrong vnode, and that vnode has unique==0.  The current code\nincorrectly ignores (returns 0) this case.  This commit now\nnow falls through to the repair/replace code so that we can\nfind the correct vnode for this entry.\n\nThe current code assumes that the 'vnodeEssence == 0 &&\n!dirOrphaned' case doesn't exist.\n\nThanks to Andrew Deason for his assistance.\n\nReviewed-on: http://gerrit.openafs.org/9104\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\n(cherry picked from commit e8faeae6dcae0e566de2b21d53d3f78f3cc44e3f)\n\nChange-Id: Ibc9e6ddf1f281e3a3a560ed1eefcdb4776e12caa\nReviewed-on: http://gerrit.openafs.org/10165\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Stephan Wiesand <stephan.wiesand@desy.de>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2013-01-25 18:47:49-05:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2013-09-09 01:40:42-07:00", "committer_id": 2910508, "message": "vol: correct old conditional for IH_CONDSYNC\n\nTwo places in the vol package performed IH_CONDSYNC(vp->linkHandle)\nonly if AFS_NT40_ENV.  This was correct when the namei implementation\nwas windows only; however, this ifdef was apparently overlooked\nwhen namei was implemented for UNIX.\n\nReviewed-on: http://gerrit.openafs.org/8815\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\n(cherry picked from commit 19f424ecc26b02b210a3ba54b93846dddba14ede)\n\nChange-Id: I944004d77ab17938465aa39f37d931df0adcd725\nReviewed-on: http://gerrit.openafs.org/9510\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Stephan Wiesand <stephan.wiesand@desy.de>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-12-21 18:26:18-05:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2013-08-30 08:09:08-07:00", "committer_id": 2910508, "message": "dafs: prevent corruption in large fsstate.dat files\n\nIf while writing to the fsstate.dat file, it exceeds the current\nsize of the file (multiples of FS_STATE_INIT_FILESIZE (8MiB)),\nwe call fs_stateResizeFile.  This un-mmaps, truncates, and\nre-mmaps the file.  Unfortunately, fs_stateMapFile() resets the\nstate->mmap.offset and .cursor, so any writes in flight over\nthe resize will overwrite the first bytes of the file (and leave\nzeros in the file where the data should have been written).\n\nUpon return from the write that caused a file resize, the offset\nis eventually corrected and the state dump continues with a\nsilent failure.  Eventually the state dump completes and the\nfile header is rewritten; this may conceal some or all of\nthe overwrite damage at offset 0.  However, any zeros near the 8MiB\noffset (and its multiples) remain as corruption.\n\nAdd a flag to fs_stateMapFile() to allow the caller to specify if\nthe offset and cursor should be preserved.  Modify fs_stateResizeFile()\nto use this capability.\n\ntesting note: temporarily reduced FS_STATE_INIT_FILESIZE to 256 bytes\nduring testing in order to make the problem easier to reproduce.\nThis problem would normally occur only on relatively large/active\nDAFS fileservers.\n\nReviewed-on: http://gerrit.openafs.org/9599\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\n(cherry picked from commit 42351db75e04e46012208d38f80dc17be7ab776d)\n\nChange-Id: I05a01ebce15e26534361863ed0f8d3161c3f8240\nReviewed-on: http://gerrit.openafs.org/9683\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Stephan Wiesand <stephan.wiesand@desy.de>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2013-03-12 22:13:20-04:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2013-08-28 05:06:24-07:00", "committer_id": 2910508, "message": "dafs: preattach should wait for exclusive states\n\nIn rare circumstances an FSYNC_VOL_ON operation may fail silently,\nleaving the volume in its previous state.  The only clue is a FileLog\nmessage \"volume <nnnn> not in quiescent state\".\n\nThis is caused by a race condition in the volume package: an\nFSYNC_VOL_ON operation is attempting to preattach a volume\n(in VPreAttachVolumeByVp_r()) at the same time a fileserver RPC\n(e.g. FetchStatus) is detaching the volume (in VReleaseVolumeHandles_r())\nat the conclusion of attach2() logic.\n\nThe fix calls VWaitExclusiveState_r() before calling\nVPreAttachVolumeByVp_r().\n\nChange-Id: Ib66859381d29311fda3e08984dcb740eadafb340\nReviewed-on: http://gerrit.openafs.org/8814\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\n(cherry picked from commit 1f891b622e9b32a068082087eae9d787057f7f00)\nReviewed-on: http://gerrit.openafs.org/9070\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Stephan Wiesand <stephan.wiesand@desy.de>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-12-21 17:56:14-05:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2013-04-17 05:10:29-07:00", "committer_id": 2910508, "message": "vos: noise messages when attempting to delete non-existent volume\n\nWith vos refactor commit f4e73067cdef990262c69c38ac98761620a63f25,\nsome formerly conditional volume deletes are now unconditional.\nThis regresses 'vos move' output with harmless \"error\" messages\nwhen AFSVolTransCreate() returns VNOVOL:\n  \"Failed to start transaction on <volume>\"\n  \"Volume not attached, does not exist, or not online\"\n\nModify DoVolDelete() to return early (and silently) with VNOVOL\nin this case, allowing the caller to handle this appropriately.\n\nReviewed-on: http://gerrit.openafs.org/9596\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\n(cherry picked from commit 1092cbe34fc8519826b3fa0565505b7bd81bc922)\n\nChange-Id: I77e701378a999c8ad9413bfefcace0ee06aecb07\nReviewed-on: http://gerrit.openafs.org/9597\nReviewed-by: Stephan Wiesand <stephan.wiesand@desy.de>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Simon Wilkinson <simonxwilkinson@gmail.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2013-03-07 09:34:55-05:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2013-03-22 07:44:57-07:00", "committer_id": 2910508, "message": "salvager: incorrect comment\n\nThe comment for the code handling the -showsuid option was incorrect.\n\nReviewed-on: http://gerrit.openafs.org/9109\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\n(cherry picked from commit 4051c5e96e921b69ac2a6e7bcb805cbc0a8f7993)\n\nChange-Id: Id19e063c9540e362b4d9478a0fce606084d470e6\nReviewed-on: http://gerrit.openafs.org/9523\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Stephan Wiesand <stephan.wiesand@desy.de>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2013-02-14 10:51:34-05:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2012-10-07 06:00:59-07:00", "committer_id": 144944, "message": "vos: convertROtoRW - prevent VLDB corruption\n\nvos convertROtoRW incorrectly marks the first VLDB entry as the\nnew RW if the converted RO is not in the VLDB.  Correct this\nby creating a new valid RW site in the VLDB entry.\n\nChange-Id: I683ac10db90c2c41717c11c0d86eadc81a935e52\nReviewed-on: http://gerrit.openafs.org/8037\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>\n(cherry picked from commit f258e7dddeb4331d2cf4649541c1a3adfa7a416a)\nReviewed-on: http://gerrit.openafs.org/8216\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-08-27 15:11:32-04:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2012-10-07 06:00:41-07:00", "committer_id": 144944, "message": "vos: convertROtoRW incorrect warning when RO not in VLDB\n\nvos convertROtoRW will issue an incorrect warning about a partition\nmismatch if the RO to convert is not in the VLDB.  Only check the\npartition if the RO is in the VLDB.\n\nChange-Id: Ib2726bc5bf6697898ad26dc1d817143da3286ba3\nReviewed-on: http://gerrit.openafs.org/8036\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\n(cherry picked from commit b650106e301ecefe2f5c8f4a34081af1f5f74901)\nReviewed-on: http://gerrit.openafs.org/8215\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-09-04 09:06:44-04:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2012-10-07 06:00:28-07:00", "committer_id": 144944, "message": "vos: convertROtoRW susceptible to VLDB changes during override prompt\n\nvos convertROtoRW obtains a VLDB entry, then peforms some setup logic\n(including a possible user prompt) before obtaining a volume lock.\nThis exposes the code to possible time-of-check/time-of-use issues.\nAfter obtaining the volume lock, get a second copy of the VLDB entry\nand compare it to the first copy; if it has changed, fail the conversion\nwith an error message asking the user to re-issue the vos convertROtoRW\ncommand.\n\nChange-Id: I9c1a634cea2e22188869d54b00b7831aed12b1cd\nReviewed-on: http://gerrit.openafs.org/8008\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>\n(cherry picked from commit 3c489db55811dfe3fdf5e555bf229989e5b58aa6)\nReviewed-on: http://gerrit.openafs.org/8214\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-08-20 17:39:06-04:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2012-10-07 06:00:15-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create 2nd RW on a fileserver\n\nIf an RW is already present on disk on the target server (any partition),\n'vos convertROtoRW' will still convert the RO, creating a second RW on the server.\nDetect this and refuse to convert the RO by returning EXDEV (invalid cross-device link).\n\nChange-Id: Ide15a7c39f2a975fd8597e497094b6a67b448e4f\nReviewed-on: http://gerrit.openafs.org/7934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>\n(cherry picked from commit 0c77c0acabe0a0588ab0a9efab0124ee1e15ef6a)\nReviewed-on: http://gerrit.openafs.org/8213\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-08-02 18:37:05-04:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2012-05-28 17:32:26-07:00", "committer_id": 144944, "message": "vos: volume lock not released on convertROtoRW error\n\nIf an error occurs during convertROtoRW, the volume lock may\nnot be released.\n\nReviewed-on: http://gerrit.openafs.org/7389\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>\n(cherry picked from commit 33eff6597facc01bbcd5266fb83c8a6bfa40dfa8)\n\nChange-Id: I0b87fd3b99f178d99f997032c14673def111c1de\nReviewed-on: http://gerrit.openafs.org/7499\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-05-08 15:03:46-04:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2012-05-28 17:31:22-07:00", "committer_id": 144944, "message": "vos: convertROtoRW does not respect volume lock\n\nvos convertROtoRW was not checking the return code from\nubik_VL_SetLock().\n\nReviewed-on: http://gerrit.openafs.org/7388\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>\n(cherry picked from commit 38ebd79bafee3c97323aa603906d1d5f279ec450)\n\nChange-Id: I391c5b0d3d385af08eb2aec245f943081c7b84e3\nReviewed-on: http://gerrit.openafs.org/7498\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-05-08 14:45:16-04:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2012-05-28 17:31:07-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create two RW volumes\n\nIf the RW volume is listed after the RO convert target in the VLDB,\nthe code failed to detect that an RW is already present and would\ncreate a second RW volume.\n\nReviewed-on: http://gerrit.openafs.org/7385\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>\n(cherry picked from commit 9a728fd86c7add13e15dfa0d3062fa94cc77c53f)\n\nChange-Id: I7e4eaf0ffefedb3c665e28656a75959eb8677071\nReviewed-on: http://gerrit.openafs.org/7497\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-05-08 10:01:12-04:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2012-05-28 17:30:55-07:00", "committer_id": 144944, "message": "vos: convertROtoRW misc error reporting problems\n\nFixes a few inconsistencies and bugs in some error messages.\n\nReviewed-on: http://gerrit.openafs.org/7387\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\n(cherry picked from commit e1c6ad7d580041caf35f698c9b2241fb45f02361)\n\nChange-Id: Icee86e1750920d50b94e29acc5504bd1a2ea9e6e\nReviewed-on: http://gerrit.openafs.org/7496\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-05-08 12:38:38-04:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 17861048, "repo_owner_id": 8515584, "commit_at": "2012-05-28 07:46:51-07:00", "committer_id": 144944, "message": "DOC: vos convertROtoRW security requirements\n\nThey were copied from another command; corrected them.\n\nReviewed-on: http://gerrit.openafs.org/7305\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Ken Dreyer <ktdreyer@ktdreyer.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@dementix.org>\n(cherry picked from commit a2f523b50592e261fe9cd3ef32978e786011c3c7)\n\nChange-Id: I03101cec5bfd20555e33f639ce2c08cde873d646\nReviewed-on: http://gerrit.openafs.org/7494\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "OpenAFS github fork for implementing RestrictedQuery", "generate_at": "2012-05-02 13:55:16-04:00", "author_id": 7241786, "repo_name": "nilcons-contrib/openafs"}, {"repo_id": 64234348, "repo_owner_id": 207770, "commit_at": "2016-06-06 21:59:29Z", "committer_id": 16858714, "message": "afs: eliminate \"malformed packet\" false alarms\n\nMany AFS packets have empty payloads, and Wireshark marks these as\n\"Malformed Packet\" even though they are normal.\n\nEliminate these false alarms by using tvb_reported_length_remaining when\nadding items to the tree.\n\nChange-Id: I4f134fef36b8bb7f99224f02fea9cf29117fb36a\nReviewed-on: https://code.wireshark.org/review/15754\nPetri-Dish: Alexis La Goutte <alexis.lagoutte@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>", "repo_description": "Wireshark copy", "generate_at": "2016-06-06 13:53:14-04:00", "author_id": 7241786, "repo_name": "stigbjorlykke/wireshark"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2014-12-03 01:10:33-05:00", "committer_id": 206466, "message": "kauth: fix klog principal name parsing\n\nIf a principal name is specified to the klog command, it is not\ncorrectly passed in the pw structure.  This in turn causes\nuninitialized storage to be passed to ka_UserAuthenticateGeneral.\nThis may either lead to a segmentation fault in klog, or cause\ngarbage to be passed to the kaserver, leading to garbage in some\nlog and audit messages.  In all cases it is impossible to authenticate\nto kaserver with a specified principal name.  However, klog\nstill works correctly when no principal name is specified.\n\nThis was introduced by commit 68ce3aa814a7e3085242e705f013f05ed5da2d5c\nwhich removed lclpw to eliminate a clang warning.  However, the clang\nwarning was misleading in this case, as lclpw was actually used\n(confusingly) to indirectly update the pw structure.\n\nInstead of reverting this commit, just update pw->pwname directly.\n\nChange-Id: I565360c6e2f970637422e8b01998d3fc29874ec4\nReviewed-on: http://gerrit.openafs.org/11145\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2014-05-13 19:18:57-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2014-10-29 17:30:27-04:00", "committer_id": 144944, "message": "viced: remove obsolete comment about alignment\n\nAlignment may have been historically relevant, but is no longer.\nRemove the comment.\n\nAlso remove the unneeded 'dummy' field which does not provide\npadding for a useful alignment.\n\nChange-Id: I447fb73c379e6f86facd955a29ffd80e8929ceff\nReviewed-on: http://gerrit.openafs.org/11289\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2014-06-12 14:20:24-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2014-08-13 10:01:45-04:00", "committer_id": 206466, "message": "opr: opr_AssertionFailed undefined in kernel module\n\nThe opr_Assert in opr_rbtree_remove is incompletely defined;\nthe opr_Assert macro is defined in opr.h, but the definition\nfor the opr_AssertionFailed routine it invokes is not included.\nThis allows the kernel module to build successfully even though\nit retains a hidden undefined reference for opr_AssertionFailed.\n\nHowever, the logic in obr_rbtree_remove ensures that this\nparticular opr_Assert can never fail - it is superfluous.\nSome compilers (e.g. gcc for Linux AFS kernel module\nbuilds) are able to recognize this and optimize it out.  Others\n(e.g. Solaris 5.12) do not, and when this happens the OpenAFS\nbuild appears to succeed but the kernel module will fail to load\ndue to the undefined symbol.\n\nRemove the superfluous opr_Assert.\n\nThis partially reverts commit 9f8b765bbdbb8913fcadbde8d3362039e9dc8e61.\n\nChange-Id: I4ed2b1873c434e41dce0f2e474926bf8b449b819\nReviewed-on: http://gerrit.openafs.org/11296\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2014-06-06 19:27:04-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2014-08-06 10:29:36-04:00", "committer_id": 144944, "message": "afs: remove cruft from Solaris afs_freevfs\n\nRemove some unused variables left behind in a previous\nrefactor of flushing vcaches during afs_shutdown\n(commit 80fe111f0044aa7a67215ad92210dc72cb7eb2c0).\n\nChange-Id: Ie0a23cb08fc2946f1c400b8ce8e15ef3dc22ec20\nReviewed-on: http://gerrit.openafs.org/11310\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2014-06-29 16:27:37-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2014-06-05 07:20:56-04:00", "committer_id": 144944, "message": "afs: maintain afs_users buckets in sorted order\n\nModify afs_GetUser() to insert a new unixuser into an afs_users\nhash bucket in sorted order, by uid/PAG.  This is in support of\nother small optimizations in future commits.\n\nChange-Id: I68c51ab38733575290aa0c8aa2a306168c5483c0\nReviewed-on: http://gerrit.openafs.org/11071\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2014-04-07 18:56:26-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2014-06-05 07:20:40-04:00", "committer_id": 144944, "message": "afs: only reset access caches for the matching cell\n\nWhen an AFS user's tokens change (unlog, aklog) or expire,\nafs_ResetAccessCache() is called to reset all the access caches\nfor that uid/PAG.\n\nHowever, a user/PAG may have tokens for multiple cells, and they\nmay expire or be set/reset at different times.  Therefore, it is\nincorrect to assume that all access caches for a uid/PAG should\nbe discarded when only one cell's tokens have changed.\n\nModify afs_ResetAccessCache() to acccept a new argument 'cell',\nand only reset the access caches for a uid/PAG if the vcache\nresides in the specified cell.  If the caller really wants to\nreset all a user's access caches, specify cell=-1.\n\nFor cache managers that are running with multiple PAGs and multiple\ncells, this should improve performance because 1) it avoids\nscanning access caches chains for vcaches that are not part of the\ncurrent cell and 2) it avoids deleting access caches that may still\ngood, thus preventing unnecessary FetchStatus calls.\n\nChange-Id: Id4c138dab45fd48265a4029880a5d57947e67a52\nReviewed-on: http://gerrit.openafs.org/11070\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2014-04-03 16:37:51-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2014-02-05 06:47:41-08:00", "committer_id": 144944, "message": "vos: move convertROtoRW core logic to vsprocs\n\nCreate new vsprocs routine UV_ConvertRO in preparation for adding\nnew function to vos convertROtoRW.\n\nChange-Id: Ic66ecbf7cacb277891bec9f8783040995ce6ce17\nReviewed-on: http://gerrit.openafs.org/9277\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2013-02-15 16:58:16-05:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-12-18 14:43:04-08:00", "committer_id": 206466, "message": "viced: remove dead code CheckHost()\n\nRemove CheckHost().\n\nChange-Id: I618066d28ef64fdfe94d5ab08ef89adb08a99fd6\nReviewed-on: http://gerrit.openafs.org/10580\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2013-12-11 17:56:47-05:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-10-26 06:00:44-07:00", "committer_id": 144944, "message": "auth: prevent uninitialized key list in AFS config\n\n_afsconf_OpenInternal() may exit early for a number of reasons\nbefore properly initalizing afsconf_dir->listKeys.\nThis leads to a crash when _afsconf_CloseInternal() attempts\nto clean up listKeys.\n\nPrevent this situation by calling afsconf_InitKeys() before any\npossible exit from _afsconf_OpenInternal().\n\nChange-Id: I6911427817a2518a576c00a7ea56351f9fb4fd19\nReviewed-on: http://gerrit.openafs.org/10323\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2013-10-03 21:42:10-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-08-18 08:38:34-07:00", "committer_id": 144944, "message": "volser: repair volserver -udpsize and -sleep options\n\ncommit cd3492d0635708f141dbb9230471434268ef2188 accidentally\nbroke the parsing of the volserver -udpsize and -sleep options.\n\nChange-Id: Ia900e4d8fda1b4d5759b46932a4b62bf5591707b\nReviewed-on: http://gerrit.openafs.org/10088\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Marc Dionne <marc.c.dionne@gmail.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2013-07-16 17:27:05-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-07-12 10:36:09-07:00", "committer_id": 144944, "message": "vos: incorrectly defined alias for -cell parm\n\nCommit 5d42398298ad4af91a08a08ce607754f644b37dc specified\nan incorrect offset for the -c alias for the -cell common\nparameter.\n\nChange-Id: I5a3bbe9ceb8a9fd4c21970f4ef0c64d77e9cdea4\nReviewed-on: http://gerrit.openafs.org/10021\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2013-06-26 11:18:01-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-03-26 07:48:18-07:00", "committer_id": 144944, "message": "dafs: prevent corruption in large fsstate.dat files\n\nIf while writing to the fsstate.dat file, it exceeds the current\nsize of the file (multiples of FS_STATE_INIT_FILESIZE (8MiB)),\nwe call fs_stateResizeFile.  This un-mmaps, truncates, and\nre-mmaps the file.  Unfortunately, fs_stateMapFile() resets the\nstate->mmap.offset and .cursor, so any writes in flight over\nthe resize will overwrite the first bytes of the file (and leave\nzeros in the file where the data should have been written).\n\nUpon return from the write that caused a file resize, the offset\nis eventually corrected and the state dump continues with a\nsilent failure.  Eventually the state dump completes and the\nfile header is rewritten; this may conceal some or all of\nthe overwrite damage at offset 0.  However, any zeros near the 8MiB\noffset (and its multiples) remain as corruption.\n\nAdd a flag to fs_stateMapFile() to allow the caller to specify if\nthe offset and cursor should be preserved.  Modify fs_stateResizeFile()\nto use this capability.\n\ntesting note: temporarily reduced FS_STATE_INIT_FILESIZE to 256 bytes\nduring testing in order to make the problem easier to reproduce.\nThis problem would normally occur only on relatively large/active\nDAFS fileservers.\n\nChange-Id: I9b6c57ef7727837ae7cfc00d02192983355dad2b\nReviewed-on: http://gerrit.openafs.org/9599\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2013-03-12 22:13:20-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-03-25 11:47:51-07:00", "committer_id": 144944, "message": "salvager: prevent assertion during -orphans attach\n\nImprove JudgeEntry() detection of orphaned directories to\nprevent unintentional deletion of their '.' and '..' entries.\nThis in turn prevents a later assert (opr_Verify) when we try to\ndelete and re-add '..' in order to attach the orphan.\n\nIn JudgeEntry(), 2 sources of information about a\ndirectory entry are compared for consistency:\n - vnodeEssence (unique) from its vnode index entry\n - name, vnodeNumber and unique from its dir blob entry\n\nA directory entry may be ignored, deleted, or repaired/replaced,\nbased upon the results of these and other tests (e.g. dirOprhaned).\n\nThe '.' and '..' entries are treated as special cases because\nwe do not want to delete them at this point if this directory\nis orphaned.  However, the current test for orphanhood\n(vnodeEssence->unique == 0) is not sufficient; it could be\nzero for other reasons.  This commit now uses the dirOrphaned\nflag to test for this.\n\nHowever, we are still interested in doing the right thing\nfor '.' and '..' entries with vnodeEssence->unique == 0.\nThis may indicate that the dir blob entry is pointing at the\nwrong vnode, and that vnode has unique==0.  The current code\nincorrectly ignores (returns 0) this case.  This commit now\nnow falls through to the repair/replace code so that we can\nfind the correct vnode for this entry.\n\nThe current code assumes that the 'vnodeEssence == 0 &&\n!dirOrphaned' case doesn't exist.\n\nThanks to Andrew Deason for his assistance.\n\nChange-Id: Id7c466fcc0f031b8fccb52dc51493eeed040cf95\nReviewed-on: http://gerrit.openafs.org/9104\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2013-01-25 18:47:49-05:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-03-13 09:49:25-07:00", "committer_id": 144944, "message": "vos: noise messages when attempting to delete non-existent volume\n\nWith vos refactor commit f4e73067cdef990262c69c38ac98761620a63f25,\nsome formerly conditional volume deletes are now unconditional.\nThis regresses 'vos move' output with harmless \"error\" messages\nwhen AFSVolTransCreate() returns VNOVOL:\n  \"Failed to start transaction on <volume>\"\n  \"Volume not attached, does not exist, or not online\"\n\nModify DoVolDelete() to return early (and silently) with VNOVOL\nin this case, allowing the caller to handle this appropriately.\n\nChange-Id: I21a72e38f330335adf97ac50a7ac7d0fb97c1a9c\nReviewed-on: http://gerrit.openafs.org/9596\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2013-03-07 09:34:55-05:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-02-26 14:04:56-08:00", "committer_id": 206466, "message": "vos: Unrecognized or ambiguous switch '-c'\n\nThe documented abbreviation '-c' for '-cell' no longer works since\nthe -config option was added.  Add a parm alias '-c' to restore\ncompatibility with previous syntax.\n\nChange-Id: Ie98e470d204ea2186a95668bba2581cf3e88f729\nReviewed-on: http://gerrit.openafs.org/9276\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2013-02-26 09:31:43-05:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-02-15 15:24:59-08:00", "committer_id": 144944, "message": "salvager: incorrect comment\n\nThe comment for the code handling the -showsuid option was incorrect.\n\nChange-Id: I0a63211cf5dd8a3b2636d4e4a2cc45a55c3bf62a\nReviewed-on: http://gerrit.openafs.org/9109\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2013-02-14 10:51:34-05:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-02-05 03:48:42-08:00", "committer_id": 144944, "message": "dafs: preattach should wait for exclusive states\n\nIn rare circumstances an FSYNC_VOL_ON operation may fail silently,\nleaving the volume in its previous state.  The only clue is a FileLog\nmessage \"volume <nnnn> not in quiescent state\".\n\nThis is caused by a race condition in the volume package: an\nFSYNC_VOL_ON operation is attempting to preattach a volume\n(in VPreAttachVolumeByVp_r()) at the same time a fileserver RPC\n(e.g. FetchStatus) is detaching the volume (in VReleaseVolumeHandles_r())\nat the conclusion of attach2() logic.\n\nThe fix calls VWaitExclusiveState_r() before calling\nVPreAttachVolumeByVp_r().\n\nChange-Id: Ib66859381d29311fda3e08984dcb740eadafb340\nReviewed-on: http://gerrit.openafs.org/8814\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-12-21 17:56:14-05:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2013-01-04 06:52:00-08:00", "committer_id": 144944, "message": "vol: correct old conditional for IH_CONDSYNC\n\nTwo places in the vol package performed IH_CONDSYNC(vp->linkHandle)\nonly if AFS_NT40_ENV.  This was correct when the namei implementation\nwas windows only; however, this ifdef was apparently overlooked\nwhen namei was implemented for UNIX.\n\nChange-Id: I0cbe2c5c0a65ece0485b8c2d5a5f92eeb53725fe\nReviewed-on: http://gerrit.openafs.org/8815\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-12-21 18:26:18-05:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2012-09-05 09:56:26-07:00", "committer_id": 144944, "message": "vos: convertROtoRW - prevent VLDB corruption\n\nvos convertROtoRW incorrectly marks the first VLDB entry as the\nnew RW if the converted RO is not in the VLDB.  Correct this\nby creating a new valid RW site in the VLDB entry.\n\nChange-Id: I683ac10db90c2c41717c11c0d86eadc81a935e52\nReviewed-on: http://gerrit.openafs.org/8037\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-08-27 15:11:32-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2012-09-04 12:46:24-07:00", "committer_id": 144944, "message": "vos: convertROtoRW incorrect warning when RO not in VLDB\n\nvos convertROtoRW will issue an incorrect warning about a partition\nmismatch if the RO to convert is not in the VLDB.  Only check the\npartition if the RO is in the VLDB.\n\nChange-Id: Ib2726bc5bf6697898ad26dc1d817143da3286ba3\nReviewed-on: http://gerrit.openafs.org/8036\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-09-04 09:06:44-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2012-08-22 12:25:06-07:00", "committer_id": 144944, "message": "vos: convertROtoRW susceptible to VLDB changes during override prompt\n\nvos convertROtoRW obtains a VLDB entry, then peforms some setup logic\n(including a possible user prompt) before obtaining a volume lock.\nThis exposes the code to possible time-of-check/time-of-use issues.\nAfter obtaining the volume lock, get a second copy of the VLDB entry\nand compare it to the first copy; if it has changed, fail the conversion\nwith an error message asking the user to re-issue the vos convertROtoRW\ncommand.\n\nChange-Id: I9c1a634cea2e22188869d54b00b7831aed12b1cd\nReviewed-on: http://gerrit.openafs.org/8008\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-08-20 17:39:06-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2012-08-09 08:05:32-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create 2nd RW on a fileserver\n\nIf an RW is already present on disk on the target server (any partition),\n'vos convertROtoRW' will still convert the RO, creating a second RW on the server.\nDetect this and refuse to convert the RO by returning EXDEV (invalid cross-device link).\n\nChange-Id: Ide15a7c39f2a975fd8597e497094b6a67b448e4f\nReviewed-on: http://gerrit.openafs.org/7934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-08-02 18:37:05-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2012-05-21 10:08:48-07:00", "committer_id": 144944, "message": "vos: volume lock not released on convertROtoRW error\n\nIf an error occurs during convertROtoRW, the volume lock may\nnot be released.\n\nChange-Id: Ic03af00676de836cade4e39a743b234a0dc9b6cf\nReviewed-on: http://gerrit.openafs.org/7389\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-05-08 15:03:46-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2012-05-21 10:08:30-07:00", "committer_id": 144944, "message": "vos: convertROtoRW does not respect volume lock\n\nvos convertROtoRW was not checking the return code from\nubik_VL_SetLock().\n\nChange-Id: I651c543f9a0070a9d34d9cca7583437e50e95dc8\nReviewed-on: http://gerrit.openafs.org/7388\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-05-08 14:45:16-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2012-05-16 05:40:49-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create two RW volumes\n\nIf the RW volume is listed after the RO convert target in the VLDB,\nthe code failed to detect that an RW is already present and would\ncreate a second RW volume.\n\nChange-Id: Ia77004214c4d1b18699b5527bc1fc928e8e1143d\nReviewed-on: http://gerrit.openafs.org/7385\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-05-08 10:01:12-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2012-05-12 06:33:15-07:00", "committer_id": 144944, "message": "vos: convertROtoRW misc error reporting problems\n\nFixes a few inconsistencies and bugs in some error messages.\n\nChange-Id: Ic4971c4cc3a3aa3623ee0f13161fd7793d3acb19\nReviewed-on: http://gerrit.openafs.org/7387\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-05-08 12:38:38-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 18838899, "repo_owner_id": 1105420, "commit_at": "2012-05-11 17:19:11-07:00", "committer_id": 144944, "message": "DOC: vos convertROtoRW security requirements\n\nThey were copied from another command; corrected them.\n\nChange-Id: Ic77f1a91520ec4147e42864438d98942f6a7effc\nReviewed-on: http://gerrit.openafs.org/7305\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Ken Dreyer <ktdreyer@ktdreyer.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "clone of openafs master with all what is needed to have AFS/OSD", "generate_at": "2012-05-02 13:55:16-04:00", "author_id": 7241786, "repo_name": "hwr/openafs"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2015-03-03 23:18:35-05:00", "committer_id": 206466, "message": "pioctl.c: restore required result variable\n\nCommit b9fb9c62a6779aa997259ddf2a83a90b08e04d5f refactored lpioctl()\nso that LINUX would have its own implementation. This also simplified\nthe other lpioctl() implementations by removing superfluous variable\n'rval'.\n\nUnfortunately, 'rval' was actually required for both DARWIN and SUN511.\nOn both of these platforms, the address of 'errcode' is passed\nto the respective ioctl_*() routine so its value may be passed back\nto lpioctl().   Therefore, 'errcode' must not also be used for the\nreturn value from these functions;  doing so results in the return\nvalue from the function overwriting the intended value of 'errcode' upon\nreturn to lpioctl().\n\nIn the case of Solaris 11, ioctl_sun_afs_syscall() always returns zero\n(as long as the ioctl device 'dev/afs' opened successfully).\nSo 'errcode' was always being set to zero, even if the pioctl had\nactually failed.  For example, without this fix, 'fs listcells'\nloops forever on Solaris 11, listing an infinite number of \"cells\",\nbecause it will never \"see\" the EDOM that informs it of the last defined\ncell.\n\nPartially revert b9fb9c62a6779aa997259ddf2a83a90b08e04d5f by restoring\nthe 'rval' variable and logic for DARWIN and SUN511.\n\nChange-Id: I4407af29d54813689cf8ccf2517bb2df4dd8eb25\nReviewed-on: http://gerrit.openafs.org/11734\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2015-02-09 18:16:16-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2015-01-04 21:47:35-05:00", "committer_id": 206466, "message": "fssync-debug: close test connection\n\nA valid fssync-debug query <volid> command issued against\na DAFS fileserver will produce the following error messages in FileLog:\n\n\tSYNC_getCom:  error receiving command\n\tFSYNC_com:  read failed; dropping connection (cnt=1)\n\nRoutine dafs_prolog() issues a tentative FSYNC_VOL_LISTVOLUMES operation\nto test for the presence of a DAFS fileserver.  If DAFS is detected,\nwe then call dafssync-debug for the original requested operation.\nHowever, the FSYNC connection for the tentative LISTVOLUMES operation\nis never closed. This results in the errors when the command completes.\n\nClose the test connection.\n\nChange-Id: I3c987289408407ba38cd184b7518e72ee1ae9cfc\nReviewed-on: http://gerrit.openafs.org/10476\nReviewed-by: Daria Brashear <shadow@your-file-system.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2013-11-20 15:05:21-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2014-12-03 01:10:33-05:00", "committer_id": 206466, "message": "kauth: fix klog principal name parsing\n\nIf a principal name is specified to the klog command, it is not\ncorrectly passed in the pw structure.  This in turn causes\nuninitialized storage to be passed to ka_UserAuthenticateGeneral.\nThis may either lead to a segmentation fault in klog, or cause\ngarbage to be passed to the kaserver, leading to garbage in some\nlog and audit messages.  In all cases it is impossible to authenticate\nto kaserver with a specified principal name.  However, klog\nstill works correctly when no principal name is specified.\n\nThis was introduced by commit 68ce3aa814a7e3085242e705f013f05ed5da2d5c\nwhich removed lclpw to eliminate a clang warning.  However, the clang\nwarning was misleading in this case, as lclpw was actually used\n(confusingly) to indirectly update the pw structure.\n\nInstead of reverting this commit, just update pw->pwname directly.\n\nChange-Id: I565360c6e2f970637422e8b01998d3fc29874ec4\nReviewed-on: http://gerrit.openafs.org/11145\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2014-05-13 19:18:57-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2014-10-29 17:30:27-04:00", "committer_id": 144944, "message": "viced: remove obsolete comment about alignment\n\nAlignment may have been historically relevant, but is no longer.\nRemove the comment.\n\nAlso remove the unneeded 'dummy' field which does not provide\npadding for a useful alignment.\n\nChange-Id: I447fb73c379e6f86facd955a29ffd80e8929ceff\nReviewed-on: http://gerrit.openafs.org/11289\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-06-12 14:20:24-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2014-08-13 10:01:45-04:00", "committer_id": 206466, "message": "opr: opr_AssertionFailed undefined in kernel module\n\nThe opr_Assert in opr_rbtree_remove is incompletely defined;\nthe opr_Assert macro is defined in opr.h, but the definition\nfor the opr_AssertionFailed routine it invokes is not included.\nThis allows the kernel module to build successfully even though\nit retains a hidden undefined reference for opr_AssertionFailed.\n\nHowever, the logic in obr_rbtree_remove ensures that this\nparticular opr_Assert can never fail - it is superfluous.\nSome compilers (e.g. gcc for Linux AFS kernel module\nbuilds) are able to recognize this and optimize it out.  Others\n(e.g. Solaris 5.12) do not, and when this happens the OpenAFS\nbuild appears to succeed but the kernel module will fail to load\ndue to the undefined symbol.\n\nRemove the superfluous opr_Assert.\n\nThis partially reverts commit 9f8b765bbdbb8913fcadbde8d3362039e9dc8e61.\n\nChange-Id: I4ed2b1873c434e41dce0f2e474926bf8b449b819\nReviewed-on: http://gerrit.openafs.org/11296\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2014-06-06 19:27:04-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2014-08-06 10:29:36-04:00", "committer_id": 144944, "message": "afs: remove cruft from Solaris afs_freevfs\n\nRemove some unused variables left behind in a previous\nrefactor of flushing vcaches during afs_shutdown\n(commit 80fe111f0044aa7a67215ad92210dc72cb7eb2c0).\n\nChange-Id: Ie0a23cb08fc2946f1c400b8ce8e15ef3dc22ec20\nReviewed-on: http://gerrit.openafs.org/11310\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-06-29 16:27:37-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2014-06-05 07:20:56-04:00", "committer_id": 144944, "message": "afs: maintain afs_users buckets in sorted order\n\nModify afs_GetUser() to insert a new unixuser into an afs_users\nhash bucket in sorted order, by uid/PAG.  This is in support of\nother small optimizations in future commits.\n\nChange-Id: I68c51ab38733575290aa0c8aa2a306168c5483c0\nReviewed-on: http://gerrit.openafs.org/11071\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-04-07 18:56:26-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2014-06-05 07:20:40-04:00", "committer_id": 144944, "message": "afs: only reset access caches for the matching cell\n\nWhen an AFS user's tokens change (unlog, aklog) or expire,\nafs_ResetAccessCache() is called to reset all the access caches\nfor that uid/PAG.\n\nHowever, a user/PAG may have tokens for multiple cells, and they\nmay expire or be set/reset at different times.  Therefore, it is\nincorrect to assume that all access caches for a uid/PAG should\nbe discarded when only one cell's tokens have changed.\n\nModify afs_ResetAccessCache() to acccept a new argument 'cell',\nand only reset the access caches for a uid/PAG if the vcache\nresides in the specified cell.  If the caller really wants to\nreset all a user's access caches, specify cell=-1.\n\nFor cache managers that are running with multiple PAGs and multiple\ncells, this should improve performance because 1) it avoids\nscanning access caches chains for vcaches that are not part of the\ncurrent cell and 2) it avoids deleting access caches that may still\ngood, thus preventing unnecessary FetchStatus calls.\n\nChange-Id: Id4c138dab45fd48265a4029880a5d57947e67a52\nReviewed-on: http://gerrit.openafs.org/11070\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-04-03 16:37:51-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2014-02-05 06:47:41-08:00", "committer_id": 144944, "message": "vos: move convertROtoRW core logic to vsprocs\n\nCreate new vsprocs routine UV_ConvertRO in preparation for adding\nnew function to vos convertROtoRW.\n\nChange-Id: Ic66ecbf7cacb277891bec9f8783040995ce6ce17\nReviewed-on: http://gerrit.openafs.org/9277\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-02-15 16:58:16-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-12-18 14:43:04-08:00", "committer_id": 206466, "message": "viced: remove dead code CheckHost()\n\nRemove CheckHost().\n\nChange-Id: I618066d28ef64fdfe94d5ab08ef89adb08a99fd6\nReviewed-on: http://gerrit.openafs.org/10580\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2013-12-11 17:56:47-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-10-26 06:00:44-07:00", "committer_id": 144944, "message": "auth: prevent uninitialized key list in AFS config\n\n_afsconf_OpenInternal() may exit early for a number of reasons\nbefore properly initalizing afsconf_dir->listKeys.\nThis leads to a crash when _afsconf_CloseInternal() attempts\nto clean up listKeys.\n\nPrevent this situation by calling afsconf_InitKeys() before any\npossible exit from _afsconf_OpenInternal().\n\nChange-Id: I6911427817a2518a576c00a7ea56351f9fb4fd19\nReviewed-on: http://gerrit.openafs.org/10323\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-10-03 21:42:10-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-08-18 08:38:34-07:00", "committer_id": 144944, "message": "volser: repair volserver -udpsize and -sleep options\n\ncommit cd3492d0635708f141dbb9230471434268ef2188 accidentally\nbroke the parsing of the volserver -udpsize and -sleep options.\n\nChange-Id: Ia900e4d8fda1b4d5759b46932a4b62bf5591707b\nReviewed-on: http://gerrit.openafs.org/10088\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Marc Dionne <marc.c.dionne@gmail.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-07-16 17:27:05-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-07-12 10:36:09-07:00", "committer_id": 144944, "message": "vos: incorrectly defined alias for -cell parm\n\nCommit 5d42398298ad4af91a08a08ce607754f644b37dc specified\nan incorrect offset for the -c alias for the -cell common\nparameter.\n\nChange-Id: I5a3bbe9ceb8a9fd4c21970f4ef0c64d77e9cdea4\nReviewed-on: http://gerrit.openafs.org/10021\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2013-06-26 11:18:01-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-03-26 07:48:18-07:00", "committer_id": 144944, "message": "dafs: prevent corruption in large fsstate.dat files\n\nIf while writing to the fsstate.dat file, it exceeds the current\nsize of the file (multiples of FS_STATE_INIT_FILESIZE (8MiB)),\nwe call fs_stateResizeFile.  This un-mmaps, truncates, and\nre-mmaps the file.  Unfortunately, fs_stateMapFile() resets the\nstate->mmap.offset and .cursor, so any writes in flight over\nthe resize will overwrite the first bytes of the file (and leave\nzeros in the file where the data should have been written).\n\nUpon return from the write that caused a file resize, the offset\nis eventually corrected and the state dump continues with a\nsilent failure.  Eventually the state dump completes and the\nfile header is rewritten; this may conceal some or all of\nthe overwrite damage at offset 0.  However, any zeros near the 8MiB\noffset (and its multiples) remain as corruption.\n\nAdd a flag to fs_stateMapFile() to allow the caller to specify if\nthe offset and cursor should be preserved.  Modify fs_stateResizeFile()\nto use this capability.\n\ntesting note: temporarily reduced FS_STATE_INIT_FILESIZE to 256 bytes\nduring testing in order to make the problem easier to reproduce.\nThis problem would normally occur only on relatively large/active\nDAFS fileservers.\n\nChange-Id: I9b6c57ef7727837ae7cfc00d02192983355dad2b\nReviewed-on: http://gerrit.openafs.org/9599\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-03-12 22:13:20-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-03-25 11:47:51-07:00", "committer_id": 144944, "message": "salvager: prevent assertion during -orphans attach\n\nImprove JudgeEntry() detection of orphaned directories to\nprevent unintentional deletion of their '.' and '..' entries.\nThis in turn prevents a later assert (opr_Verify) when we try to\ndelete and re-add '..' in order to attach the orphan.\n\nIn JudgeEntry(), 2 sources of information about a\ndirectory entry are compared for consistency:\n - vnodeEssence (unique) from its vnode index entry\n - name, vnodeNumber and unique from its dir blob entry\n\nA directory entry may be ignored, deleted, or repaired/replaced,\nbased upon the results of these and other tests (e.g. dirOprhaned).\n\nThe '.' and '..' entries are treated as special cases because\nwe do not want to delete them at this point if this directory\nis orphaned.  However, the current test for orphanhood\n(vnodeEssence->unique == 0) is not sufficient; it could be\nzero for other reasons.  This commit now uses the dirOrphaned\nflag to test for this.\n\nHowever, we are still interested in doing the right thing\nfor '.' and '..' entries with vnodeEssence->unique == 0.\nThis may indicate that the dir blob entry is pointing at the\nwrong vnode, and that vnode has unique==0.  The current code\nincorrectly ignores (returns 0) this case.  This commit now\nnow falls through to the repair/replace code so that we can\nfind the correct vnode for this entry.\n\nThe current code assumes that the 'vnodeEssence == 0 &&\n!dirOrphaned' case doesn't exist.\n\nThanks to Andrew Deason for his assistance.\n\nChange-Id: Id7c466fcc0f031b8fccb52dc51493eeed040cf95\nReviewed-on: http://gerrit.openafs.org/9104\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-01-25 18:47:49-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-03-13 09:49:25-07:00", "committer_id": 144944, "message": "vos: noise messages when attempting to delete non-existent volume\n\nWith vos refactor commit f4e73067cdef990262c69c38ac98761620a63f25,\nsome formerly conditional volume deletes are now unconditional.\nThis regresses 'vos move' output with harmless \"error\" messages\nwhen AFSVolTransCreate() returns VNOVOL:\n  \"Failed to start transaction on <volume>\"\n  \"Volume not attached, does not exist, or not online\"\n\nModify DoVolDelete() to return early (and silently) with VNOVOL\nin this case, allowing the caller to handle this appropriately.\n\nChange-Id: I21a72e38f330335adf97ac50a7ac7d0fb97c1a9c\nReviewed-on: http://gerrit.openafs.org/9596\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-03-07 09:34:55-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-02-26 14:04:56-08:00", "committer_id": 206466, "message": "vos: Unrecognized or ambiguous switch '-c'\n\nThe documented abbreviation '-c' for '-cell' no longer works since\nthe -config option was added.  Add a parm alias '-c' to restore\ncompatibility with previous syntax.\n\nChange-Id: Ie98e470d204ea2186a95668bba2581cf3e88f729\nReviewed-on: http://gerrit.openafs.org/9276\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2013-02-26 09:31:43-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-02-15 15:24:59-08:00", "committer_id": 144944, "message": "salvager: incorrect comment\n\nThe comment for the code handling the -showsuid option was incorrect.\n\nChange-Id: I0a63211cf5dd8a3b2636d4e4a2cc45a55c3bf62a\nReviewed-on: http://gerrit.openafs.org/9109\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2013-02-14 10:51:34-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-02-05 03:48:42-08:00", "committer_id": 144944, "message": "dafs: preattach should wait for exclusive states\n\nIn rare circumstances an FSYNC_VOL_ON operation may fail silently,\nleaving the volume in its previous state.  The only clue is a FileLog\nmessage \"volume <nnnn> not in quiescent state\".\n\nThis is caused by a race condition in the volume package: an\nFSYNC_VOL_ON operation is attempting to preattach a volume\n(in VPreAttachVolumeByVp_r()) at the same time a fileserver RPC\n(e.g. FetchStatus) is detaching the volume (in VReleaseVolumeHandles_r())\nat the conclusion of attach2() logic.\n\nThe fix calls VWaitExclusiveState_r() before calling\nVPreAttachVolumeByVp_r().\n\nChange-Id: Ib66859381d29311fda3e08984dcb740eadafb340\nReviewed-on: http://gerrit.openafs.org/8814\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2012-12-21 17:56:14-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2013-01-04 06:52:00-08:00", "committer_id": 144944, "message": "vol: correct old conditional for IH_CONDSYNC\n\nTwo places in the vol package performed IH_CONDSYNC(vp->linkHandle)\nonly if AFS_NT40_ENV.  This was correct when the namei implementation\nwas windows only; however, this ifdef was apparently overlooked\nwhen namei was implemented for UNIX.\n\nChange-Id: I0cbe2c5c0a65ece0485b8c2d5a5f92eeb53725fe\nReviewed-on: http://gerrit.openafs.org/8815\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-12-21 18:26:18-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2012-09-05 09:56:26-07:00", "committer_id": 144944, "message": "vos: convertROtoRW - prevent VLDB corruption\n\nvos convertROtoRW incorrectly marks the first VLDB entry as the\nnew RW if the converted RO is not in the VLDB.  Correct this\nby creating a new valid RW site in the VLDB entry.\n\nChange-Id: I683ac10db90c2c41717c11c0d86eadc81a935e52\nReviewed-on: http://gerrit.openafs.org/8037\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-27 15:11:32-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2012-09-04 12:46:24-07:00", "committer_id": 144944, "message": "vos: convertROtoRW incorrect warning when RO not in VLDB\n\nvos convertROtoRW will issue an incorrect warning about a partition\nmismatch if the RO to convert is not in the VLDB.  Only check the\npartition if the RO is in the VLDB.\n\nChange-Id: Ib2726bc5bf6697898ad26dc1d817143da3286ba3\nReviewed-on: http://gerrit.openafs.org/8036\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-09-04 09:06:44-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2012-08-22 12:25:06-07:00", "committer_id": 144944, "message": "vos: convertROtoRW susceptible to VLDB changes during override prompt\n\nvos convertROtoRW obtains a VLDB entry, then peforms some setup logic\n(including a possible user prompt) before obtaining a volume lock.\nThis exposes the code to possible time-of-check/time-of-use issues.\nAfter obtaining the volume lock, get a second copy of the VLDB entry\nand compare it to the first copy; if it has changed, fail the conversion\nwith an error message asking the user to re-issue the vos convertROtoRW\ncommand.\n\nChange-Id: I9c1a634cea2e22188869d54b00b7831aed12b1cd\nReviewed-on: http://gerrit.openafs.org/8008\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-20 17:39:06-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2012-08-09 08:05:32-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create 2nd RW on a fileserver\n\nIf an RW is already present on disk on the target server (any partition),\n'vos convertROtoRW' will still convert the RO, creating a second RW on the server.\nDetect this and refuse to convert the RO by returning EXDEV (invalid cross-device link).\n\nChange-Id: Ide15a7c39f2a975fd8597e497094b6a67b448e4f\nReviewed-on: http://gerrit.openafs.org/7934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-02 18:37:05-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2012-05-21 10:08:48-07:00", "committer_id": 144944, "message": "vos: volume lock not released on convertROtoRW error\n\nIf an error occurs during convertROtoRW, the volume lock may\nnot be released.\n\nChange-Id: Ic03af00676de836cade4e39a743b234a0dc9b6cf\nReviewed-on: http://gerrit.openafs.org/7389\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 15:03:46-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2012-05-21 10:08:30-07:00", "committer_id": 144944, "message": "vos: convertROtoRW does not respect volume lock\n\nvos convertROtoRW was not checking the return code from\nubik_VL_SetLock().\n\nChange-Id: I651c543f9a0070a9d34d9cca7583437e50e95dc8\nReviewed-on: http://gerrit.openafs.org/7388\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 14:45:16-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2012-05-16 05:40:49-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create two RW volumes\n\nIf the RW volume is listed after the RO convert target in the VLDB,\nthe code failed to detect that an RW is already present and would\ncreate a second RW volume.\n\nChange-Id: Ia77004214c4d1b18699b5527bc1fc928e8e1143d\nReviewed-on: http://gerrit.openafs.org/7385\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 10:01:12-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2012-05-12 06:33:15-07:00", "committer_id": 144944, "message": "vos: convertROtoRW misc error reporting problems\n\nFixes a few inconsistencies and bugs in some error messages.\n\nChange-Id: Ic4971c4cc3a3aa3623ee0f13161fd7793d3acb19\nReviewed-on: http://gerrit.openafs.org/7387\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-05-08 12:38:38-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 36026932, "repo_owner_id": 1806297, "commit_at": "2012-05-11 17:19:11-07:00", "committer_id": 144944, "message": "DOC: vos convertROtoRW security requirements\n\nThey were copied from another command; corrected them.\n\nChange-Id: Ic77f1a91520ec4147e42864438d98942f6a7effc\nReviewed-on: http://gerrit.openafs.org/7305\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Ken Dreyer <ktdreyer@ktdreyer.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-02 13:55:16-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/29412"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2014-02-05 06:47:41-08:00", "committer_id": 144944, "message": "vos: move convertROtoRW core logic to vsprocs\n\nCreate new vsprocs routine UV_ConvertRO in preparation for adding\nnew function to vos convertROtoRW.\n\nChange-Id: Ic66ecbf7cacb277891bec9f8783040995ce6ce17\nReviewed-on: http://gerrit.openafs.org/9277\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-02-15 16:58:16-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-12-18 14:43:04-08:00", "committer_id": 206466, "message": "viced: remove dead code CheckHost()\n\nRemove CheckHost().\n\nChange-Id: I618066d28ef64fdfe94d5ab08ef89adb08a99fd6\nReviewed-on: http://gerrit.openafs.org/10580\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-12-11 17:56:47-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-10-26 06:00:44-07:00", "committer_id": 144944, "message": "auth: prevent uninitialized key list in AFS config\n\n_afsconf_OpenInternal() may exit early for a number of reasons\nbefore properly initalizing afsconf_dir->listKeys.\nThis leads to a crash when _afsconf_CloseInternal() attempts\nto clean up listKeys.\n\nPrevent this situation by calling afsconf_InitKeys() before any\npossible exit from _afsconf_OpenInternal().\n\nChange-Id: I6911427817a2518a576c00a7ea56351f9fb4fd19\nReviewed-on: http://gerrit.openafs.org/10323\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-10-03 21:42:10-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-08-18 08:38:34-07:00", "committer_id": 144944, "message": "volser: repair volserver -udpsize and -sleep options\n\ncommit cd3492d0635708f141dbb9230471434268ef2188 accidentally\nbroke the parsing of the volserver -udpsize and -sleep options.\n\nChange-Id: Ia900e4d8fda1b4d5759b46932a4b62bf5591707b\nReviewed-on: http://gerrit.openafs.org/10088\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Marc Dionne <marc.c.dionne@gmail.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-07-16 17:27:05-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-07-12 10:36:09-07:00", "committer_id": 144944, "message": "vos: incorrectly defined alias for -cell parm\n\nCommit 5d42398298ad4af91a08a08ce607754f644b37dc specified\nan incorrect offset for the -c alias for the -cell common\nparameter.\n\nChange-Id: I5a3bbe9ceb8a9fd4c21970f4ef0c64d77e9cdea4\nReviewed-on: http://gerrit.openafs.org/10021\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-06-26 11:18:01-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-03-26 07:48:18-07:00", "committer_id": 144944, "message": "dafs: prevent corruption in large fsstate.dat files\n\nIf while writing to the fsstate.dat file, it exceeds the current\nsize of the file (multiples of FS_STATE_INIT_FILESIZE (8MiB)),\nwe call fs_stateResizeFile.  This un-mmaps, truncates, and\nre-mmaps the file.  Unfortunately, fs_stateMapFile() resets the\nstate->mmap.offset and .cursor, so any writes in flight over\nthe resize will overwrite the first bytes of the file (and leave\nzeros in the file where the data should have been written).\n\nUpon return from the write that caused a file resize, the offset\nis eventually corrected and the state dump continues with a\nsilent failure.  Eventually the state dump completes and the\nfile header is rewritten; this may conceal some or all of\nthe overwrite damage at offset 0.  However, any zeros near the 8MiB\noffset (and its multiples) remain as corruption.\n\nAdd a flag to fs_stateMapFile() to allow the caller to specify if\nthe offset and cursor should be preserved.  Modify fs_stateResizeFile()\nto use this capability.\n\ntesting note: temporarily reduced FS_STATE_INIT_FILESIZE to 256 bytes\nduring testing in order to make the problem easier to reproduce.\nThis problem would normally occur only on relatively large/active\nDAFS fileservers.\n\nChange-Id: I9b6c57ef7727837ae7cfc00d02192983355dad2b\nReviewed-on: http://gerrit.openafs.org/9599\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-03-12 22:13:20-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-03-25 11:47:51-07:00", "committer_id": 144944, "message": "salvager: prevent assertion during -orphans attach\n\nImprove JudgeEntry() detection of orphaned directories to\nprevent unintentional deletion of their '.' and '..' entries.\nThis in turn prevents a later assert (opr_Verify) when we try to\ndelete and re-add '..' in order to attach the orphan.\n\nIn JudgeEntry(), 2 sources of information about a\ndirectory entry are compared for consistency:\n - vnodeEssence (unique) from its vnode index entry\n - name, vnodeNumber and unique from its dir blob entry\n\nA directory entry may be ignored, deleted, or repaired/replaced,\nbased upon the results of these and other tests (e.g. dirOprhaned).\n\nThe '.' and '..' entries are treated as special cases because\nwe do not want to delete them at this point if this directory\nis orphaned.  However, the current test for orphanhood\n(vnodeEssence->unique == 0) is not sufficient; it could be\nzero for other reasons.  This commit now uses the dirOrphaned\nflag to test for this.\n\nHowever, we are still interested in doing the right thing\nfor '.' and '..' entries with vnodeEssence->unique == 0.\nThis may indicate that the dir blob entry is pointing at the\nwrong vnode, and that vnode has unique==0.  The current code\nincorrectly ignores (returns 0) this case.  This commit now\nnow falls through to the repair/replace code so that we can\nfind the correct vnode for this entry.\n\nThe current code assumes that the 'vnodeEssence == 0 &&\n!dirOrphaned' case doesn't exist.\n\nThanks to Andrew Deason for his assistance.\n\nChange-Id: Id7c466fcc0f031b8fccb52dc51493eeed040cf95\nReviewed-on: http://gerrit.openafs.org/9104\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-01-25 18:47:49-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-03-13 09:49:25-07:00", "committer_id": 144944, "message": "vos: noise messages when attempting to delete non-existent volume\n\nWith vos refactor commit f4e73067cdef990262c69c38ac98761620a63f25,\nsome formerly conditional volume deletes are now unconditional.\nThis regresses 'vos move' output with harmless \"error\" messages\nwhen AFSVolTransCreate() returns VNOVOL:\n  \"Failed to start transaction on <volume>\"\n  \"Volume not attached, does not exist, or not online\"\n\nModify DoVolDelete() to return early (and silently) with VNOVOL\nin this case, allowing the caller to handle this appropriately.\n\nChange-Id: I21a72e38f330335adf97ac50a7ac7d0fb97c1a9c\nReviewed-on: http://gerrit.openafs.org/9596\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-03-07 09:34:55-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-02-26 14:04:56-08:00", "committer_id": 206466, "message": "vos: Unrecognized or ambiguous switch '-c'\n\nThe documented abbreviation '-c' for '-cell' no longer works since\nthe -config option was added.  Add a parm alias '-c' to restore\ncompatibility with previous syntax.\n\nChange-Id: Ie98e470d204ea2186a95668bba2581cf3e88f729\nReviewed-on: http://gerrit.openafs.org/9276\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-02-26 09:31:43-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-02-15 15:24:59-08:00", "committer_id": 144944, "message": "salvager: incorrect comment\n\nThe comment for the code handling the -showsuid option was incorrect.\n\nChange-Id: I0a63211cf5dd8a3b2636d4e4a2cc45a55c3bf62a\nReviewed-on: http://gerrit.openafs.org/9109\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-02-14 10:51:34-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-02-05 03:48:42-08:00", "committer_id": 144944, "message": "dafs: preattach should wait for exclusive states\n\nIn rare circumstances an FSYNC_VOL_ON operation may fail silently,\nleaving the volume in its previous state.  The only clue is a FileLog\nmessage \"volume <nnnn> not in quiescent state\".\n\nThis is caused by a race condition in the volume package: an\nFSYNC_VOL_ON operation is attempting to preattach a volume\n(in VPreAttachVolumeByVp_r()) at the same time a fileserver RPC\n(e.g. FetchStatus) is detaching the volume (in VReleaseVolumeHandles_r())\nat the conclusion of attach2() logic.\n\nThe fix calls VWaitExclusiveState_r() before calling\nVPreAttachVolumeByVp_r().\n\nChange-Id: Ib66859381d29311fda3e08984dcb740eadafb340\nReviewed-on: http://gerrit.openafs.org/8814\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-12-21 17:56:14-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2013-01-04 06:52:00-08:00", "committer_id": 144944, "message": "vol: correct old conditional for IH_CONDSYNC\n\nTwo places in the vol package performed IH_CONDSYNC(vp->linkHandle)\nonly if AFS_NT40_ENV.  This was correct when the namei implementation\nwas windows only; however, this ifdef was apparently overlooked\nwhen namei was implemented for UNIX.\n\nChange-Id: I0cbe2c5c0a65ece0485b8c2d5a5f92eeb53725fe\nReviewed-on: http://gerrit.openafs.org/8815\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-12-21 18:26:18-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2012-09-05 09:56:26-07:00", "committer_id": 144944, "message": "vos: convertROtoRW - prevent VLDB corruption\n\nvos convertROtoRW incorrectly marks the first VLDB entry as the\nnew RW if the converted RO is not in the VLDB.  Correct this\nby creating a new valid RW site in the VLDB entry.\n\nChange-Id: I683ac10db90c2c41717c11c0d86eadc81a935e52\nReviewed-on: http://gerrit.openafs.org/8037\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-08-27 15:11:32-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2012-09-04 12:46:24-07:00", "committer_id": 144944, "message": "vos: convertROtoRW incorrect warning when RO not in VLDB\n\nvos convertROtoRW will issue an incorrect warning about a partition\nmismatch if the RO to convert is not in the VLDB.  Only check the\npartition if the RO is in the VLDB.\n\nChange-Id: Ib2726bc5bf6697898ad26dc1d817143da3286ba3\nReviewed-on: http://gerrit.openafs.org/8036\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-09-04 09:06:44-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2012-08-22 12:25:06-07:00", "committer_id": 144944, "message": "vos: convertROtoRW susceptible to VLDB changes during override prompt\n\nvos convertROtoRW obtains a VLDB entry, then peforms some setup logic\n(including a possible user prompt) before obtaining a volume lock.\nThis exposes the code to possible time-of-check/time-of-use issues.\nAfter obtaining the volume lock, get a second copy of the VLDB entry\nand compare it to the first copy; if it has changed, fail the conversion\nwith an error message asking the user to re-issue the vos convertROtoRW\ncommand.\n\nChange-Id: I9c1a634cea2e22188869d54b00b7831aed12b1cd\nReviewed-on: http://gerrit.openafs.org/8008\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-08-20 17:39:06-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2012-08-09 08:05:32-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create 2nd RW on a fileserver\n\nIf an RW is already present on disk on the target server (any partition),\n'vos convertROtoRW' will still convert the RO, creating a second RW on the server.\nDetect this and refuse to convert the RO by returning EXDEV (invalid cross-device link).\n\nChange-Id: Ide15a7c39f2a975fd8597e497094b6a67b448e4f\nReviewed-on: http://gerrit.openafs.org/7934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-08-02 18:37:05-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2012-05-21 10:08:48-07:00", "committer_id": 144944, "message": "vos: volume lock not released on convertROtoRW error\n\nIf an error occurs during convertROtoRW, the volume lock may\nnot be released.\n\nChange-Id: Ic03af00676de836cade4e39a743b234a0dc9b6cf\nReviewed-on: http://gerrit.openafs.org/7389\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-05-08 15:03:46-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2012-05-21 10:08:30-07:00", "committer_id": 144944, "message": "vos: convertROtoRW does not respect volume lock\n\nvos convertROtoRW was not checking the return code from\nubik_VL_SetLock().\n\nChange-Id: I651c543f9a0070a9d34d9cca7583437e50e95dc8\nReviewed-on: http://gerrit.openafs.org/7388\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-05-08 14:45:16-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2012-05-16 05:40:49-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create two RW volumes\n\nIf the RW volume is listed after the RO convert target in the VLDB,\nthe code failed to detect that an RW is already present and would\ncreate a second RW volume.\n\nChange-Id: Ia77004214c4d1b18699b5527bc1fc928e8e1143d\nReviewed-on: http://gerrit.openafs.org/7385\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-05-08 10:01:12-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2012-05-12 06:33:15-07:00", "committer_id": 144944, "message": "vos: convertROtoRW misc error reporting problems\n\nFixes a few inconsistencies and bugs in some error messages.\n\nChange-Id: Ic4971c4cc3a3aa3623ee0f13161fd7793d3acb19\nReviewed-on: http://gerrit.openafs.org/7387\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-05-08 12:38:38-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2012-05-11 17:19:11-07:00", "committer_id": 144944, "message": "DOC: vos convertROtoRW security requirements\n\nThey were copied from another command; corrected them.\n\nChange-Id: Ic77f1a91520ec4147e42864438d98942f6a7effc\nReviewed-on: http://gerrit.openafs.org/7305\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Ken Dreyer <ktdreyer@ktdreyer.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2012-05-02 13:55:16-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2016-07-20 23:24:59-04:00", "committer_id": 1894506, "message": "SOLARIS: corrupted content of mmap'd files over 4GiB\n\nMany Solaris programs and utilities (notably mdb and cp) use mmap() in\ntheir implementation.  When AFS files exceeding 4GiB are mmap'd, the\ncontents of the file will be incorrectly mapped into memory. Starting at\n4GiB + 1, the first 4GiB will be repeated for the remainder of the file.\nIf the mmap'd file is written back to storage (AFS or otherwise), the\nnewly created file will also be corrupted.\n\nThis is due to a bug in the afs_map() routine that supports mmap() of\nAFS files on Solaris.  The segvn_crarg.offset passed to the Solaris\nvirtual memory APIs is incorrectly cast to u_int, causing it to wrap at\n4GiB.\n\nAlthough Solaris passes the offset from fop_map() to afs_map() as type\noffset_t, the destination segvn_crargs.offset is actually type\nu_offset_t.  Existing examples of other Solaris filesystems (e.g.\nzfs_map() ) cast the offset from offset_t to u_offset_t when assigning to\nsegvn_crargs.offset.  If it's good enough for ZFS, it's good enough for\nAFS.\n\nCorrectly cast the offset to u_offset_t.\n\nThanks to Robert Milkowski for the report and diagnosis.\n\nChange-Id: Id25363255ec011f2ad7e003ca3e4a1385bebff7e\nReviewed-on: https://gerrit.openafs.org/12292\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2016-05-27 16:44:17-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2016-07-20 19:39:11-04:00", "committer_id": 1894506, "message": "SOLARIS: support mmap() over 4GiB\n\nWhen mmap() is issued for exactly 4GiB of a large AFS-resident file,\nmmap() fails with ENOMEM.  This is because the AFS code is handling the\nrequested length as u_int instead of size_t, resulting in a 0 being\npassed back to the caller.\n\nWhen mmap() is issued for non-multiples of 4GiB, the subsequent mapping\nwill not contain all the requested pages, and for the same reason - the\nmapped size has been truncated to 32 bits.  This results in SIGSEGV when\naccessing the non-mapped page(s).\n\nFix the signature of afs_map() to specify the correct type for the length.\n\nThanks to Robert Milkowski for the report and diagnosis.\n\nChange-Id: I8a9f0cb04ff9b80de5516e14d0679b06ef0b3f9a\nReviewed-on: https://gerrit.openafs.org/12291\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nTested-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2016-05-26 16:53:47-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2016-07-18 17:38:02-04:00", "committer_id": 1894506, "message": "afs: incorrect comments for afs_ClearStatus\n\nThe brief description was identical to the one for afs_Analyze.\n\nUpdate it to accurately describe afs_ClearStatus.\n\nChange-Id: I70ceca41342c1b47950c35f567f8ae5a2566f925\nReviewed-on: https://gerrit.openafs.org/12005\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2015-06-18 15:32:36-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2016-07-05 21:36:02-04:00", "committer_id": 1894506, "message": "afs: document missing afs_Analyze parm\n\nrxconn was missing from the comments; add it.\n\nChange-Id: I8c0cf212ca2952d3a23c3bb5db1857dfd9a8f41e\nReviewed-on: https://gerrit.openafs.org/12004\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2015-06-18 15:54:28-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2016-05-13 00:03:08-04:00", "committer_id": 1894506, "message": "salvageserver: unable to write child log: out of memory\n\nChanges to salvageserver logging in commit\n24fed351fd13b38bfaf9f278c914a47782dbf670\nintroduced a new bug in SalvageLogCleanup; the test for calloc() failure\nwas inadvertently inverted.\n\nFix the sense of the test.\n\nChange-Id: Id0ee4ac3e60d7285163a9ab0b32bd7d48e570ac0\nReviewed-on: https://gerrit.openafs.org/12284\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2016-05-12 22:23:36-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2016-05-10 23:42:22-04:00", "committer_id": 1894506, "message": "salvageserver: segfault in DoSalvageVolume\n\nA typo in the recent logging changes for salvageserver\nad455347bc99d1bd499535995958b5f77c2388ff\ncaused a bad address to be passed to memset.\n\nCorrectly memset the log options as intended.\n\nChange-Id: Ifef46defcc6da56df4e58f8ed9029717a77c0b39\nReviewed-on: https://gerrit.openafs.org/12282\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2016-05-10 22:51:38-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2016-02-22 23:54:25-05:00", "committer_id": 1894506, "message": "DAFS: large volume support - fileserver crash after \"addled bitmap\"\n\nAny DAFS fileserver operation that allocates a new vnode but fails\nto update the vnode index will crash:\n\n\"Fatal Rx error: assertion failed: --vp->nWaiters >= 0,\n\t\t\t\tfile: ../vol/volume.c, line: nnnn\"\n\nNote: This crash was exposed by other bugs (to be addressed in future\ncommits) in OpenAFS large volume support.  However, there may\nbe other failure paths (unrelated to large volumes) that expose\nthis error as well.\n\nWhen VAllocVnode() must allocate a new vnode but fails while\nupdating the vnode index file (e.g. an \"addled bitmap\" due to other\nbugs in working with a vnode index larger than 2^31 bytes), it branches\nto common recovery logic at label error_encountered:.\n\nPart of this recovery is to call VFreeBitmapEntry_r().  Commit\n08ffe3e81d875b58ae5fe4c5733845d5132913a0 added a VOL_FREE_BITMAP_WAIT\nflag to VFreeBitmapEntry() in order to prevent races with VAllocBitmapEntry().\nIf the caller specifies VOL_FREE_BITMAP_WAIT, VFreeBitmapEntry_r will\ncall VCreateReservation_r() and VWaitExclusiveState_r().  However, the\nexit from VFreeBitmapEntry_r() calls VCancelReservation_r() unconditionally.\nThis works correctly with the majority of callers to VFreeBitmapEntry_r,\nwhich do specify the VOL_FREE_BITMAP_WAIT flag.\n\nHowever, the VAllocVnode() error_encountered logic must specify 0 for\nthis flag because the thread is already in an exclusive state\n(VOL_STATE_VNODE_ALLOC).  This correctly causes VFreeBitmapEntry_r() to\nforgo both the reservation and wait-for-exclusive-state.  However, before\nexit it erroneously calls VCancelReservation_r().  We now have unbalanced\nreservations (nWaiters); this causes an assert when the VAllocVnode()\nerror_encountered recovery code later calls VCancelReservation_r()\nfor what it believes is its own prior reservation.\n\nModify VFreeBitmapEntry_r() to make its final VCancelReservation_r()\nconditional on flag VOL_FREE_BITMAP_WAIT.\n\nChange-Id: Id6cf6b1279b11e6dfc4704bba5739912f663beca\nReviewed-on: http://gerrit.openafs.org/11983\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@auristor.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2014-03-27 06:36:59-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2016-02-22 23:23:38-05:00", "committer_id": 1894506, "message": "bozo: allow start of fs and dafs bnodes with options\n\nfs_create() and dafs_create() issue stat() to verify\nthe existence of each executable specified in the bnode.\nHowever, commit fda2bc874751ca479365dc6389c0eebb41a0bda1\ninadvertently removed the code that stripped any command\narguments before the stat().  Therefore, any bnode that\nspecifies arguments (e.g. /usr/afs/bin/dafileserver -d 5),\ncauses the stat() to fail and the bnode will not start.\n\nRename function AppendExecutableExtension() to a less\n\"window-ish\" name: PathToExecutable().\n\nModify the Windows version of PathToExecutable()\nto properly strip arguments.\n\nReimplement the Unix macro as function PathToExecutable()\nthat properly strips arguments.\n\nChange-Id: I04f7ce2afb8211bd12b9063db1335738bff1cc1e\nReviewed-on: http://gerrit.openafs.org/11934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2015-07-18 01:12:51-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2016-02-17 14:06:42-05:00", "committer_id": 1894506, "message": "viced: incorrect FID audit of BulkStatus and InlineBulkStatus\n\nThe audit code for object AUD_FIDS is off by one - we list the\nfirst FID twice and skip the last FID.\n\nRepair so all FIDs are properly audited.\n\nChange-Id: I99f4687e25031eb26ccd7e07b732217b098005de\nReviewed-on: http://gerrit.openafs.org/12191\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams <3chas3@gmail.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2016-02-16 14:55:03-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2015-12-21 18:14:35-05:00", "committer_id": 1894506, "message": "afs: incorrect types for AFSDB IPv4 addresses\n\nDNS lookup results were being handled with int types.\n\nFortunately, this seems to be harmless, due to use of\nmemcpy when the types don't match, and assignment only\nwhen both sides were int.\n\nHowever, to avoid any future unpleasantness, change\nthem to afs_uint32.\n\nNo functional change should be incurred.\n\nChange-Id: I31aeabb4ae3194a00b29a1fa767d05af167b4e4f\nReviewed-on: http://gerrit.openafs.org/12117\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams <3chas3@gmail.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2015-11-23 21:03:57-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2015-12-15 21:39:01-05:00", "committer_id": 1894506, "message": "afs: pioctl kernel memory overrun\n\nCVE-2015-8312:\nAny pioctl with an input buffer size (ViceIoctl->in_size)\nexactly equal to AFS_LRALLOCSIZE (4096 bytes) will cause\na one-byte overwrite of its kernel memory working buffer.\nThis may crash the operating system or cause other\nundefined behavior.\n\nThe attacking pioctl must be a valid AFS pioctl code.\nHowever, it need not specify valid arguments (in the ViceIoctl),\nsince only rudimentary checking is done in afs_HandlePioctl.\nMost argument validation occurs later in the individual\npioctl handlers.\n\nNor does the issuer need to be authenticated or authorized\nin any way, since authorization checks also occur much later,\nin the individual pioctl handlers.  An unauthorized user\nmay therefore trigger the overrun by either crafting his\nown malicious pioctl, or by issuing a privileged\ncommand, e.g. 'fs newalias', with appropriately sized but\notherwise arbitrary arguments.  In the latter case, the\nattacker will see the expected error message:\n \"fs: You do not have the required rights to do this operation\"\nbut in either case the damage has been done.\n\nPioctls are not logged or audited in any way (except those\nthat cause loggable or auditable events as side effects).\n\nroot cause:\nafs_HandlePioctli() calls afs_pd_alloc() to allocate two\ntwo afs_pdata structs, one for input and one for output.\nThe memory for these buffers is based on the requested\nsize, plus at least one extra byte for the null terminator\nto be set later:\n  requested size\tallocated\n  =================\t=================================\n  > AFS_LRALLOCSIZ\tosi_Alloc(size+1)\n  <= AFS_LRALLOCSIZ\tafs_AllocLargeSize(AFS_LRALLOCSIZ)\n\nafs_HandlePioctl then adds a null terminator to each buffer,\none byte past the requested size.  This is safe in all cases\nexcept one: if the requested in_size was _exactly_\nAFS_LRALLOCSIZ (4096 bytes), this null is one byte beyond\nthe allocated storage, zeroing a byte of kernel memory.\n\nCommit 6260cbecd0795c4795341bdcf98671de6b9a43fb introduced\nthe null terminators and they were correct at that time.\nBut the commit message warns:\n \"note that this works because PIGGYSIZE is always less than\n  AFS_LRALLOCSIZ\"\n\nCommit f8ed1111d76bbf36a466036ff74b44e1425be8bd introduced\nthe bug by increasing the maximum size of the buffers but\nfailing to account correctly for the null terminator in\nthe case of input buffer size == AFS_LRALLOCSIZ.\n\nCommit 592a99d6e693bc640e2bdfc2e7e5243fcedc8f93 (master\nversion of one of the fixes in the recent 1.6.13 security\nrelease) is the fix that drew my attention to this new\nbug.  Ironically, 592a99 (combined with this commit), will\nmake it possible to eliminate the \"offending\" null termination\nline altogether since it will now be performed automatically by\nafs_pd_alloc().\n\n[kaduk@mit.edu: adjust commit message for CVE number assignment,\nreduce unneeded churn in the diff.]\n\nChange-Id: I1a536b3a53ec4b6721fbd39a915207da4358720c", "repo_description": "Joe's OpenAFS repo", "generate_at": "2015-08-07 11:56:16-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2015-11-18 22:10:05-05:00", "committer_id": 1894506, "message": "vlserver: VL_GetEntryByName* requests undercounted\n\nCommit a14e791541bf19c6c377e68bc2f978fba34f94b1\nrefactored and corrected the counting of requests and aborts.\nHowever, it inadvertently introduced a new undercount for\nVL_GetEntryByName* requests, counting them only if\nNameIsId(volname), e.g. volname=\"536870911\".\n\nEnsure that the normal case of a non-\"numeric\" volname is\nalso counted.\n\nDiscovered during review of pullup to 1.6.x.\n\nChange-Id: Ic5dbc1a5871d0e0ff184dc4f3b11e92166c92f65\nReviewed-on: http://gerrit.openafs.org/12106\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2015-11-18 15:09:37-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2015-07-29 18:25:24-04:00", "committer_id": 144944, "message": "Solaris: setpag should verify that ngroups will not overflow\n\nOur ngroups management (since PAGs are still encoded as 2 groups) needs\nto ensure that we do not overflow what we are prepared to handle,\nand do not panic due to misheld mutexes if we have to return an error\nwhen handling it.\n\nFIXES 131878 (CVE-2015-3286)\n\nChange-Id: I044d5e7d3161de815b3c2dace9c211fbb4b51ffa", "repo_description": "Joe's OpenAFS repo", "generate_at": "2015-07-08 14:28:50-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2015-03-03 23:18:35-05:00", "committer_id": 206466, "message": "pioctl.c: restore required result variable\n\nCommit b9fb9c62a6779aa997259ddf2a83a90b08e04d5f refactored lpioctl()\nso that LINUX would have its own implementation. This also simplified\nthe other lpioctl() implementations by removing superfluous variable\n'rval'.\n\nUnfortunately, 'rval' was actually required for both DARWIN and SUN511.\nOn both of these platforms, the address of 'errcode' is passed\nto the respective ioctl_*() routine so its value may be passed back\nto lpioctl().   Therefore, 'errcode' must not also be used for the\nreturn value from these functions;  doing so results in the return\nvalue from the function overwriting the intended value of 'errcode' upon\nreturn to lpioctl().\n\nIn the case of Solaris 11, ioctl_sun_afs_syscall() always returns zero\n(as long as the ioctl device 'dev/afs' opened successfully).\nSo 'errcode' was always being set to zero, even if the pioctl had\nactually failed.  For example, without this fix, 'fs listcells'\nloops forever on Solaris 11, listing an infinite number of \"cells\",\nbecause it will never \"see\" the EDOM that informs it of the last defined\ncell.\n\nPartially revert b9fb9c62a6779aa997259ddf2a83a90b08e04d5f by restoring\nthe 'rval' variable and logic for DARWIN and SUN511.\n\nChange-Id: I4407af29d54813689cf8ccf2517bb2df4dd8eb25\nReviewed-on: http://gerrit.openafs.org/11734\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2015-02-09 18:16:16-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2015-01-04 21:47:35-05:00", "committer_id": 206466, "message": "fssync-debug: close test connection\n\nA valid fssync-debug query <volid> command issued against\na DAFS fileserver will produce the following error messages in FileLog:\n\n\tSYNC_getCom:  error receiving command\n\tFSYNC_com:  read failed; dropping connection (cnt=1)\n\nRoutine dafs_prolog() issues a tentative FSYNC_VOL_LISTVOLUMES operation\nto test for the presence of a DAFS fileserver.  If DAFS is detected,\nwe then call dafssync-debug for the original requested operation.\nHowever, the FSYNC connection for the tentative LISTVOLUMES operation\nis never closed. This results in the errors when the command completes.\n\nClose the test connection.\n\nChange-Id: I3c987289408407ba38cd184b7518e72ee1ae9cfc\nReviewed-on: http://gerrit.openafs.org/10476\nReviewed-by: Daria Brashear <shadow@your-file-system.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2013-11-20 15:05:21-05:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2014-12-03 01:10:33-05:00", "committer_id": 206466, "message": "kauth: fix klog principal name parsing\n\nIf a principal name is specified to the klog command, it is not\ncorrectly passed in the pw structure.  This in turn causes\nuninitialized storage to be passed to ka_UserAuthenticateGeneral.\nThis may either lead to a segmentation fault in klog, or cause\ngarbage to be passed to the kaserver, leading to garbage in some\nlog and audit messages.  In all cases it is impossible to authenticate\nto kaserver with a specified principal name.  However, klog\nstill works correctly when no principal name is specified.\n\nThis was introduced by commit 68ce3aa814a7e3085242e705f013f05ed5da2d5c\nwhich removed lclpw to eliminate a clang warning.  However, the clang\nwarning was misleading in this case, as lclpw was actually used\n(confusingly) to indirectly update the pw structure.\n\nInstead of reverting this commit, just update pw->pwname directly.\n\nChange-Id: I565360c6e2f970637422e8b01998d3fc29874ec4\nReviewed-on: http://gerrit.openafs.org/11145\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2014-05-13 19:18:57-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2014-10-29 17:30:27-04:00", "committer_id": 144944, "message": "viced: remove obsolete comment about alignment\n\nAlignment may have been historically relevant, but is no longer.\nRemove the comment.\n\nAlso remove the unneeded 'dummy' field which does not provide\npadding for a useful alignment.\n\nChange-Id: I447fb73c379e6f86facd955a29ffd80e8929ceff\nReviewed-on: http://gerrit.openafs.org/11289\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2014-06-12 14:20:24-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2014-08-13 10:01:45-04:00", "committer_id": 206466, "message": "opr: opr_AssertionFailed undefined in kernel module\n\nThe opr_Assert in opr_rbtree_remove is incompletely defined;\nthe opr_Assert macro is defined in opr.h, but the definition\nfor the opr_AssertionFailed routine it invokes is not included.\nThis allows the kernel module to build successfully even though\nit retains a hidden undefined reference for opr_AssertionFailed.\n\nHowever, the logic in obr_rbtree_remove ensures that this\nparticular opr_Assert can never fail - it is superfluous.\nSome compilers (e.g. gcc for Linux AFS kernel module\nbuilds) are able to recognize this and optimize it out.  Others\n(e.g. Solaris 5.12) do not, and when this happens the OpenAFS\nbuild appears to succeed but the kernel module will fail to load\ndue to the undefined symbol.\n\nRemove the superfluous opr_Assert.\n\nThis partially reverts commit 9f8b765bbdbb8913fcadbde8d3362039e9dc8e61.\n\nChange-Id: I4ed2b1873c434e41dce0f2e474926bf8b449b819\nReviewed-on: http://gerrit.openafs.org/11296\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2014-06-06 19:27:04-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2014-08-06 10:29:36-04:00", "committer_id": 144944, "message": "afs: remove cruft from Solaris afs_freevfs\n\nRemove some unused variables left behind in a previous\nrefactor of flushing vcaches during afs_shutdown\n(commit 80fe111f0044aa7a67215ad92210dc72cb7eb2c0).\n\nChange-Id: Ie0a23cb08fc2946f1c400b8ce8e15ef3dc22ec20\nReviewed-on: http://gerrit.openafs.org/11310\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2014-06-29 16:27:37-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2014-06-05 07:20:56-04:00", "committer_id": 144944, "message": "afs: maintain afs_users buckets in sorted order\n\nModify afs_GetUser() to insert a new unixuser into an afs_users\nhash bucket in sorted order, by uid/PAG.  This is in support of\nother small optimizations in future commits.\n\nChange-Id: I68c51ab38733575290aa0c8aa2a306168c5483c0\nReviewed-on: http://gerrit.openafs.org/11071\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2014-04-07 18:56:26-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 67435881, "repo_owner_id": 1783474, "commit_at": "2014-06-05 07:20:40-04:00", "committer_id": 144944, "message": "afs: only reset access caches for the matching cell\n\nWhen an AFS user's tokens change (unlog, aklog) or expire,\nafs_ResetAccessCache() is called to reset all the access caches\nfor that uid/PAG.\n\nHowever, a user/PAG may have tokens for multiple cells, and they\nmay expire or be set/reset at different times.  Therefore, it is\nincorrect to assume that all access caches for a uid/PAG should\nbe discarded when only one cell's tokens have changed.\n\nModify afs_ResetAccessCache() to acccept a new argument 'cell',\nand only reset the access caches for a uid/PAG if the vcache\nresides in the specified cell.  If the caller really wants to\nreset all a user's access caches, specify cell=-1.\n\nFor cache managers that are running with multiple PAGs and multiple\ncells, this should improve performance because 1) it avoids\nscanning access caches chains for vcaches that are not part of the\ncurrent cell and 2) it avoids deleting access caches that may still\ngood, thus preventing unnecessary FetchStatus calls.\n\nChange-Id: Id4c138dab45fd48265a4029880a5d57947e67a52\nReviewed-on: http://gerrit.openafs.org/11070\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "Joe's OpenAFS repo", "generate_at": "2014-04-03 16:37:51-04:00", "author_id": 7241786, "repo_name": "jhgorse/openafs"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2014-02-05 06:47:41-08:00", "committer_id": 144944, "message": "vos: move convertROtoRW core logic to vsprocs\n\nCreate new vsprocs routine UV_ConvertRO in preparation for adding\nnew function to vos convertROtoRW.\n\nChange-Id: Ic66ecbf7cacb277891bec9f8783040995ce6ce17\nReviewed-on: http://gerrit.openafs.org/9277\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-02-15 16:58:16-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-12-18 14:43:04-08:00", "committer_id": 206466, "message": "viced: remove dead code CheckHost()\n\nRemove CheckHost().\n\nChange-Id: I618066d28ef64fdfe94d5ab08ef89adb08a99fd6\nReviewed-on: http://gerrit.openafs.org/10580\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2013-12-11 17:56:47-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-10-26 06:00:44-07:00", "committer_id": 144944, "message": "auth: prevent uninitialized key list in AFS config\n\n_afsconf_OpenInternal() may exit early for a number of reasons\nbefore properly initalizing afsconf_dir->listKeys.\nThis leads to a crash when _afsconf_CloseInternal() attempts\nto clean up listKeys.\n\nPrevent this situation by calling afsconf_InitKeys() before any\npossible exit from _afsconf_OpenInternal().\n\nChange-Id: I6911427817a2518a576c00a7ea56351f9fb4fd19\nReviewed-on: http://gerrit.openafs.org/10323\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-10-03 21:42:10-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-07-12 10:36:09-07:00", "committer_id": 144944, "message": "vos: incorrectly defined alias for -cell parm\n\nCommit 5d42398298ad4af91a08a08ce607754f644b37dc specified\nan incorrect offset for the -c alias for the -cell common\nparameter.\n\nChange-Id: I5a3bbe9ceb8a9fd4c21970f4ef0c64d77e9cdea4\nReviewed-on: http://gerrit.openafs.org/10021\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2013-06-26 11:18:01-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-03-26 07:48:18-07:00", "committer_id": 144944, "message": "dafs: prevent corruption in large fsstate.dat files\n\nIf while writing to the fsstate.dat file, it exceeds the current\nsize of the file (multiples of FS_STATE_INIT_FILESIZE (8MiB)),\nwe call fs_stateResizeFile.  This un-mmaps, truncates, and\nre-mmaps the file.  Unfortunately, fs_stateMapFile() resets the\nstate->mmap.offset and .cursor, so any writes in flight over\nthe resize will overwrite the first bytes of the file (and leave\nzeros in the file where the data should have been written).\n\nUpon return from the write that caused a file resize, the offset\nis eventually corrected and the state dump continues with a\nsilent failure.  Eventually the state dump completes and the\nfile header is rewritten; this may conceal some or all of\nthe overwrite damage at offset 0.  However, any zeros near the 8MiB\noffset (and its multiples) remain as corruption.\n\nAdd a flag to fs_stateMapFile() to allow the caller to specify if\nthe offset and cursor should be preserved.  Modify fs_stateResizeFile()\nto use this capability.\n\ntesting note: temporarily reduced FS_STATE_INIT_FILESIZE to 256 bytes\nduring testing in order to make the problem easier to reproduce.\nThis problem would normally occur only on relatively large/active\nDAFS fileservers.\n\nChange-Id: I9b6c57ef7727837ae7cfc00d02192983355dad2b\nReviewed-on: http://gerrit.openafs.org/9599\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-03-12 22:13:20-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-03-25 11:47:51-07:00", "committer_id": 144944, "message": "salvager: prevent assertion during -orphans attach\n\nImprove JudgeEntry() detection of orphaned directories to\nprevent unintentional deletion of their '.' and '..' entries.\nThis in turn prevents a later assert (opr_Verify) when we try to\ndelete and re-add '..' in order to attach the orphan.\n\nIn JudgeEntry(), 2 sources of information about a\ndirectory entry are compared for consistency:\n - vnodeEssence (unique) from its vnode index entry\n - name, vnodeNumber and unique from its dir blob entry\n\nA directory entry may be ignored, deleted, or repaired/replaced,\nbased upon the results of these and other tests (e.g. dirOprhaned).\n\nThe '.' and '..' entries are treated as special cases because\nwe do not want to delete them at this point if this directory\nis orphaned.  However, the current test for orphanhood\n(vnodeEssence->unique == 0) is not sufficient; it could be\nzero for other reasons.  This commit now uses the dirOrphaned\nflag to test for this.\n\nHowever, we are still interested in doing the right thing\nfor '.' and '..' entries with vnodeEssence->unique == 0.\nThis may indicate that the dir blob entry is pointing at the\nwrong vnode, and that vnode has unique==0.  The current code\nincorrectly ignores (returns 0) this case.  This commit now\nnow falls through to the repair/replace code so that we can\nfind the correct vnode for this entry.\n\nThe current code assumes that the 'vnodeEssence == 0 &&\n!dirOrphaned' case doesn't exist.\n\nThanks to Andrew Deason for his assistance.\n\nChange-Id: Id7c466fcc0f031b8fccb52dc51493eeed040cf95\nReviewed-on: http://gerrit.openafs.org/9104\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-01-25 18:47:49-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-03-13 09:49:25-07:00", "committer_id": 144944, "message": "vos: noise messages when attempting to delete non-existent volume\n\nWith vos refactor commit f4e73067cdef990262c69c38ac98761620a63f25,\nsome formerly conditional volume deletes are now unconditional.\nThis regresses 'vos move' output with harmless \"error\" messages\nwhen AFSVolTransCreate() returns VNOVOL:\n  \"Failed to start transaction on <volume>\"\n  \"Volume not attached, does not exist, or not online\"\n\nModify DoVolDelete() to return early (and silently) with VNOVOL\nin this case, allowing the caller to handle this appropriately.\n\nChange-Id: I21a72e38f330335adf97ac50a7ac7d0fb97c1a9c\nReviewed-on: http://gerrit.openafs.org/9596\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-03-07 09:34:55-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-02-26 14:04:56-08:00", "committer_id": 206466, "message": "vos: Unrecognized or ambiguous switch '-c'\n\nThe documented abbreviation '-c' for '-cell' no longer works since\nthe -config option was added.  Add a parm alias '-c' to restore\ncompatibility with previous syntax.\n\nChange-Id: Ie98e470d204ea2186a95668bba2581cf3e88f729\nReviewed-on: http://gerrit.openafs.org/9276\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2013-02-26 09:31:43-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-02-15 15:24:59-08:00", "committer_id": 144944, "message": "salvager: incorrect comment\n\nThe comment for the code handling the -showsuid option was incorrect.\n\nChange-Id: I0a63211cf5dd8a3b2636d4e4a2cc45a55c3bf62a\nReviewed-on: http://gerrit.openafs.org/9109\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2013-02-14 10:51:34-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-02-05 03:48:42-08:00", "committer_id": 144944, "message": "dafs: preattach should wait for exclusive states\n\nIn rare circumstances an FSYNC_VOL_ON operation may fail silently,\nleaving the volume in its previous state.  The only clue is a FileLog\nmessage \"volume <nnnn> not in quiescent state\".\n\nThis is caused by a race condition in the volume package: an\nFSYNC_VOL_ON operation is attempting to preattach a volume\n(in VPreAttachVolumeByVp_r()) at the same time a fileserver RPC\n(e.g. FetchStatus) is detaching the volume (in VReleaseVolumeHandles_r())\nat the conclusion of attach2() logic.\n\nThe fix calls VWaitExclusiveState_r() before calling\nVPreAttachVolumeByVp_r().\n\nChange-Id: Ib66859381d29311fda3e08984dcb740eadafb340\nReviewed-on: http://gerrit.openafs.org/8814\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2012-12-21 17:56:14-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-01-04 06:52:00-08:00", "committer_id": 144944, "message": "vol: correct old conditional for IH_CONDSYNC\n\nTwo places in the vol package performed IH_CONDSYNC(vp->linkHandle)\nonly if AFS_NT40_ENV.  This was correct when the namei implementation\nwas windows only; however, this ifdef was apparently overlooked\nwhen namei was implemented for UNIX.\n\nChange-Id: I0cbe2c5c0a65ece0485b8c2d5a5f92eeb53725fe\nReviewed-on: http://gerrit.openafs.org/8815\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-12-21 18:26:18-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2014-06-05 07:20:56-04:00", "committer_id": 144944, "message": "afs: maintain afs_users buckets in sorted order\n\nModify afs_GetUser() to insert a new unixuser into an afs_users\nhash bucket in sorted order, by uid/PAG.  This is in support of\nother small optimizations in future commits.\n\nChange-Id: I68c51ab38733575290aa0c8aa2a306168c5483c0\nReviewed-on: http://gerrit.openafs.org/11071\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-04-07 18:56:26-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2014-06-05 07:20:40-04:00", "committer_id": 144944, "message": "afs: only reset access caches for the matching cell\n\nWhen an AFS user's tokens change (unlog, aklog) or expire,\nafs_ResetAccessCache() is called to reset all the access caches\nfor that uid/PAG.\n\nHowever, a user/PAG may have tokens for multiple cells, and they\nmay expire or be set/reset at different times.  Therefore, it is\nincorrect to assume that all access caches for a uid/PAG should\nbe discarded when only one cell's tokens have changed.\n\nModify afs_ResetAccessCache() to acccept a new argument 'cell',\nand only reset the access caches for a uid/PAG if the vcache\nresides in the specified cell.  If the caller really wants to\nreset all a user's access caches, specify cell=-1.\n\nFor cache managers that are running with multiple PAGs and multiple\ncells, this should improve performance because 1) it avoids\nscanning access caches chains for vcaches that are not part of the\ncurrent cell and 2) it avoids deleting access caches that may still\ngood, thus preventing unnecessary FetchStatus calls.\n\nChange-Id: Id4c138dab45fd48265a4029880a5d57947e67a52\nReviewed-on: http://gerrit.openafs.org/11070\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-04-03 16:37:51-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2013-08-18 08:38:34-07:00", "committer_id": 144944, "message": "volser: repair volserver -udpsize and -sleep options\n\ncommit cd3492d0635708f141dbb9230471434268ef2188 accidentally\nbroke the parsing of the volserver -udpsize and -sleep options.\n\nChange-Id: Ia900e4d8fda1b4d5759b46932a4b62bf5591707b\nReviewed-on: http://gerrit.openafs.org/10088\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Marc Dionne <marc.c.dionne@gmail.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-07-16 17:27:05-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2012-09-05 09:56:26-07:00", "committer_id": 144944, "message": "vos: convertROtoRW - prevent VLDB corruption\n\nvos convertROtoRW incorrectly marks the first VLDB entry as the\nnew RW if the converted RO is not in the VLDB.  Correct this\nby creating a new valid RW site in the VLDB entry.\n\nChange-Id: I683ac10db90c2c41717c11c0d86eadc81a935e52\nReviewed-on: http://gerrit.openafs.org/8037\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-27 15:11:32-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2012-09-04 12:46:24-07:00", "committer_id": 144944, "message": "vos: convertROtoRW incorrect warning when RO not in VLDB\n\nvos convertROtoRW will issue an incorrect warning about a partition\nmismatch if the RO to convert is not in the VLDB.  Only check the\npartition if the RO is in the VLDB.\n\nChange-Id: Ib2726bc5bf6697898ad26dc1d817143da3286ba3\nReviewed-on: http://gerrit.openafs.org/8036\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-09-04 09:06:44-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2012-08-22 12:25:06-07:00", "committer_id": 144944, "message": "vos: convertROtoRW susceptible to VLDB changes during override prompt\n\nvos convertROtoRW obtains a VLDB entry, then peforms some setup logic\n(including a possible user prompt) before obtaining a volume lock.\nThis exposes the code to possible time-of-check/time-of-use issues.\nAfter obtaining the volume lock, get a second copy of the VLDB entry\nand compare it to the first copy; if it has changed, fail the conversion\nwith an error message asking the user to re-issue the vos convertROtoRW\ncommand.\n\nChange-Id: I9c1a634cea2e22188869d54b00b7831aed12b1cd\nReviewed-on: http://gerrit.openafs.org/8008\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-20 17:39:06-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2012-08-09 08:05:32-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create 2nd RW on a fileserver\n\nIf an RW is already present on disk on the target server (any partition),\n'vos convertROtoRW' will still convert the RO, creating a second RW on the server.\nDetect this and refuse to convert the RO by returning EXDEV (invalid cross-device link).\n\nChange-Id: Ide15a7c39f2a975fd8597e497094b6a67b448e4f\nReviewed-on: http://gerrit.openafs.org/7934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-02 18:37:05-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2012-05-21 10:08:48-07:00", "committer_id": 144944, "message": "vos: volume lock not released on convertROtoRW error\n\nIf an error occurs during convertROtoRW, the volume lock may\nnot be released.\n\nChange-Id: Ic03af00676de836cade4e39a743b234a0dc9b6cf\nReviewed-on: http://gerrit.openafs.org/7389\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 15:03:46-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2012-05-21 10:08:30-07:00", "committer_id": 144944, "message": "vos: convertROtoRW does not respect volume lock\n\nvos convertROtoRW was not checking the return code from\nubik_VL_SetLock().\n\nChange-Id: I651c543f9a0070a9d34d9cca7583437e50e95dc8\nReviewed-on: http://gerrit.openafs.org/7388\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 14:45:16-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2012-05-16 05:40:49-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create two RW volumes\n\nIf the RW volume is listed after the RO convert target in the VLDB,\nthe code failed to detect that an RW is already present and would\ncreate a second RW volume.\n\nChange-Id: Ia77004214c4d1b18699b5527bc1fc928e8e1143d\nReviewed-on: http://gerrit.openafs.org/7385\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 10:01:12-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2012-05-12 06:33:15-07:00", "committer_id": 144944, "message": "vos: convertROtoRW misc error reporting problems\n\nFixes a few inconsistencies and bugs in some error messages.\n\nChange-Id: Ic4971c4cc3a3aa3623ee0f13161fd7793d3acb19\nReviewed-on: http://gerrit.openafs.org/7387\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-05-08 12:38:38-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 20703375, "repo_owner_id": 1806297, "commit_at": "2012-05-11 17:19:11-07:00", "committer_id": 144944, "message": "DOC: vos convertROtoRW security requirements\n\nThey were copied from another command; corrected them.\n\nChange-Id: Ic77f1a91520ec4147e42864438d98942f6a7effc\nReviewed-on: http://gerrit.openafs.org/7305\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Ken Dreyer <ktdreyer@ktdreyer.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-02 13:55:16-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/openafs6"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2015-03-03 23:18:35-05:00", "committer_id": 206466, "message": "pioctl.c: restore required result variable\n\nCommit b9fb9c62a6779aa997259ddf2a83a90b08e04d5f refactored lpioctl()\nso that LINUX would have its own implementation. This also simplified\nthe other lpioctl() implementations by removing superfluous variable\n'rval'.\n\nUnfortunately, 'rval' was actually required for both DARWIN and SUN511.\nOn both of these platforms, the address of 'errcode' is passed\nto the respective ioctl_*() routine so its value may be passed back\nto lpioctl().   Therefore, 'errcode' must not also be used for the\nreturn value from these functions;  doing so results in the return\nvalue from the function overwriting the intended value of 'errcode' upon\nreturn to lpioctl().\n\nIn the case of Solaris 11, ioctl_sun_afs_syscall() always returns zero\n(as long as the ioctl device 'dev/afs' opened successfully).\nSo 'errcode' was always being set to zero, even if the pioctl had\nactually failed.  For example, without this fix, 'fs listcells'\nloops forever on Solaris 11, listing an infinite number of \"cells\",\nbecause it will never \"see\" the EDOM that informs it of the last defined\ncell.\n\nPartially revert b9fb9c62a6779aa997259ddf2a83a90b08e04d5f by restoring\nthe 'rval' variable and logic for DARWIN and SUN511.\n\nChange-Id: I4407af29d54813689cf8ccf2517bb2df4dd8eb25\nReviewed-on: http://gerrit.openafs.org/11734\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2015-02-09 18:16:16-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2015-01-04 21:47:35-05:00", "committer_id": 206466, "message": "fssync-debug: close test connection\n\nA valid fssync-debug query <volid> command issued against\na DAFS fileserver will produce the following error messages in FileLog:\n\n\tSYNC_getCom:  error receiving command\n\tFSYNC_com:  read failed; dropping connection (cnt=1)\n\nRoutine dafs_prolog() issues a tentative FSYNC_VOL_LISTVOLUMES operation\nto test for the presence of a DAFS fileserver.  If DAFS is detected,\nwe then call dafssync-debug for the original requested operation.\nHowever, the FSYNC connection for the tentative LISTVOLUMES operation\nis never closed. This results in the errors when the command completes.\n\nClose the test connection.\n\nChange-Id: I3c987289408407ba38cd184b7518e72ee1ae9cfc\nReviewed-on: http://gerrit.openafs.org/10476\nReviewed-by: Daria Brashear <shadow@your-file-system.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2013-11-20 15:05:21-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2014-12-03 01:10:33-05:00", "committer_id": 206466, "message": "kauth: fix klog principal name parsing\n\nIf a principal name is specified to the klog command, it is not\ncorrectly passed in the pw structure.  This in turn causes\nuninitialized storage to be passed to ka_UserAuthenticateGeneral.\nThis may either lead to a segmentation fault in klog, or cause\ngarbage to be passed to the kaserver, leading to garbage in some\nlog and audit messages.  In all cases it is impossible to authenticate\nto kaserver with a specified principal name.  However, klog\nstill works correctly when no principal name is specified.\n\nThis was introduced by commit 68ce3aa814a7e3085242e705f013f05ed5da2d5c\nwhich removed lclpw to eliminate a clang warning.  However, the clang\nwarning was misleading in this case, as lclpw was actually used\n(confusingly) to indirectly update the pw structure.\n\nInstead of reverting this commit, just update pw->pwname directly.\n\nChange-Id: I565360c6e2f970637422e8b01998d3fc29874ec4\nReviewed-on: http://gerrit.openafs.org/11145\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2014-05-13 19:18:57-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2014-10-29 17:30:27-04:00", "committer_id": 144944, "message": "viced: remove obsolete comment about alignment\n\nAlignment may have been historically relevant, but is no longer.\nRemove the comment.\n\nAlso remove the unneeded 'dummy' field which does not provide\npadding for a useful alignment.\n\nChange-Id: I447fb73c379e6f86facd955a29ffd80e8929ceff\nReviewed-on: http://gerrit.openafs.org/11289\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-06-12 14:20:24-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2014-08-13 10:01:45-04:00", "committer_id": 206466, "message": "opr: opr_AssertionFailed undefined in kernel module\n\nThe opr_Assert in opr_rbtree_remove is incompletely defined;\nthe opr_Assert macro is defined in opr.h, but the definition\nfor the opr_AssertionFailed routine it invokes is not included.\nThis allows the kernel module to build successfully even though\nit retains a hidden undefined reference for opr_AssertionFailed.\n\nHowever, the logic in obr_rbtree_remove ensures that this\nparticular opr_Assert can never fail - it is superfluous.\nSome compilers (e.g. gcc for Linux AFS kernel module\nbuilds) are able to recognize this and optimize it out.  Others\n(e.g. Solaris 5.12) do not, and when this happens the OpenAFS\nbuild appears to succeed but the kernel module will fail to load\ndue to the undefined symbol.\n\nRemove the superfluous opr_Assert.\n\nThis partially reverts commit 9f8b765bbdbb8913fcadbde8d3362039e9dc8e61.\n\nChange-Id: I4ed2b1873c434e41dce0f2e474926bf8b449b819\nReviewed-on: http://gerrit.openafs.org/11296\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2014-06-06 19:27:04-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2014-08-06 10:29:36-04:00", "committer_id": 144944, "message": "afs: remove cruft from Solaris afs_freevfs\n\nRemove some unused variables left behind in a previous\nrefactor of flushing vcaches during afs_shutdown\n(commit 80fe111f0044aa7a67215ad92210dc72cb7eb2c0).\n\nChange-Id: Ie0a23cb08fc2946f1c400b8ce8e15ef3dc22ec20\nReviewed-on: http://gerrit.openafs.org/11310\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-06-29 16:27:37-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2014-06-05 07:20:56-04:00", "committer_id": 144944, "message": "afs: maintain afs_users buckets in sorted order\n\nModify afs_GetUser() to insert a new unixuser into an afs_users\nhash bucket in sorted order, by uid/PAG.  This is in support of\nother small optimizations in future commits.\n\nChange-Id: I68c51ab38733575290aa0c8aa2a306168c5483c0\nReviewed-on: http://gerrit.openafs.org/11071\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-04-07 18:56:26-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2014-06-05 07:20:40-04:00", "committer_id": 144944, "message": "afs: only reset access caches for the matching cell\n\nWhen an AFS user's tokens change (unlog, aklog) or expire,\nafs_ResetAccessCache() is called to reset all the access caches\nfor that uid/PAG.\n\nHowever, a user/PAG may have tokens for multiple cells, and they\nmay expire or be set/reset at different times.  Therefore, it is\nincorrect to assume that all access caches for a uid/PAG should\nbe discarded when only one cell's tokens have changed.\n\nModify afs_ResetAccessCache() to acccept a new argument 'cell',\nand only reset the access caches for a uid/PAG if the vcache\nresides in the specified cell.  If the caller really wants to\nreset all a user's access caches, specify cell=-1.\n\nFor cache managers that are running with multiple PAGs and multiple\ncells, this should improve performance because 1) it avoids\nscanning access caches chains for vcaches that are not part of the\ncurrent cell and 2) it avoids deleting access caches that may still\ngood, thus preventing unnecessary FetchStatus calls.\n\nChange-Id: Id4c138dab45fd48265a4029880a5d57947e67a52\nReviewed-on: http://gerrit.openafs.org/11070\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-04-03 16:37:51-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2014-02-05 06:47:41-08:00", "committer_id": 144944, "message": "vos: move convertROtoRW core logic to vsprocs\n\nCreate new vsprocs routine UV_ConvertRO in preparation for adding\nnew function to vos convertROtoRW.\n\nChange-Id: Ic66ecbf7cacb277891bec9f8783040995ce6ce17\nReviewed-on: http://gerrit.openafs.org/9277\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-02-15 16:58:16-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-12-18 14:43:04-08:00", "committer_id": 206466, "message": "viced: remove dead code CheckHost()\n\nRemove CheckHost().\n\nChange-Id: I618066d28ef64fdfe94d5ab08ef89adb08a99fd6\nReviewed-on: http://gerrit.openafs.org/10580\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2013-12-11 17:56:47-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-10-26 06:00:44-07:00", "committer_id": 144944, "message": "auth: prevent uninitialized key list in AFS config\n\n_afsconf_OpenInternal() may exit early for a number of reasons\nbefore properly initalizing afsconf_dir->listKeys.\nThis leads to a crash when _afsconf_CloseInternal() attempts\nto clean up listKeys.\n\nPrevent this situation by calling afsconf_InitKeys() before any\npossible exit from _afsconf_OpenInternal().\n\nChange-Id: I6911427817a2518a576c00a7ea56351f9fb4fd19\nReviewed-on: http://gerrit.openafs.org/10323\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-10-03 21:42:10-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-08-18 08:38:34-07:00", "committer_id": 144944, "message": "volser: repair volserver -udpsize and -sleep options\n\ncommit cd3492d0635708f141dbb9230471434268ef2188 accidentally\nbroke the parsing of the volserver -udpsize and -sleep options.\n\nChange-Id: Ia900e4d8fda1b4d5759b46932a4b62bf5591707b\nReviewed-on: http://gerrit.openafs.org/10088\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Marc Dionne <marc.c.dionne@gmail.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-07-16 17:27:05-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-07-12 10:36:09-07:00", "committer_id": 144944, "message": "vos: incorrectly defined alias for -cell parm\n\nCommit 5d42398298ad4af91a08a08ce607754f644b37dc specified\nan incorrect offset for the -c alias for the -cell common\nparameter.\n\nChange-Id: I5a3bbe9ceb8a9fd4c21970f4ef0c64d77e9cdea4\nReviewed-on: http://gerrit.openafs.org/10021\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2013-06-26 11:18:01-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-03-26 07:48:18-07:00", "committer_id": 144944, "message": "dafs: prevent corruption in large fsstate.dat files\n\nIf while writing to the fsstate.dat file, it exceeds the current\nsize of the file (multiples of FS_STATE_INIT_FILESIZE (8MiB)),\nwe call fs_stateResizeFile.  This un-mmaps, truncates, and\nre-mmaps the file.  Unfortunately, fs_stateMapFile() resets the\nstate->mmap.offset and .cursor, so any writes in flight over\nthe resize will overwrite the first bytes of the file (and leave\nzeros in the file where the data should have been written).\n\nUpon return from the write that caused a file resize, the offset\nis eventually corrected and the state dump continues with a\nsilent failure.  Eventually the state dump completes and the\nfile header is rewritten; this may conceal some or all of\nthe overwrite damage at offset 0.  However, any zeros near the 8MiB\noffset (and its multiples) remain as corruption.\n\nAdd a flag to fs_stateMapFile() to allow the caller to specify if\nthe offset and cursor should be preserved.  Modify fs_stateResizeFile()\nto use this capability.\n\ntesting note: temporarily reduced FS_STATE_INIT_FILESIZE to 256 bytes\nduring testing in order to make the problem easier to reproduce.\nThis problem would normally occur only on relatively large/active\nDAFS fileservers.\n\nChange-Id: I9b6c57ef7727837ae7cfc00d02192983355dad2b\nReviewed-on: http://gerrit.openafs.org/9599\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-03-12 22:13:20-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-03-25 11:47:51-07:00", "committer_id": 144944, "message": "salvager: prevent assertion during -orphans attach\n\nImprove JudgeEntry() detection of orphaned directories to\nprevent unintentional deletion of their '.' and '..' entries.\nThis in turn prevents a later assert (opr_Verify) when we try to\ndelete and re-add '..' in order to attach the orphan.\n\nIn JudgeEntry(), 2 sources of information about a\ndirectory entry are compared for consistency:\n - vnodeEssence (unique) from its vnode index entry\n - name, vnodeNumber and unique from its dir blob entry\n\nA directory entry may be ignored, deleted, or repaired/replaced,\nbased upon the results of these and other tests (e.g. dirOprhaned).\n\nThe '.' and '..' entries are treated as special cases because\nwe do not want to delete them at this point if this directory\nis orphaned.  However, the current test for orphanhood\n(vnodeEssence->unique == 0) is not sufficient; it could be\nzero for other reasons.  This commit now uses the dirOrphaned\nflag to test for this.\n\nHowever, we are still interested in doing the right thing\nfor '.' and '..' entries with vnodeEssence->unique == 0.\nThis may indicate that the dir blob entry is pointing at the\nwrong vnode, and that vnode has unique==0.  The current code\nincorrectly ignores (returns 0) this case.  This commit now\nnow falls through to the repair/replace code so that we can\nfind the correct vnode for this entry.\n\nThe current code assumes that the 'vnodeEssence == 0 &&\n!dirOrphaned' case doesn't exist.\n\nThanks to Andrew Deason for his assistance.\n\nChange-Id: Id7c466fcc0f031b8fccb52dc51493eeed040cf95\nReviewed-on: http://gerrit.openafs.org/9104\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-01-25 18:47:49-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-03-13 09:49:25-07:00", "committer_id": 144944, "message": "vos: noise messages when attempting to delete non-existent volume\n\nWith vos refactor commit f4e73067cdef990262c69c38ac98761620a63f25,\nsome formerly conditional volume deletes are now unconditional.\nThis regresses 'vos move' output with harmless \"error\" messages\nwhen AFSVolTransCreate() returns VNOVOL:\n  \"Failed to start transaction on <volume>\"\n  \"Volume not attached, does not exist, or not online\"\n\nModify DoVolDelete() to return early (and silently) with VNOVOL\nin this case, allowing the caller to handle this appropriately.\n\nChange-Id: I21a72e38f330335adf97ac50a7ac7d0fb97c1a9c\nReviewed-on: http://gerrit.openafs.org/9596\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-03-07 09:34:55-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-02-26 14:04:56-08:00", "committer_id": 206466, "message": "vos: Unrecognized or ambiguous switch '-c'\n\nThe documented abbreviation '-c' for '-cell' no longer works since\nthe -config option was added.  Add a parm alias '-c' to restore\ncompatibility with previous syntax.\n\nChange-Id: Ie98e470d204ea2186a95668bba2581cf3e88f729\nReviewed-on: http://gerrit.openafs.org/9276\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2013-02-26 09:31:43-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-02-15 15:24:59-08:00", "committer_id": 144944, "message": "salvager: incorrect comment\n\nThe comment for the code handling the -showsuid option was incorrect.\n\nChange-Id: I0a63211cf5dd8a3b2636d4e4a2cc45a55c3bf62a\nReviewed-on: http://gerrit.openafs.org/9109\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2013-02-14 10:51:34-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-02-05 03:48:42-08:00", "committer_id": 144944, "message": "dafs: preattach should wait for exclusive states\n\nIn rare circumstances an FSYNC_VOL_ON operation may fail silently,\nleaving the volume in its previous state.  The only clue is a FileLog\nmessage \"volume <nnnn> not in quiescent state\".\n\nThis is caused by a race condition in the volume package: an\nFSYNC_VOL_ON operation is attempting to preattach a volume\n(in VPreAttachVolumeByVp_r()) at the same time a fileserver RPC\n(e.g. FetchStatus) is detaching the volume (in VReleaseVolumeHandles_r())\nat the conclusion of attach2() logic.\n\nThe fix calls VWaitExclusiveState_r() before calling\nVPreAttachVolumeByVp_r().\n\nChange-Id: Ib66859381d29311fda3e08984dcb740eadafb340\nReviewed-on: http://gerrit.openafs.org/8814\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2012-12-21 17:56:14-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2013-01-04 06:52:00-08:00", "committer_id": 144944, "message": "vol: correct old conditional for IH_CONDSYNC\n\nTwo places in the vol package performed IH_CONDSYNC(vp->linkHandle)\nonly if AFS_NT40_ENV.  This was correct when the namei implementation\nwas windows only; however, this ifdef was apparently overlooked\nwhen namei was implemented for UNIX.\n\nChange-Id: I0cbe2c5c0a65ece0485b8c2d5a5f92eeb53725fe\nReviewed-on: http://gerrit.openafs.org/8815\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-12-21 18:26:18-05:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2012-09-05 09:56:26-07:00", "committer_id": 144944, "message": "vos: convertROtoRW - prevent VLDB corruption\n\nvos convertROtoRW incorrectly marks the first VLDB entry as the\nnew RW if the converted RO is not in the VLDB.  Correct this\nby creating a new valid RW site in the VLDB entry.\n\nChange-Id: I683ac10db90c2c41717c11c0d86eadc81a935e52\nReviewed-on: http://gerrit.openafs.org/8037\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-27 15:11:32-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2012-09-04 12:46:24-07:00", "committer_id": 144944, "message": "vos: convertROtoRW incorrect warning when RO not in VLDB\n\nvos convertROtoRW will issue an incorrect warning about a partition\nmismatch if the RO to convert is not in the VLDB.  Only check the\npartition if the RO is in the VLDB.\n\nChange-Id: Ib2726bc5bf6697898ad26dc1d817143da3286ba3\nReviewed-on: http://gerrit.openafs.org/8036\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-09-04 09:06:44-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2012-08-22 12:25:06-07:00", "committer_id": 144944, "message": "vos: convertROtoRW susceptible to VLDB changes during override prompt\n\nvos convertROtoRW obtains a VLDB entry, then peforms some setup logic\n(including a possible user prompt) before obtaining a volume lock.\nThis exposes the code to possible time-of-check/time-of-use issues.\nAfter obtaining the volume lock, get a second copy of the VLDB entry\nand compare it to the first copy; if it has changed, fail the conversion\nwith an error message asking the user to re-issue the vos convertROtoRW\ncommand.\n\nChange-Id: I9c1a634cea2e22188869d54b00b7831aed12b1cd\nReviewed-on: http://gerrit.openafs.org/8008\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-20 17:39:06-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2012-08-09 08:05:32-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create 2nd RW on a fileserver\n\nIf an RW is already present on disk on the target server (any partition),\n'vos convertROtoRW' will still convert the RO, creating a second RW on the server.\nDetect this and refuse to convert the RO by returning EXDEV (invalid cross-device link).\n\nChange-Id: Ide15a7c39f2a975fd8597e497094b6a67b448e4f\nReviewed-on: http://gerrit.openafs.org/7934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-02 18:37:05-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2012-05-21 10:08:48-07:00", "committer_id": 144944, "message": "vos: volume lock not released on convertROtoRW error\n\nIf an error occurs during convertROtoRW, the volume lock may\nnot be released.\n\nChange-Id: Ic03af00676de836cade4e39a743b234a0dc9b6cf\nReviewed-on: http://gerrit.openafs.org/7389\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 15:03:46-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2012-05-21 10:08:30-07:00", "committer_id": 144944, "message": "vos: convertROtoRW does not respect volume lock\n\nvos convertROtoRW was not checking the return code from\nubik_VL_SetLock().\n\nChange-Id: I651c543f9a0070a9d34d9cca7583437e50e95dc8\nReviewed-on: http://gerrit.openafs.org/7388\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 14:45:16-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2012-05-16 05:40:49-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create two RW volumes\n\nIf the RW volume is listed after the RO convert target in the VLDB,\nthe code failed to detect that an RW is already present and would\ncreate a second RW volume.\n\nChange-Id: Ia77004214c4d1b18699b5527bc1fc928e8e1143d\nReviewed-on: http://gerrit.openafs.org/7385\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 10:01:12-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2012-05-12 06:33:15-07:00", "committer_id": 144944, "message": "vos: convertROtoRW misc error reporting problems\n\nFixes a few inconsistencies and bugs in some error messages.\n\nChange-Id: Ic4971c4cc3a3aa3623ee0f13161fd7793d3acb19\nReviewed-on: http://gerrit.openafs.org/7387\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-05-08 12:38:38-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 36523915, "repo_owner_id": 1806297, "commit_at": "2012-05-11 17:19:11-07:00", "committer_id": 144944, "message": "DOC: vos convertROtoRW security requirements\n\nThey were copied from another command; corrected them.\n\nChange-Id: Ic77f1a91520ec4147e42864438d98942f6a7effc\nReviewed-on: http://gerrit.openafs.org/7305\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Ken Dreyer <ktdreyer@ktdreyer.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-02 13:55:16-04:00", "author_id": 7241786, "repo_name": "marciobarbosa/tickets"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2017-01-10 21:28:08-05:00", "committer_id": 1894506, "message": "LINUX: eliminate unused variable warning\n\nCommit c3bbf0b4444db88192eea4580ac9e9ca3de0d286 added routine\nosi_TryEvictDentries and included new logic for D_INVALIDATE_IS_VOID.\nUnfortunately, this new code path no longer uses dentry; it also should\nhave been made conditional at that time.\n\nWrap the declaration of dentry in #ifndef D_INVALIDATE_IS_VOID to\neliminate the unused variable warning.\n\nChange-Id: I89c1430ba984539ca775da2540ea966030de0701\nReviewed-on: https://gerrit.openafs.org/12505\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-01-07 06:22:47-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-12-12 12:24:55-05:00", "committer_id": 1894506, "message": "afs: fs getcacheparms miscounts dcaches for large files\n\nfs getcacheparms issued with the -excessive option tabulates in-memory\ndcaches (\"DCentries\") by size.  However, any dcache with validPos > 2^31\nis miscounted in the 4k-16k bucket.  This is caused by a type mismatch\nbetween 'validPos' (afs_size_t) and 'size' (int) which leads to a\nnegative value for size by sign-extension.  The size comparison \"sieve\"\nfails for negative numbers; it skips the first bucket (0-4K) and dumps\nthem in the second one (4k-16k).\n\nMove the declaration of 'size' closer to its use, and declare it with\nthe same type as 'validPos' (afs_size_t) so the comparison sieve\ncorrectly places these dcaches in the last (>=1M) bucket.\n\nChange-Id: Ib0d973da92865043a4f1c068de5e9b81bcde2b9a\nReviewed-on: https://gerrit.openafs.org/12347\nReviewed-by: Stephan Wiesand <stephan.wiesand@desy.de>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-01-12 18:06:51-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-12-11 16:53:33-05:00", "committer_id": 1894506, "message": "afs: fs getcacheparms miscounts zero-length dcaches\n\nWhen fs getcacheparms is issued with the -excessive option, it\ntabulates all in-memory dcaches (\"DCentries\") by size.\n\ndcaches with validPos == 0 were being tabulated in the 4k-16k bucket.\n\nFix the first comparison in the 'sieve' so these dcaches will be counted\nin the correct 0-4k bucket instead.\n\nIntroduced by commit 176c2fddb95ced6c13e04e7492fc09b5551f273c\n\nChange-Id: I60acb0f115dad9f7951f0b17e5b3e37dc94321b9\nReviewed-on: https://gerrit.openafs.org/12346\nReviewed-by: Stephan Wiesand <stephan.wiesand@desy.de>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-01-12 17:50:36-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-11-30 12:21:39-05:00", "committer_id": 1894506, "message": "dir: do not leak contents of deleted directory entries\n\nDeleting an AFS directory entry (afs_dir_Delete) merely removes the\nentry logically by updating the allocation map and hash table.  However,\nthe entry itself remains on disk - that is, both the cache manager's\ncache partition and the fileserver's vice partitions.\n\nThis constitutes a leak of directory entry information, including the\nobject's name and MKfid (vnode and uniqueid).  This leaked information\nis also visible on the wire during FetchData requests and volume\noperations.\n\nModify afs_dir_Delete to clear the contents of deleted directory\nentries.\n\nPatchset notes:\nThis commit only prevents leaks for newly deleted entries.  Another\ncommit in this patchset prevents leaks of partial object names upon\nreuse of pre-existing deleted entries.  A third commit in this\npatchset prevents yet another kind of directory entry leak, when\ninternal buffers are reused to create or enlarge existing directories.\nAll three patches are required to prevent new leaks.  Two additional\nsalvager patches are also included to assist administrators in the\ncleanup of pre-existing leaks.\n\n[kaduk@mit.edu: style nit for sizeof() argument]\n\nChange-Id: Iabaafeed09a2eb648107b7068eb3dbf767aa2fe9\nReviewed-on: https://gerrit.openafs.org/12460\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-11-07 14:16:50-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-11-30 11:43:51-05:00", "committer_id": 1894506, "message": "dir: fileserver leaks names of file and directories\n\nSummary:\nDue to incomplete initialization or clearing of reused memory,\nfileserver directory objects are likely to contain \"dead\" directory\nentry information.  These extraneous entries are not active - that is,\nthey are logically invisible to the fileserver and client.  However,\nthey are physically visible on the fileserver vice partition, on the\nwire in FetchData replies, and on the client cache partition.  This\nconstitutes a leak of directory information.\n\nCharacterization:\nThere are three different kinds of \"dead\" residual directory entry\nleaks, each with a different cause:\n\n1. There may be partial name data after the null terminator in a live\ndirectory entry.   This happens when a previously used directory entry\nbecomes free, then is reused for a directory entry with a shorter name.\nThis may be addressed in a future commit.\n\n2. \"Dead\" directory entries are left uncleared after an object is\ndeleted or renamed.  This may be addressed in a future commit.\n\n3. Residual directory entries may be inadvertently picked up when a new\ndirectory is created or an existing directory is extended by a 2kiBi\npage.  This is the most severe problem and is addressed by this commit.\n\nThis third kind of leak is the most severe because the leaked\ndirectory information may be from _any_ other directory residing on the\nfileserver, even if the current user is not authorized to see that\ndirectory.\n\nRoot cause:\nThe fileserver's directory/buffer package shares a pool of directory\npage buffers among all fileserver threads for both directory reads and\ndirectory writes.  When the fileserver creates a new directory or\nextends an existing one, it uses any available unlocked buffer in the\npool.  This buffer is likely to contain another directory page recently\nread or written by the fileserver.  Unfortunately the fileserver only\ninitializes the page header fields (and the first two \"dot\" and \"dotdot\"\nentries in the case of a new directory).  Any residual entries in the\nrest of the directory page are now logically \"dead\", but still\nphysically present in the directory.  They can easily be seen on the\nvice partition, on the wire in a FetchData reply, and on the cache\npartition.\n\nNote:\nThe directory/buffer package used by the fileserver is also used by the\nsalvager and the volserver.  Therefore, salvager activity may also leak\ndirectory information to a certain extent.   The volserver vos split\ncommand may also contribute to leaks.  Any volserver operation that\ncreates volumes (create, move, copy, restore, release) may also have\ninsignificant leaks.  These less significant leaks are addressed by this\ncommit as well.\n\nExploits:\nAny AFS user authorized to read directories may passively exploit this\nleak by capturing wire traffic or examining his local cache as he/she\nperforms authorized reads on existing directories.  Any leaked data will\nbe for other directories the fileserver had in the buffer pool at the\ntime the authorized directories were created or extended.\n\nAny AFS user authorized to write a new directory may actively exploit\nthis leak by creating a new directory, flushing cache, then re-reading\nthe newly created directory.  Any leaked data will be for other\ndirectories the fileserver had in the buffer pool within the last few\nseconds.  In this way an authorized user may sample current fileserver\ndirectory buffer contents for as long as he/she desires, without being\ndetected.\n\nDirectories already containing leaked data may themselves be leaked,\nleading to multiple layers of leaked data propagating with every new or\nextended directory.\n\nThe names of files and directories are the most obvious source of\ninformation in this leak, but the FID vnode and uniqueid are leaked as\nwell.  Careful examination of the sequences of leaked vnode numbers and\nuniqueids may allow an attacker to:\n- Discern each layer of old directories by observing breaks in\n  consecutive runs of vnode and/or uniqueid numbers.\n- Infer which objects may reside on the same volume.\n- Discover the order in which objects were created (vnode) or modified\n  (uniqueid).\n- Know whether an object is a file (even vnode) or a directory (odd\n  vnode).\n\nPrevent new leaks by always clearing a pool buffer before using it to\ncreate or extend a directory.\n\nExisting leaks on the fileserver vice partitions may be addressed in a\nfuture commit.\n\nChange-Id: Ia980ada6a2b1b2fd473ffc71e9fd38255393b352\nReviewed-on: https://gerrit.openafs.org/12458\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-05-13 00:01:31-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-11-21 21:26:45-05:00", "committer_id": 1894506, "message": "doc: correct help for 'bos getlog' -restricted mode\n\nCommit f085951d39c0d6c1e6a626177c30235704317600 introduced an error in\nthe bos getlog helpfile.\n\nModify the helpfile to describe the actual restrictions imposed by\n-restricted mode.\n\nChange-Id: I8d8fedb558a1bdbd55d80046b2011f3aacc71b3f\nReviewed-on: https://gerrit.openafs.org/12454\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-11-21 13:25:40-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-11-14 02:25:51-05:00", "committer_id": 1894506, "message": "LINUX: do not use d_invalidate to evict dentries\n\nWhen working within the AFS filespace, commands which access large\nnumbers of OpenAFS files (e.g., git operations and builds) may result in\nactive files (e.g., the current working directory) being evicted from the\ndentry cache.  One symptom of this is the following message upon return\nto the shell prompt:\n\n\"fatal: unable to get current working directory: No such file or\ndirectory\"\n\nStarting with Linux 3.18, d_invalidate returns void because it always\nsucceeds.  Commit a42f01d5ebb13da575b3123800ee6990743155ab adapted\nOpenAFS to cope with the new return type, but not with the changed\nsemantics of d_invalidate.  Because d_invalidate can no longer fail with\n-EBUSY when invoked on an in-use dentry. OpenAFS must no longer trust it\nto preserve in-use dentries.\n\nModify the dentry eviction code to use a method (d_prune_aliases) that\ndoes not evict in-use dentries.\n\nChange-Id: I1826ae2a89ef4cf6b631da532521bb17bb8da513\nReviewed-on: https://gerrit.openafs.org/12363\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-08-04 18:42:27-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-11-06 15:15:46-05:00", "committer_id": 1894506, "message": "salvager: fix error message for invalid volumeid\n\nIf the specified volumeid is invalid (e.g. volume name was specified\ninstead of volume number), the error is reported via Log().  However,\ncommit 24fed351fd13b38bfaf9f278c914a47782dbf670 moved the log opening\nlogic from before this check to after it, effectively making this Log()\ncall a no-op.\n\nInstead, use fprintf to issue the error message.\n\nChange-Id: I488bc93b178c7973e48d7c9ef4e7ecde9ba62696\nReviewed-on: https://gerrit.openafs.org/12288\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-05-18 00:36:12-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-10-29 22:37:33-04:00", "committer_id": 1894506, "message": "LINUX: split dentry eviction from osi_TryEvictVCache\n\nTo make osi_TryEvictVCache clearer, and to prepare for a future change\nin dentry eviction, split the dentry eviction logic into its own routine\nosi_TryEvictDentries.\n\nNo functional difference should be incurred by this commit.\n\nChange-Id: I5b255fd541d09159d70f8d7521ca8f2ae7fe5c2b\nReviewed-on: https://gerrit.openafs.org/12362\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Joe Gorse <jhgorse@gmail.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-08-04 18:18:15-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-10-25 21:37:33-04:00", "committer_id": 1894506, "message": "Linux 4.9: inode_change_ok() becomes setattr_prepare()\n\nLinux commit 31051c85b5e2 \"fs: Give dentry to inode_change_ok() instead\nof inode\" renames and modifies inode_change_ok(inode, attrs) to\nsetattr_prepare(dentry, attrs).\n\nModify OpenAFS to cope.\n\nChange-Id: I72f8dfbdbd25d7c775e9c35116e323ea4359e95c\nReviewed-on: https://gerrit.openafs.org/12418\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-10-20 00:49:37-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-10-25 21:33:25-04:00", "committer_id": 1894506, "message": "Linux 4.9: inode_operation rename now takes flags\n\nIn Linux 3.15 commit 520c8b16505236fc82daa352e6c5e73cd9870cff,\ninode_operation rename2() was added.  It takes the same arguments as\nrename(), with an added flags argument supporting the following values:\n\nRENAME_NOREPLACE: if \"new\" name exists, fail with -EEXIST.  Without\nthis flag, the default behavior is to replace the \"new\" existing file.\n\nRENAME_EXCHANGE: exchange source and target; both must exist.\n\nOpenAFS never implemented a .rename2() routine because it was optional\nwhen introduced at Linux v3.15.\n\nIn Linux 4.9-rc1 the following commits remove the last in-tree uses of\n.rename() and converts .rename2() to .rename().\naadfa8019e81 vfs: add note about i_op->rename changes to porting\n2773bf00aeb9 fs: rename \"rename2\" i_op to \"rename\"\n18fc84dafaac vfs: remove unused i_op->rename\n1cd66c93ba8c fs: make remaining filesystems use .rename2\ne0e0be8a8355 libfs: support RENAME_NOREPLACE in simple_rename()\nf03b8ad8d386 fs: support RENAME_NOREPLACE for local filesystems\n\nWith these changes, it is now mandatory for OpenAFS afs_linux_rename()\nto accept a 5th flag argument.\n\nAdd an autoconfig test to determine the signature of .rename().  Use this\ninformation to implement afs_linux_rename() with the appropriate number\nof arguments.  Implement \"toleration support\" for the flags option by\ntreating a zero flag as a normal rename; if any flags are specified,\nreturn -EINVAL to indicate the OpenAFS filesystem does not yet support\nany flags.\n\nChange-Id: I165d2b7956942446d97beda8504ac1ed5185a036\nReviewed-on: https://gerrit.openafs.org/12391\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-09-16 19:01:19-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-10-25 21:28:14-04:00", "committer_id": 1894506, "message": "Linux 4.9: deal with demise of GROUP_AT\n\nLinux commit 81243eacfa40 \"cred: simpler, 1D supplementary groups\"\nrefactors the group_info struct, removing some members (which OpenAFS\nreferences only through the GROUP_AT macro) and adding a gid member.\nThe GROUP_AT macro is also removed from the tree.\n\nAdd an autoconfigure test for the new group_info member gid and define a\nreplacement GROUP_AT macro to do the right thing under the new regime.\n\nChange-Id: I85a52c0ae0d91fc141a523f443a4ffc05eb72a2b\nReviewed-on: https://gerrit.openafs.org/12390\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-09-14 18:01:22-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-07-20 23:24:59-04:00", "committer_id": 1894506, "message": "SOLARIS: corrupted content of mmap'd files over 4GiB\n\nMany Solaris programs and utilities (notably mdb and cp) use mmap() in\ntheir implementation.  When AFS files exceeding 4GiB are mmap'd, the\ncontents of the file will be incorrectly mapped into memory. Starting at\n4GiB + 1, the first 4GiB will be repeated for the remainder of the file.\nIf the mmap'd file is written back to storage (AFS or otherwise), the\nnewly created file will also be corrupted.\n\nThis is due to a bug in the afs_map() routine that supports mmap() of\nAFS files on Solaris.  The segvn_crarg.offset passed to the Solaris\nvirtual memory APIs is incorrectly cast to u_int, causing it to wrap at\n4GiB.\n\nAlthough Solaris passes the offset from fop_map() to afs_map() as type\noffset_t, the destination segvn_crargs.offset is actually type\nu_offset_t.  Existing examples of other Solaris filesystems (e.g.\nzfs_map() ) cast the offset from offset_t to u_offset_t when assigning to\nsegvn_crargs.offset.  If it's good enough for ZFS, it's good enough for\nAFS.\n\nCorrectly cast the offset to u_offset_t.\n\nThanks to Robert Milkowski for the report and diagnosis.\n\nChange-Id: Id25363255ec011f2ad7e003ca3e4a1385bebff7e\nReviewed-on: https://gerrit.openafs.org/12292\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-05-27 16:44:17-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-07-20 19:39:11-04:00", "committer_id": 1894506, "message": "SOLARIS: support mmap() over 4GiB\n\nWhen mmap() is issued for exactly 4GiB of a large AFS-resident file,\nmmap() fails with ENOMEM.  This is because the AFS code is handling the\nrequested length as u_int instead of size_t, resulting in a 0 being\npassed back to the caller.\n\nWhen mmap() is issued for non-multiples of 4GiB, the subsequent mapping\nwill not contain all the requested pages, and for the same reason - the\nmapped size has been truncated to 32 bits.  This results in SIGSEGV when\naccessing the non-mapped page(s).\n\nFix the signature of afs_map() to specify the correct type for the length.\n\nThanks to Robert Milkowski for the report and diagnosis.\n\nChange-Id: I8a9f0cb04ff9b80de5516e14d0679b06ef0b3f9a\nReviewed-on: https://gerrit.openafs.org/12291\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nTested-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-05-26 16:53:47-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-07-18 17:38:02-04:00", "committer_id": 1894506, "message": "afs: incorrect comments for afs_ClearStatus\n\nThe brief description was identical to the one for afs_Analyze.\n\nUpdate it to accurately describe afs_ClearStatus.\n\nChange-Id: I70ceca41342c1b47950c35f567f8ae5a2566f925\nReviewed-on: https://gerrit.openafs.org/12005\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2015-06-18 15:32:36-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-07-05 21:36:02-04:00", "committer_id": 1894506, "message": "afs: document missing afs_Analyze parm\n\nrxconn was missing from the comments; add it.\n\nChange-Id: I8c0cf212ca2952d3a23c3bb5db1857dfd9a8f41e\nReviewed-on: https://gerrit.openafs.org/12004\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2015-06-18 15:54:28-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-05-13 00:03:08-04:00", "committer_id": 1894506, "message": "salvageserver: unable to write child log: out of memory\n\nChanges to salvageserver logging in commit\n24fed351fd13b38bfaf9f278c914a47782dbf670\nintroduced a new bug in SalvageLogCleanup; the test for calloc() failure\nwas inadvertently inverted.\n\nFix the sense of the test.\n\nChange-Id: Id0ee4ac3e60d7285163a9ab0b32bd7d48e570ac0\nReviewed-on: https://gerrit.openafs.org/12284\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-05-12 22:23:36-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-05-10 23:42:22-04:00", "committer_id": 1894506, "message": "salvageserver: segfault in DoSalvageVolume\n\nA typo in the recent logging changes for salvageserver\nad455347bc99d1bd499535995958b5f77c2388ff\ncaused a bad address to be passed to memset.\n\nCorrectly memset the log options as intended.\n\nChange-Id: Ifef46defcc6da56df4e58f8ed9029717a77c0b39\nReviewed-on: https://gerrit.openafs.org/12282\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-05-10 22:51:38-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-02-22 23:54:25-05:00", "committer_id": 1894506, "message": "DAFS: large volume support - fileserver crash after \"addled bitmap\"\n\nAny DAFS fileserver operation that allocates a new vnode but fails\nto update the vnode index will crash:\n\n\"Fatal Rx error: assertion failed: --vp->nWaiters >= 0,\n\t\t\t\tfile: ../vol/volume.c, line: nnnn\"\n\nNote: This crash was exposed by other bugs (to be addressed in future\ncommits) in OpenAFS large volume support.  However, there may\nbe other failure paths (unrelated to large volumes) that expose\nthis error as well.\n\nWhen VAllocVnode() must allocate a new vnode but fails while\nupdating the vnode index file (e.g. an \"addled bitmap\" due to other\nbugs in working with a vnode index larger than 2^31 bytes), it branches\nto common recovery logic at label error_encountered:.\n\nPart of this recovery is to call VFreeBitmapEntry_r().  Commit\n08ffe3e81d875b58ae5fe4c5733845d5132913a0 added a VOL_FREE_BITMAP_WAIT\nflag to VFreeBitmapEntry() in order to prevent races with VAllocBitmapEntry().\nIf the caller specifies VOL_FREE_BITMAP_WAIT, VFreeBitmapEntry_r will\ncall VCreateReservation_r() and VWaitExclusiveState_r().  However, the\nexit from VFreeBitmapEntry_r() calls VCancelReservation_r() unconditionally.\nThis works correctly with the majority of callers to VFreeBitmapEntry_r,\nwhich do specify the VOL_FREE_BITMAP_WAIT flag.\n\nHowever, the VAllocVnode() error_encountered logic must specify 0 for\nthis flag because the thread is already in an exclusive state\n(VOL_STATE_VNODE_ALLOC).  This correctly causes VFreeBitmapEntry_r() to\nforgo both the reservation and wait-for-exclusive-state.  However, before\nexit it erroneously calls VCancelReservation_r().  We now have unbalanced\nreservations (nWaiters); this causes an assert when the VAllocVnode()\nerror_encountered recovery code later calls VCancelReservation_r()\nfor what it believes is its own prior reservation.\n\nModify VFreeBitmapEntry_r() to make its final VCancelReservation_r()\nconditional on flag VOL_FREE_BITMAP_WAIT.\n\nChange-Id: Id6cf6b1279b11e6dfc4704bba5739912f663beca\nReviewed-on: http://gerrit.openafs.org/11983\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@auristor.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2014-03-27 06:36:59-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-02-22 23:23:38-05:00", "committer_id": 1894506, "message": "bozo: allow start of fs and dafs bnodes with options\n\nfs_create() and dafs_create() issue stat() to verify\nthe existence of each executable specified in the bnode.\nHowever, commit fda2bc874751ca479365dc6389c0eebb41a0bda1\ninadvertently removed the code that stripped any command\narguments before the stat().  Therefore, any bnode that\nspecifies arguments (e.g. /usr/afs/bin/dafileserver -d 5),\ncauses the stat() to fail and the bnode will not start.\n\nRename function AppendExecutableExtension() to a less\n\"window-ish\" name: PathToExecutable().\n\nModify the Windows version of PathToExecutable()\nto properly strip arguments.\n\nReimplement the Unix macro as function PathToExecutable()\nthat properly strips arguments.\n\nChange-Id: I04f7ce2afb8211bd12b9063db1335738bff1cc1e\nReviewed-on: http://gerrit.openafs.org/11934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2015-07-18 01:12:51-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2016-02-17 14:06:42-05:00", "committer_id": 1894506, "message": "viced: incorrect FID audit of BulkStatus and InlineBulkStatus\n\nThe audit code for object AUD_FIDS is off by one - we list the\nfirst FID twice and skip the last FID.\n\nRepair so all FIDs are properly audited.\n\nChange-Id: I99f4687e25031eb26ccd7e07b732217b098005de\nReviewed-on: http://gerrit.openafs.org/12191\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams <3chas3@gmail.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-02-16 14:55:03-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2015-12-21 18:14:35-05:00", "committer_id": 1894506, "message": "afs: incorrect types for AFSDB IPv4 addresses\n\nDNS lookup results were being handled with int types.\n\nFortunately, this seems to be harmless, due to use of\nmemcpy when the types don't match, and assignment only\nwhen both sides were int.\n\nHowever, to avoid any future unpleasantness, change\nthem to afs_uint32.\n\nNo functional change should be incurred.\n\nChange-Id: I31aeabb4ae3194a00b29a1fa767d05af167b4e4f\nReviewed-on: http://gerrit.openafs.org/12117\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams <3chas3@gmail.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2015-11-23 21:03:57-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2015-12-15 21:39:01-05:00", "committer_id": 1894506, "message": "afs: pioctl kernel memory overrun\n\nCVE-2015-8312:\nAny pioctl with an input buffer size (ViceIoctl->in_size)\nexactly equal to AFS_LRALLOCSIZE (4096 bytes) will cause\na one-byte overwrite of its kernel memory working buffer.\nThis may crash the operating system or cause other\nundefined behavior.\n\nThe attacking pioctl must be a valid AFS pioctl code.\nHowever, it need not specify valid arguments (in the ViceIoctl),\nsince only rudimentary checking is done in afs_HandlePioctl.\nMost argument validation occurs later in the individual\npioctl handlers.\n\nNor does the issuer need to be authenticated or authorized\nin any way, since authorization checks also occur much later,\nin the individual pioctl handlers.  An unauthorized user\nmay therefore trigger the overrun by either crafting his\nown malicious pioctl, or by issuing a privileged\ncommand, e.g. 'fs newalias', with appropriately sized but\notherwise arbitrary arguments.  In the latter case, the\nattacker will see the expected error message:\n \"fs: You do not have the required rights to do this operation\"\nbut in either case the damage has been done.\n\nPioctls are not logged or audited in any way (except those\nthat cause loggable or auditable events as side effects).\n\nroot cause:\nafs_HandlePioctli() calls afs_pd_alloc() to allocate two\ntwo afs_pdata structs, one for input and one for output.\nThe memory for these buffers is based on the requested\nsize, plus at least one extra byte for the null terminator\nto be set later:\n  requested size\tallocated\n  =================\t=================================\n  > AFS_LRALLOCSIZ\tosi_Alloc(size+1)\n  <= AFS_LRALLOCSIZ\tafs_AllocLargeSize(AFS_LRALLOCSIZ)\n\nafs_HandlePioctl then adds a null terminator to each buffer,\none byte past the requested size.  This is safe in all cases\nexcept one: if the requested in_size was _exactly_\nAFS_LRALLOCSIZ (4096 bytes), this null is one byte beyond\nthe allocated storage, zeroing a byte of kernel memory.\n\nCommit 6260cbecd0795c4795341bdcf98671de6b9a43fb introduced\nthe null terminators and they were correct at that time.\nBut the commit message warns:\n \"note that this works because PIGGYSIZE is always less than\n  AFS_LRALLOCSIZ\"\n\nCommit f8ed1111d76bbf36a466036ff74b44e1425be8bd introduced\nthe bug by increasing the maximum size of the buffers but\nfailing to account correctly for the null terminator in\nthe case of input buffer size == AFS_LRALLOCSIZ.\n\nCommit 592a99d6e693bc640e2bdfc2e7e5243fcedc8f93 (master\nversion of one of the fixes in the recent 1.6.13 security\nrelease) is the fix that drew my attention to this new\nbug.  Ironically, 592a99 (combined with this commit), will\nmake it possible to eliminate the \"offending\" null termination\nline altogether since it will now be performed automatically by\nafs_pd_alloc().\n\n[kaduk@mit.edu: adjust commit message for CVE number assignment,\nreduce unneeded churn in the diff.]\n\nChange-Id: I1a536b3a53ec4b6721fbd39a915207da4358720c", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2015-08-07 11:56:16-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2015-11-18 22:10:05-05:00", "committer_id": 1894506, "message": "vlserver: VL_GetEntryByName* requests undercounted\n\nCommit a14e791541bf19c6c377e68bc2f978fba34f94b1\nrefactored and corrected the counting of requests and aborts.\nHowever, it inadvertently introduced a new undercount for\nVL_GetEntryByName* requests, counting them only if\nNameIsId(volname), e.g. volname=\"536870911\".\n\nEnsure that the normal case of a non-\"numeric\" volname is\nalso counted.\n\nDiscovered during review of pullup to 1.6.x.\n\nChange-Id: Ic5dbc1a5871d0e0ff184dc4f3b11e92166c92f65\nReviewed-on: http://gerrit.openafs.org/12106\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2015-11-18 15:09:37-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2015-07-29 18:25:24-04:00", "committer_id": 144944, "message": "Solaris: setpag should verify that ngroups will not overflow\n\nOur ngroups management (since PAGs are still encoded as 2 groups) needs\nto ensure that we do not overflow what we are prepared to handle,\nand do not panic due to misheld mutexes if we have to return an error\nwhen handling it.\n\nFIXES 131878 (CVE-2015-3286)\n\nChange-Id: I044d5e7d3161de815b3c2dace9c211fbb4b51ffa", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2015-07-08 14:28:50-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2015-03-03 23:18:35-05:00", "committer_id": 206466, "message": "pioctl.c: restore required result variable\n\nCommit b9fb9c62a6779aa997259ddf2a83a90b08e04d5f refactored lpioctl()\nso that LINUX would have its own implementation. This also simplified\nthe other lpioctl() implementations by removing superfluous variable\n'rval'.\n\nUnfortunately, 'rval' was actually required for both DARWIN and SUN511.\nOn both of these platforms, the address of 'errcode' is passed\nto the respective ioctl_*() routine so its value may be passed back\nto lpioctl().   Therefore, 'errcode' must not also be used for the\nreturn value from these functions;  doing so results in the return\nvalue from the function overwriting the intended value of 'errcode' upon\nreturn to lpioctl().\n\nIn the case of Solaris 11, ioctl_sun_afs_syscall() always returns zero\n(as long as the ioctl device 'dev/afs' opened successfully).\nSo 'errcode' was always being set to zero, even if the pioctl had\nactually failed.  For example, without this fix, 'fs listcells'\nloops forever on Solaris 11, listing an infinite number of \"cells\",\nbecause it will never \"see\" the EDOM that informs it of the last defined\ncell.\n\nPartially revert b9fb9c62a6779aa997259ddf2a83a90b08e04d5f by restoring\nthe 'rval' variable and logic for DARWIN and SUN511.\n\nChange-Id: I4407af29d54813689cf8ccf2517bb2df4dd8eb25\nReviewed-on: http://gerrit.openafs.org/11734\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2015-02-09 18:16:16-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2015-01-04 21:47:35-05:00", "committer_id": 206466, "message": "fssync-debug: close test connection\n\nA valid fssync-debug query <volid> command issued against\na DAFS fileserver will produce the following error messages in FileLog:\n\n\tSYNC_getCom:  error receiving command\n\tFSYNC_com:  read failed; dropping connection (cnt=1)\n\nRoutine dafs_prolog() issues a tentative FSYNC_VOL_LISTVOLUMES operation\nto test for the presence of a DAFS fileserver.  If DAFS is detected,\nwe then call dafssync-debug for the original requested operation.\nHowever, the FSYNC connection for the tentative LISTVOLUMES operation\nis never closed. This results in the errors when the command completes.\n\nClose the test connection.\n\nChange-Id: I3c987289408407ba38cd184b7518e72ee1ae9cfc\nReviewed-on: http://gerrit.openafs.org/10476\nReviewed-by: Daria Brashear <shadow@your-file-system.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-11-20 15:05:21-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2014-12-03 01:10:33-05:00", "committer_id": 206466, "message": "kauth: fix klog principal name parsing\n\nIf a principal name is specified to the klog command, it is not\ncorrectly passed in the pw structure.  This in turn causes\nuninitialized storage to be passed to ka_UserAuthenticateGeneral.\nThis may either lead to a segmentation fault in klog, or cause\ngarbage to be passed to the kaserver, leading to garbage in some\nlog and audit messages.  In all cases it is impossible to authenticate\nto kaserver with a specified principal name.  However, klog\nstill works correctly when no principal name is specified.\n\nThis was introduced by commit 68ce3aa814a7e3085242e705f013f05ed5da2d5c\nwhich removed lclpw to eliminate a clang warning.  However, the clang\nwarning was misleading in this case, as lclpw was actually used\n(confusingly) to indirectly update the pw structure.\n\nInstead of reverting this commit, just update pw->pwname directly.\n\nChange-Id: I565360c6e2f970637422e8b01998d3fc29874ec4\nReviewed-on: http://gerrit.openafs.org/11145\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2014-05-13 19:18:57-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2014-10-29 17:30:27-04:00", "committer_id": 144944, "message": "viced: remove obsolete comment about alignment\n\nAlignment may have been historically relevant, but is no longer.\nRemove the comment.\n\nAlso remove the unneeded 'dummy' field which does not provide\npadding for a useful alignment.\n\nChange-Id: I447fb73c379e6f86facd955a29ffd80e8929ceff\nReviewed-on: http://gerrit.openafs.org/11289\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2014-06-12 14:20:24-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2014-08-13 10:01:45-04:00", "committer_id": 206466, "message": "opr: opr_AssertionFailed undefined in kernel module\n\nThe opr_Assert in opr_rbtree_remove is incompletely defined;\nthe opr_Assert macro is defined in opr.h, but the definition\nfor the opr_AssertionFailed routine it invokes is not included.\nThis allows the kernel module to build successfully even though\nit retains a hidden undefined reference for opr_AssertionFailed.\n\nHowever, the logic in obr_rbtree_remove ensures that this\nparticular opr_Assert can never fail - it is superfluous.\nSome compilers (e.g. gcc for Linux AFS kernel module\nbuilds) are able to recognize this and optimize it out.  Others\n(e.g. Solaris 5.12) do not, and when this happens the OpenAFS\nbuild appears to succeed but the kernel module will fail to load\ndue to the undefined symbol.\n\nRemove the superfluous opr_Assert.\n\nThis partially reverts commit 9f8b765bbdbb8913fcadbde8d3362039e9dc8e61.\n\nChange-Id: I4ed2b1873c434e41dce0f2e474926bf8b449b819\nReviewed-on: http://gerrit.openafs.org/11296\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2014-06-06 19:27:04-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2014-08-06 10:29:36-04:00", "committer_id": 144944, "message": "afs: remove cruft from Solaris afs_freevfs\n\nRemove some unused variables left behind in a previous\nrefactor of flushing vcaches during afs_shutdown\n(commit 80fe111f0044aa7a67215ad92210dc72cb7eb2c0).\n\nChange-Id: Ie0a23cb08fc2946f1c400b8ce8e15ef3dc22ec20\nReviewed-on: http://gerrit.openafs.org/11310\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2014-06-29 16:27:37-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2014-06-05 07:20:56-04:00", "committer_id": 144944, "message": "afs: maintain afs_users buckets in sorted order\n\nModify afs_GetUser() to insert a new unixuser into an afs_users\nhash bucket in sorted order, by uid/PAG.  This is in support of\nother small optimizations in future commits.\n\nChange-Id: I68c51ab38733575290aa0c8aa2a306168c5483c0\nReviewed-on: http://gerrit.openafs.org/11071\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2014-04-07 18:56:26-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2014-06-05 07:20:40-04:00", "committer_id": 144944, "message": "afs: only reset access caches for the matching cell\n\nWhen an AFS user's tokens change (unlog, aklog) or expire,\nafs_ResetAccessCache() is called to reset all the access caches\nfor that uid/PAG.\n\nHowever, a user/PAG may have tokens for multiple cells, and they\nmay expire or be set/reset at different times.  Therefore, it is\nincorrect to assume that all access caches for a uid/PAG should\nbe discarded when only one cell's tokens have changed.\n\nModify afs_ResetAccessCache() to acccept a new argument 'cell',\nand only reset the access caches for a uid/PAG if the vcache\nresides in the specified cell.  If the caller really wants to\nreset all a user's access caches, specify cell=-1.\n\nFor cache managers that are running with multiple PAGs and multiple\ncells, this should improve performance because 1) it avoids\nscanning access caches chains for vcaches that are not part of the\ncurrent cell and 2) it avoids deleting access caches that may still\ngood, thus preventing unnecessary FetchStatus calls.\n\nChange-Id: Id4c138dab45fd48265a4029880a5d57947e67a52\nReviewed-on: http://gerrit.openafs.org/11070\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2014-04-03 16:37:51-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-12-18 14:43:04-08:00", "committer_id": 206466, "message": "viced: remove dead code CheckHost()\n\nRemove CheckHost().\n\nChange-Id: I618066d28ef64fdfe94d5ab08ef89adb08a99fd6\nReviewed-on: http://gerrit.openafs.org/10580\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-12-11 17:56:47-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-10-26 06:00:44-07:00", "committer_id": 144944, "message": "auth: prevent uninitialized key list in AFS config\n\n_afsconf_OpenInternal() may exit early for a number of reasons\nbefore properly initalizing afsconf_dir->listKeys.\nThis leads to a crash when _afsconf_CloseInternal() attempts\nto clean up listKeys.\n\nPrevent this situation by calling afsconf_InitKeys() before any\npossible exit from _afsconf_OpenInternal().\n\nChange-Id: I6911427817a2518a576c00a7ea56351f9fb4fd19\nReviewed-on: http://gerrit.openafs.org/10323\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-10-03 21:42:10-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-08-18 08:38:34-07:00", "committer_id": 144944, "message": "volser: repair volserver -udpsize and -sleep options\n\ncommit cd3492d0635708f141dbb9230471434268ef2188 accidentally\nbroke the parsing of the volserver -udpsize and -sleep options.\n\nChange-Id: Ia900e4d8fda1b4d5759b46932a4b62bf5591707b\nReviewed-on: http://gerrit.openafs.org/10088\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Marc Dionne <marc.c.dionne@gmail.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-07-16 17:27:05-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-07-12 10:36:09-07:00", "committer_id": 144944, "message": "vos: incorrectly defined alias for -cell parm\n\nCommit 5d42398298ad4af91a08a08ce607754f644b37dc specified\nan incorrect offset for the -c alias for the -cell common\nparameter.\n\nChange-Id: I5a3bbe9ceb8a9fd4c21970f4ef0c64d77e9cdea4\nReviewed-on: http://gerrit.openafs.org/10021\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-06-26 11:18:01-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-03-25 11:47:51-07:00", "committer_id": 144944, "message": "salvager: prevent assertion during -orphans attach\n\nImprove JudgeEntry() detection of orphaned directories to\nprevent unintentional deletion of their '.' and '..' entries.\nThis in turn prevents a later assert (opr_Verify) when we try to\ndelete and re-add '..' in order to attach the orphan.\n\nIn JudgeEntry(), 2 sources of information about a\ndirectory entry are compared for consistency:\n - vnodeEssence (unique) from its vnode index entry\n - name, vnodeNumber and unique from its dir blob entry\n\nA directory entry may be ignored, deleted, or repaired/replaced,\nbased upon the results of these and other tests (e.g. dirOprhaned).\n\nThe '.' and '..' entries are treated as special cases because\nwe do not want to delete them at this point if this directory\nis orphaned.  However, the current test for orphanhood\n(vnodeEssence->unique == 0) is not sufficient; it could be\nzero for other reasons.  This commit now uses the dirOrphaned\nflag to test for this.\n\nHowever, we are still interested in doing the right thing\nfor '.' and '..' entries with vnodeEssence->unique == 0.\nThis may indicate that the dir blob entry is pointing at the\nwrong vnode, and that vnode has unique==0.  The current code\nincorrectly ignores (returns 0) this case.  This commit now\nnow falls through to the repair/replace code so that we can\nfind the correct vnode for this entry.\n\nThe current code assumes that the 'vnodeEssence == 0 &&\n!dirOrphaned' case doesn't exist.\n\nThanks to Andrew Deason for his assistance.\n\nChange-Id: Id7c466fcc0f031b8fccb52dc51493eeed040cf95\nReviewed-on: http://gerrit.openafs.org/9104\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-01-25 18:47:49-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-03-13 09:49:25-07:00", "committer_id": 144944, "message": "vos: noise messages when attempting to delete non-existent volume\n\nWith vos refactor commit f4e73067cdef990262c69c38ac98761620a63f25,\nsome formerly conditional volume deletes are now unconditional.\nThis regresses 'vos move' output with harmless \"error\" messages\nwhen AFSVolTransCreate() returns VNOVOL:\n  \"Failed to start transaction on <volume>\"\n  \"Volume not attached, does not exist, or not online\"\n\nModify DoVolDelete() to return early (and silently) with VNOVOL\nin this case, allowing the caller to handle this appropriately.\n\nChange-Id: I21a72e38f330335adf97ac50a7ac7d0fb97c1a9c\nReviewed-on: http://gerrit.openafs.org/9596\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-03-07 09:34:55-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-02-26 14:04:56-08:00", "committer_id": 206466, "message": "vos: Unrecognized or ambiguous switch '-c'\n\nThe documented abbreviation '-c' for '-cell' no longer works since\nthe -config option was added.  Add a parm alias '-c' to restore\ncompatibility with previous syntax.\n\nChange-Id: Ie98e470d204ea2186a95668bba2581cf3e88f729\nReviewed-on: http://gerrit.openafs.org/9276\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-02-26 09:31:43-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-02-15 15:24:59-08:00", "committer_id": 144944, "message": "salvager: incorrect comment\n\nThe comment for the code handling the -showsuid option was incorrect.\n\nChange-Id: I0a63211cf5dd8a3b2636d4e4a2cc45a55c3bf62a\nReviewed-on: http://gerrit.openafs.org/9109\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-02-14 10:51:34-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-02-05 03:48:42-08:00", "committer_id": 144944, "message": "dafs: preattach should wait for exclusive states\n\nIn rare circumstances an FSYNC_VOL_ON operation may fail silently,\nleaving the volume in its previous state.  The only clue is a FileLog\nmessage \"volume <nnnn> not in quiescent state\".\n\nThis is caused by a race condition in the volume package: an\nFSYNC_VOL_ON operation is attempting to preattach a volume\n(in VPreAttachVolumeByVp_r()) at the same time a fileserver RPC\n(e.g. FetchStatus) is detaching the volume (in VReleaseVolumeHandles_r())\nat the conclusion of attach2() logic.\n\nThe fix calls VWaitExclusiveState_r() before calling\nVPreAttachVolumeByVp_r().\n\nChange-Id: Ib66859381d29311fda3e08984dcb740eadafb340\nReviewed-on: http://gerrit.openafs.org/8814\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-12-21 17:56:14-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-01-04 06:52:00-08:00", "committer_id": 144944, "message": "vol: correct old conditional for IH_CONDSYNC\n\nTwo places in the vol package performed IH_CONDSYNC(vp->linkHandle)\nonly if AFS_NT40_ENV.  This was correct when the namei implementation\nwas windows only; however, this ifdef was apparently overlooked\nwhen namei was implemented for UNIX.\n\nChange-Id: I0cbe2c5c0a65ece0485b8c2d5a5f92eeb53725fe\nReviewed-on: http://gerrit.openafs.org/8815\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-12-21 18:26:18-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2012-09-05 09:56:26-07:00", "committer_id": 144944, "message": "vos: convertROtoRW - prevent VLDB corruption\n\nvos convertROtoRW incorrectly marks the first VLDB entry as the\nnew RW if the converted RO is not in the VLDB.  Correct this\nby creating a new valid RW site in the VLDB entry.\n\nChange-Id: I683ac10db90c2c41717c11c0d86eadc81a935e52\nReviewed-on: http://gerrit.openafs.org/8037\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-08-27 15:11:32-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2012-05-21 10:08:30-07:00", "committer_id": 144944, "message": "vos: convertROtoRW does not respect volume lock\n\nvos convertROtoRW was not checking the return code from\nubik_VL_SetLock().\n\nChange-Id: I651c543f9a0070a9d34d9cca7583437e50e95dc8\nReviewed-on: http://gerrit.openafs.org/7388\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-05-08 14:45:16-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2012-05-11 17:19:11-07:00", "committer_id": 144944, "message": "DOC: vos convertROtoRW security requirements\n\nThey were copied from another command; corrected them.\n\nChange-Id: Ic77f1a91520ec4147e42864438d98942f6a7effc\nReviewed-on: http://gerrit.openafs.org/7305\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Ken Dreyer <ktdreyer@ktdreyer.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-05-02 13:55:16-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2014-02-05 06:47:41-08:00", "committer_id": 144944, "message": "vos: move convertROtoRW core logic to vsprocs\n\nCreate new vsprocs routine UV_ConvertRO in preparation for adding\nnew function to vos convertROtoRW.\n\nChange-Id: Ic66ecbf7cacb277891bec9f8783040995ce6ce17\nReviewed-on: http://gerrit.openafs.org/9277\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-02-15 16:58:16-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2013-03-26 07:48:18-07:00", "committer_id": 144944, "message": "dafs: prevent corruption in large fsstate.dat files\n\nIf while writing to the fsstate.dat file, it exceeds the current\nsize of the file (multiples of FS_STATE_INIT_FILESIZE (8MiB)),\nwe call fs_stateResizeFile.  This un-mmaps, truncates, and\nre-mmaps the file.  Unfortunately, fs_stateMapFile() resets the\nstate->mmap.offset and .cursor, so any writes in flight over\nthe resize will overwrite the first bytes of the file (and leave\nzeros in the file where the data should have been written).\n\nUpon return from the write that caused a file resize, the offset\nis eventually corrected and the state dump continues with a\nsilent failure.  Eventually the state dump completes and the\nfile header is rewritten; this may conceal some or all of\nthe overwrite damage at offset 0.  However, any zeros near the 8MiB\noffset (and its multiples) remain as corruption.\n\nAdd a flag to fs_stateMapFile() to allow the caller to specify if\nthe offset and cursor should be preserved.  Modify fs_stateResizeFile()\nto use this capability.\n\ntesting note: temporarily reduced FS_STATE_INIT_FILESIZE to 256 bytes\nduring testing in order to make the problem easier to reproduce.\nThis problem would normally occur only on relatively large/active\nDAFS fileservers.\n\nChange-Id: I9b6c57ef7727837ae7cfc00d02192983355dad2b\nReviewed-on: http://gerrit.openafs.org/9599\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2013-03-12 22:13:20-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2012-09-04 12:46:24-07:00", "committer_id": 144944, "message": "vos: convertROtoRW incorrect warning when RO not in VLDB\n\nvos convertROtoRW will issue an incorrect warning about a partition\nmismatch if the RO to convert is not in the VLDB.  Only check the\npartition if the RO is in the VLDB.\n\nChange-Id: Ib2726bc5bf6697898ad26dc1d817143da3286ba3\nReviewed-on: http://gerrit.openafs.org/8036\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-09-04 09:06:44-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2012-08-22 12:25:06-07:00", "committer_id": 144944, "message": "vos: convertROtoRW susceptible to VLDB changes during override prompt\n\nvos convertROtoRW obtains a VLDB entry, then peforms some setup logic\n(including a possible user prompt) before obtaining a volume lock.\nThis exposes the code to possible time-of-check/time-of-use issues.\nAfter obtaining the volume lock, get a second copy of the VLDB entry\nand compare it to the first copy; if it has changed, fail the conversion\nwith an error message asking the user to re-issue the vos convertROtoRW\ncommand.\n\nChange-Id: I9c1a634cea2e22188869d54b00b7831aed12b1cd\nReviewed-on: http://gerrit.openafs.org/8008\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-08-20 17:39:06-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2012-08-09 08:05:32-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create 2nd RW on a fileserver\n\nIf an RW is already present on disk on the target server (any partition),\n'vos convertROtoRW' will still convert the RO, creating a second RW on the server.\nDetect this and refuse to convert the RO by returning EXDEV (invalid cross-device link).\n\nChange-Id: Ide15a7c39f2a975fd8597e497094b6a67b448e4f\nReviewed-on: http://gerrit.openafs.org/7934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-08-02 18:37:05-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2012-05-21 10:08:48-07:00", "committer_id": 144944, "message": "vos: volume lock not released on convertROtoRW error\n\nIf an error occurs during convertROtoRW, the volume lock may\nnot be released.\n\nChange-Id: Ic03af00676de836cade4e39a743b234a0dc9b6cf\nReviewed-on: http://gerrit.openafs.org/7389\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-05-08 15:03:46-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2012-05-16 05:40:49-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create two RW volumes\n\nIf the RW volume is listed after the RO convert target in the VLDB,\nthe code failed to detect that an RW is already present and would\ncreate a second RW volume.\n\nChange-Id: Ia77004214c4d1b18699b5527bc1fc928e8e1143d\nReviewed-on: http://gerrit.openafs.org/7385\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-05-08 10:01:12-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2012-05-12 06:33:15-07:00", "committer_id": 144944, "message": "vos: convertROtoRW misc error reporting problems\n\nFixes a few inconsistencies and bugs in some error messages.\n\nChange-Id: Ic4971c4cc3a3aa3623ee0f13161fd7793d3acb19\nReviewed-on: http://gerrit.openafs.org/7387\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2012-05-08 12:38:38-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2017-02-22 23:23:12-05:00", "committer_id": 1894506, "message": "Linux 4.10: have_submounts is gone\n\nLinux commit f74e7b33c37e vfs: remove unused have_submounts() function\n(v4.10-rc2) removes have_submounts from the tree after providing a\nreplacement (path_has_submounts) for its last in-tree caller, autofs.\n\nHowever, it turns out that OpenAFS is better off not using the new\npath_has_submounts.  Instead, OpenAFS could/should have stopped using\nhave_submounts() much earlier, back in Linux v3.18 when d_invalidate\nbecame void.  At that time, most in-tree callers of have_submounts had\nalready been converted to use check_submounts_and_drop back in v3.12.\nAt v3.18, a series of commits modified check_submounts_and_drop to\nautomatically remove child submounts (instead of returning -EBUSY if a\nsubmount was detected), then subsumed it into d_invalidate.  The end\nresult was that VFS now implicitly handles much of the housekeeping\npreviously called explicitly by the various filesystem d_revalidate\nroutines:\n- shrink_dcache_parent\n- check_submounts_and_drop\n- d_drop\n- d_invalidate\nAll in-tree filesystem d_revalidate routines were updated to take\nadvantage of this new VFS support.\n\nModify afs_linux_dentry_revalidate to no longer perform any special\nhandling for invalid dentries when D_INVALIDATE_IS_VOID.  Instead, allow\nour VFS caller to properly clean up any invalid dentry when we return 0.\n\nChange-Id: I0c4d777e6d445857c395a7b5f9a43c9024b098e9\nReviewed-on: https://gerrit.openafs.org/12506\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2016-12-07 11:11:45-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2017-03-09 19:45:26-05:00", "committer_id": 1894506, "message": "DAFS: do not save or restore host state if CPS in progress\n\nIf a fileserver is shutdown while one or more PR_GetHostCPS calls\nare in progress, this state is saved in the fsstate.dat file as\nhostFlags HCPS_WAITING, HCPS_INPROGRESS.  Other hosts that are\nmerely waiting will have HCPS_WAITING recorded.\n\nHowever, it makes no sense to restore host structs in this state,\nbecause the GetCPS calls will no longer be in progress.  Once these\nhosts become active, they will block server threads and quickly cause\nall server threads to be exhausted as other CPS requests are blocked\nbehind them.\n\nInstead, exclude these states from both save and restore.\n\nChange-Id: I3fad67b70c96dc967d6f8e3a7b393cfda076c91d\nReviewed-on: https://gerrit.openafs.org/12561\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-02-20 20:16:47-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2017-03-11 14:14:23-05:00", "committer_id": 1894506, "message": "SOLARIS: prevent BAD TRAP panic with Studio 12.5\n\nStarting with Solaris Studio 12.3, it is documented that Solaris kernel\nmodules (such as libafs) must not use any floating point, vector, or\nSIMD/SSE instructions on x86 hardware.  However, each new Studio\ncompiler release (12.4 and especially 12.5) is more likely to use these\ntypes of instructions by default.\n\nIf the libafs kernel module includes any forbidden kernel instructions,\nSolaris will panic the system with:\n  BAD TRAP:  type=7 (#nm Device not available)\n\nProvide a new autoconfig test to specify the required compiler options\n(-xvector=%none -xregs=no%float) when building the OpenAFS kernel module\nfor Solaris, so that no invalid x86 instructions are used.\n\nIn addition, reinstate default kernel module optimization for Solaris.\nIt had been disabled in commit 80592c53cbb0bce782eb39a5e64860786654be9f\nto address this same issue in Studio 12.3 and 12.4.  However, Studio\n12.5 started using some SSE instructions even with no optimization.\n\nThis commit has been tested with OpenAFS master and Studio 12.5 at all\noptimization levels (none, -xO1 through -xO5) and verified to contain no\nXMM register instructions via the following command:\n  $ gobjdump -dlr libafs64.o | grep xmm | wc -l\n\nChange-Id: Ic3c7860f7d524162fd9178a1dab5dd223722ee43\nReviewed-on: https://gerrit.openafs.org/12558\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-02-28 18:02:39-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2017-04-05 10:17:38-04:00", "committer_id": 1894506, "message": "Linux v4.11: signal stuff moved to sched/signal.h\n\nIn Linux commit c3edc4010e9d102eb7b8f17d15c2ebc425fed63c, signal_struct\nand other signal handling declarations were moved from sched.h to\nsched/signal.h.\n\nThis breaks existing OpenAFS autoconf tests for recalc_sigpending() and\ntask_struct.signal->rlim, so that the OpenAFS kernel module can no\nlonger build.\n\nModify OpenAFS autoconfig tests to cope.\n\nChange-Id: Ic9f174b92704eabcbd374feffe5fbeb92c8987ce\nReviewed-on: https://gerrit.openafs.org/12573\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Joe Gorse <jhgorse@gmail.com>\nTested-by: Joe Gorse <jhgorse@gmail.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-03-23 15:10:03-07:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2017-04-05 10:17:47-04:00", "committer_id": 1894506, "message": "Linux v4.11: cred.h is no longer included in sched.h\n\nWith Linux commit e26512fea5bcd6602dbf02a551ed073cd4529449, cred.h is no\nlonger included in sched.h.\n\nSeveral components of libafs which require cred.h were picking it by\nincluding sched.h.\n\nInstead, explicitly add an include for cred.h. cred.h begins with a\ncustomary one-shot to prevent multiple loads:\n\n #ifndef _LINUX_CRED_H\n #define _LINUX_CRED_H\n\nTherefore we don't need a new autoconf test or preprocessor conditional\nto prevent redundant includes on older Linux releases.\n\nChange-Id: Ifc496c83141d2cfbd417133feb6d87c1146e5014\nReviewed-on: https://gerrit.openafs.org/12574\nTested-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Joe Gorse <jhgorse@gmail.com>\nTested-by: Joe Gorse <jhgorse@gmail.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-03-23 18:36:44-07:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2017-01-10 21:28:08.000-05:00", "committer_id": 1894506, "message": "LINUX: eliminate unused variable warning\n\nCommit c3bbf0b4444db88192eea4580ac9e9ca3de0d286 added routine\nosi_TryEvictDentries and included new logic for D_INVALIDATE_IS_VOID.\nUnfortunately, this new code path no longer uses dentry; it also should\nhave been made conditional at that time.\n\nWrap the declaration of dentry in #ifndef D_INVALIDATE_IS_VOID to\neliminate the unused variable warning.\n\nChange-Id: I89c1430ba984539ca775da2540ea966030de0701\nReviewed-on: https://gerrit.openafs.org/12505\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2017-01-07 06:22:47.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-12-12 12:24:55.000-05:00", "committer_id": 1894506, "message": "afs: fs getcacheparms miscounts dcaches for large files\n\nfs getcacheparms issued with the -excessive option tabulates in-memory\ndcaches (\"DCentries\") by size.  However, any dcache with validPos > 2^31\nis miscounted in the 4k-16k bucket.  This is caused by a type mismatch\nbetween 'validPos' (afs_size_t) and 'size' (int) which leads to a\nnegative value for size by sign-extension.  The size comparison \"sieve\"\nfails for negative numbers; it skips the first bucket (0-4K) and dumps\nthem in the second one (4k-16k).\n\nMove the declaration of 'size' closer to its use, and declare it with\nthe same type as 'validPos' (afs_size_t) so the comparison sieve\ncorrectly places these dcaches in the last (>=1M) bucket.\n\nChange-Id: Ib0d973da92865043a4f1c068de5e9b81bcde2b9a\nReviewed-on: https://gerrit.openafs.org/12347\nReviewed-by: Stephan Wiesand <stephan.wiesand@desy.de>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-01-12 18:06:51.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-12-11 16:53:33.000-05:00", "committer_id": 1894506, "message": "afs: fs getcacheparms miscounts zero-length dcaches\n\nWhen fs getcacheparms is issued with the -excessive option, it\ntabulates all in-memory dcaches (\"DCentries\") by size.\n\ndcaches with validPos == 0 were being tabulated in the 4k-16k bucket.\n\nFix the first comparison in the 'sieve' so these dcaches will be counted\nin the correct 0-4k bucket instead.\n\nIntroduced by commit 176c2fddb95ced6c13e04e7492fc09b5551f273c\n\nChange-Id: I60acb0f115dad9f7951f0b17e5b3e37dc94321b9\nReviewed-on: https://gerrit.openafs.org/12346\nReviewed-by: Stephan Wiesand <stephan.wiesand@desy.de>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2016-01-12 17:50:36.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-11-30 12:21:39.000-05:00", "committer_id": 1894506, "message": "dir: do not leak contents of deleted directory entries\n\nDeleting an AFS directory entry (afs_dir_Delete) merely removes the\nentry logically by updating the allocation map and hash table.  However,\nthe entry itself remains on disk - that is, both the cache manager's\ncache partition and the fileserver's vice partitions.\n\nThis constitutes a leak of directory entry information, including the\nobject's name and MKfid (vnode and uniqueid).  This leaked information\nis also visible on the wire during FetchData requests and volume\noperations.\n\nModify afs_dir_Delete to clear the contents of deleted directory\nentries.\n\nPatchset notes:\nThis commit only prevents leaks for newly deleted entries.  Another\ncommit in this patchset prevents leaks of partial object names upon\nreuse of pre-existing deleted entries.  A third commit in this\npatchset prevents yet another kind of directory entry leak, when\ninternal buffers are reused to create or enlarge existing directories.\nAll three patches are required to prevent new leaks.  Two additional\nsalvager patches are also included to assist administrators in the\ncleanup of pre-existing leaks.\n\n[kaduk@mit.edu: style nit for sizeof() argument]\n\nChange-Id: Iabaafeed09a2eb648107b7068eb3dbf767aa2fe9\nReviewed-on: https://gerrit.openafs.org/12460\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-11-07 14:16:50.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-11-30 11:43:51.000-05:00", "committer_id": 1894506, "message": "dir: fileserver leaks names of file and directories\n\nSummary:\nDue to incomplete initialization or clearing of reused memory,\nfileserver directory objects are likely to contain \"dead\" directory\nentry information.  These extraneous entries are not active - that is,\nthey are logically invisible to the fileserver and client.  However,\nthey are physically visible on the fileserver vice partition, on the\nwire in FetchData replies, and on the client cache partition.  This\nconstitutes a leak of directory information.\n\nCharacterization:\nThere are three different kinds of \"dead\" residual directory entry\nleaks, each with a different cause:\n\n1. There may be partial name data after the null terminator in a live\ndirectory entry.   This happens when a previously used directory entry\nbecomes free, then is reused for a directory entry with a shorter name.\nThis may be addressed in a future commit.\n\n2. \"Dead\" directory entries are left uncleared after an object is\ndeleted or renamed.  This may be addressed in a future commit.\n\n3. Residual directory entries may be inadvertently picked up when a new\ndirectory is created or an existing directory is extended by a 2kiBi\npage.  This is the most severe problem and is addressed by this commit.\n\nThis third kind of leak is the most severe because the leaked\ndirectory information may be from _any_ other directory residing on the\nfileserver, even if the current user is not authorized to see that\ndirectory.\n\nRoot cause:\nThe fileserver's directory/buffer package shares a pool of directory\npage buffers among all fileserver threads for both directory reads and\ndirectory writes.  When the fileserver creates a new directory or\nextends an existing one, it uses any available unlocked buffer in the\npool.  This buffer is likely to contain another directory page recently\nread or written by the fileserver.  Unfortunately the fileserver only\ninitializes the page header fields (and the first two \"dot\" and \"dotdot\"\nentries in the case of a new directory).  Any residual entries in the\nrest of the directory page are now logically \"dead\", but still\nphysically present in the directory.  They can easily be seen on the\nvice partition, on the wire in a FetchData reply, and on the cache\npartition.\n\nNote:\nThe directory/buffer package used by the fileserver is also used by the\nsalvager and the volserver.  Therefore, salvager activity may also leak\ndirectory information to a certain extent.   The volserver vos split\ncommand may also contribute to leaks.  Any volserver operation that\ncreates volumes (create, move, copy, restore, release) may also have\ninsignificant leaks.  These less significant leaks are addressed by this\ncommit as well.\n\nExploits:\nAny AFS user authorized to read directories may passively exploit this\nleak by capturing wire traffic or examining his local cache as he/she\nperforms authorized reads on existing directories.  Any leaked data will\nbe for other directories the fileserver had in the buffer pool at the\ntime the authorized directories were created or extended.\n\nAny AFS user authorized to write a new directory may actively exploit\nthis leak by creating a new directory, flushing cache, then re-reading\nthe newly created directory.  Any leaked data will be for other\ndirectories the fileserver had in the buffer pool within the last few\nseconds.  In this way an authorized user may sample current fileserver\ndirectory buffer contents for as long as he/she desires, without being\ndetected.\n\nDirectories already containing leaked data may themselves be leaked,\nleading to multiple layers of leaked data propagating with every new or\nextended directory.\n\nThe names of files and directories are the most obvious source of\ninformation in this leak, but the FID vnode and uniqueid are leaked as\nwell.  Careful examination of the sequences of leaked vnode numbers and\nuniqueids may allow an attacker to:\n- Discern each layer of old directories by observing breaks in\n  consecutive runs of vnode and/or uniqueid numbers.\n- Infer which objects may reside on the same volume.\n- Discover the order in which objects were created (vnode) or modified\n  (uniqueid).\n- Know whether an object is a file (even vnode) or a directory (odd\n  vnode).\n\nPrevent new leaks by always clearing a pool buffer before using it to\ncreate or extend a directory.\n\nExisting leaks on the fileserver vice partitions may be addressed in a\nfuture commit.\n\nChange-Id: Ia980ada6a2b1b2fd473ffc71e9fd38255393b352\nReviewed-on: https://gerrit.openafs.org/12458\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-05-13 00:01:31.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-11-21 21:26:45.000-05:00", "committer_id": 1894506, "message": "doc: correct help for 'bos getlog' -restricted mode\n\nCommit f085951d39c0d6c1e6a626177c30235704317600 introduced an error in\nthe bos getlog helpfile.\n\nModify the helpfile to describe the actual restrictions imposed by\n-restricted mode.\n\nChange-Id: I8d8fedb558a1bdbd55d80046b2011f3aacc71b3f\nReviewed-on: https://gerrit.openafs.org/12454\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-11-21 13:25:40.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-11-14 02:25:51.000-05:00", "committer_id": 1894506, "message": "LINUX: do not use d_invalidate to evict dentries\n\nWhen working within the AFS filespace, commands which access large\nnumbers of OpenAFS files (e.g., git operations and builds) may result in\nactive files (e.g., the current working directory) being evicted from the\ndentry cache.  One symptom of this is the following message upon return\nto the shell prompt:\n\n\"fatal: unable to get current working directory: No such file or\ndirectory\"\n\nStarting with Linux 3.18, d_invalidate returns void because it always\nsucceeds.  Commit a42f01d5ebb13da575b3123800ee6990743155ab adapted\nOpenAFS to cope with the new return type, but not with the changed\nsemantics of d_invalidate.  Because d_invalidate can no longer fail with\n-EBUSY when invoked on an in-use dentry. OpenAFS must no longer trust it\nto preserve in-use dentries.\n\nModify the dentry eviction code to use a method (d_prune_aliases) that\ndoes not evict in-use dentries.\n\nChange-Id: I1826ae2a89ef4cf6b631da532521bb17bb8da513\nReviewed-on: https://gerrit.openafs.org/12363\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-08-04 18:42:27.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-11-06 15:15:46.000-05:00", "committer_id": 1894506, "message": "salvager: fix error message for invalid volumeid\n\nIf the specified volumeid is invalid (e.g. volume name was specified\ninstead of volume number), the error is reported via Log().  However,\ncommit 24fed351fd13b38bfaf9f278c914a47782dbf670 moved the log opening\nlogic from before this check to after it, effectively making this Log()\ncall a no-op.\n\nInstead, use fprintf to issue the error message.\n\nChange-Id: I488bc93b178c7973e48d7c9ef4e7ecde9ba62696\nReviewed-on: https://gerrit.openafs.org/12288\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-05-18 00:36:12.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-10-29 22:37:33.000-04:00", "committer_id": 1894506, "message": "LINUX: split dentry eviction from osi_TryEvictVCache\n\nTo make osi_TryEvictVCache clearer, and to prepare for a future change\nin dentry eviction, split the dentry eviction logic into its own routine\nosi_TryEvictDentries.\n\nNo functional difference should be incurred by this commit.\n\nChange-Id: I5b255fd541d09159d70f8d7521ca8f2ae7fe5c2b\nReviewed-on: https://gerrit.openafs.org/12362\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Joe Gorse <jhgorse@gmail.com>", "repo_description": null, "generate_at": "2016-08-04 18:18:15.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-10-25 21:37:33.000-04:00", "committer_id": 1894506, "message": "Linux 4.9: inode_change_ok() becomes setattr_prepare()\n\nLinux commit 31051c85b5e2 \"fs: Give dentry to inode_change_ok() instead\nof inode\" renames and modifies inode_change_ok(inode, attrs) to\nsetattr_prepare(dentry, attrs).\n\nModify OpenAFS to cope.\n\nChange-Id: I72f8dfbdbd25d7c775e9c35116e323ea4359e95c\nReviewed-on: https://gerrit.openafs.org/12418\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-10-20 00:49:37.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-10-25 21:33:25.000-04:00", "committer_id": 1894506, "message": "Linux 4.9: inode_operation rename now takes flags\n\nIn Linux 3.15 commit 520c8b16505236fc82daa352e6c5e73cd9870cff,\ninode_operation rename2() was added.  It takes the same arguments as\nrename(), with an added flags argument supporting the following values:\n\nRENAME_NOREPLACE: if \"new\" name exists, fail with -EEXIST.  Without\nthis flag, the default behavior is to replace the \"new\" existing file.\n\nRENAME_EXCHANGE: exchange source and target; both must exist.\n\nOpenAFS never implemented a .rename2() routine because it was optional\nwhen introduced at Linux v3.15.\n\nIn Linux 4.9-rc1 the following commits remove the last in-tree uses of\n.rename() and converts .rename2() to .rename().\naadfa8019e81 vfs: add note about i_op->rename changes to porting\n2773bf00aeb9 fs: rename \"rename2\" i_op to \"rename\"\n18fc84dafaac vfs: remove unused i_op->rename\n1cd66c93ba8c fs: make remaining filesystems use .rename2\ne0e0be8a8355 libfs: support RENAME_NOREPLACE in simple_rename()\nf03b8ad8d386 fs: support RENAME_NOREPLACE for local filesystems\n\nWith these changes, it is now mandatory for OpenAFS afs_linux_rename()\nto accept a 5th flag argument.\n\nAdd an autoconfig test to determine the signature of .rename().  Use this\ninformation to implement afs_linux_rename() with the appropriate number\nof arguments.  Implement \"toleration support\" for the flags option by\ntreating a zero flag as a normal rename; if any flags are specified,\nreturn -EINVAL to indicate the OpenAFS filesystem does not yet support\nany flags.\n\nChange-Id: I165d2b7956942446d97beda8504ac1ed5185a036\nReviewed-on: https://gerrit.openafs.org/12391\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-09-16 19:01:19.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-10-25 21:28:14.000-04:00", "committer_id": 1894506, "message": "Linux 4.9: deal with demise of GROUP_AT\n\nLinux commit 81243eacfa40 \"cred: simpler, 1D supplementary groups\"\nrefactors the group_info struct, removing some members (which OpenAFS\nreferences only through the GROUP_AT macro) and adding a gid member.\nThe GROUP_AT macro is also removed from the tree.\n\nAdd an autoconfigure test for the new group_info member gid and define a\nreplacement GROUP_AT macro to do the right thing under the new regime.\n\nChange-Id: I85a52c0ae0d91fc141a523f443a4ffc05eb72a2b\nReviewed-on: https://gerrit.openafs.org/12390\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-09-14 18:01:22.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-07-20 23:24:59.000-04:00", "committer_id": 1894506, "message": "SOLARIS: corrupted content of mmap'd files over 4GiB\n\nMany Solaris programs and utilities (notably mdb and cp) use mmap() in\ntheir implementation.  When AFS files exceeding 4GiB are mmap'd, the\ncontents of the file will be incorrectly mapped into memory. Starting at\n4GiB + 1, the first 4GiB will be repeated for the remainder of the file.\nIf the mmap'd file is written back to storage (AFS or otherwise), the\nnewly created file will also be corrupted.\n\nThis is due to a bug in the afs_map() routine that supports mmap() of\nAFS files on Solaris.  The segvn_crarg.offset passed to the Solaris\nvirtual memory APIs is incorrectly cast to u_int, causing it to wrap at\n4GiB.\n\nAlthough Solaris passes the offset from fop_map() to afs_map() as type\noffset_t, the destination segvn_crargs.offset is actually type\nu_offset_t.  Existing examples of other Solaris filesystems (e.g.\nzfs_map() ) cast the offset from offset_t to u_offset_t when assigning to\nsegvn_crargs.offset.  If it's good enough for ZFS, it's good enough for\nAFS.\n\nCorrectly cast the offset to u_offset_t.\n\nThanks to Robert Milkowski for the report and diagnosis.\n\nChange-Id: Id25363255ec011f2ad7e003ca3e4a1385bebff7e\nReviewed-on: https://gerrit.openafs.org/12292\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-05-27 16:44:17.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-07-20 19:39:11.000-04:00", "committer_id": 1894506, "message": "SOLARIS: support mmap() over 4GiB\n\nWhen mmap() is issued for exactly 4GiB of a large AFS-resident file,\nmmap() fails with ENOMEM.  This is because the AFS code is handling the\nrequested length as u_int instead of size_t, resulting in a 0 being\npassed back to the caller.\n\nWhen mmap() is issued for non-multiples of 4GiB, the subsequent mapping\nwill not contain all the requested pages, and for the same reason - the\nmapped size has been truncated to 32 bits.  This results in SIGSEGV when\naccessing the non-mapped page(s).\n\nFix the signature of afs_map() to specify the correct type for the length.\n\nThanks to Robert Milkowski for the report and diagnosis.\n\nChange-Id: I8a9f0cb04ff9b80de5516e14d0679b06ef0b3f9a\nReviewed-on: https://gerrit.openafs.org/12291\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nTested-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-05-26 16:53:47.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-07-18 17:38:02.000-04:00", "committer_id": 1894506, "message": "afs: incorrect comments for afs_ClearStatus\n\nThe brief description was identical to the one for afs_Analyze.\n\nUpdate it to accurately describe afs_ClearStatus.\n\nChange-Id: I70ceca41342c1b47950c35f567f8ae5a2566f925\nReviewed-on: https://gerrit.openafs.org/12005\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2015-06-18 15:32:36.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-07-05 21:36:02.000-04:00", "committer_id": 1894506, "message": "afs: document missing afs_Analyze parm\n\nrxconn was missing from the comments; add it.\n\nChange-Id: I8c0cf212ca2952d3a23c3bb5db1857dfd9a8f41e\nReviewed-on: https://gerrit.openafs.org/12004\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2015-06-18 15:54:28.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-05-13 00:03:08.000-04:00", "committer_id": 1894506, "message": "salvageserver: unable to write child log: out of memory\n\nChanges to salvageserver logging in commit\n24fed351fd13b38bfaf9f278c914a47782dbf670\nintroduced a new bug in SalvageLogCleanup; the test for calloc() failure\nwas inadvertently inverted.\n\nFix the sense of the test.\n\nChange-Id: Id0ee4ac3e60d7285163a9ab0b32bd7d48e570ac0\nReviewed-on: https://gerrit.openafs.org/12284\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-05-12 22:23:36.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-05-10 23:42:22.000-04:00", "committer_id": 1894506, "message": "salvageserver: segfault in DoSalvageVolume\n\nA typo in the recent logging changes for salvageserver\nad455347bc99d1bd499535995958b5f77c2388ff\ncaused a bad address to be passed to memset.\n\nCorrectly memset the log options as intended.\n\nChange-Id: Ifef46defcc6da56df4e58f8ed9029717a77c0b39\nReviewed-on: https://gerrit.openafs.org/12282\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2016-05-10 22:51:38.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-02-22 23:54:25.000-05:00", "committer_id": 1894506, "message": "DAFS: large volume support - fileserver crash after \"addled bitmap\"\n\nAny DAFS fileserver operation that allocates a new vnode but fails\nto update the vnode index will crash:\n\n\"Fatal Rx error: assertion failed: --vp->nWaiters >= 0,\n\t\t\t\tfile: ../vol/volume.c, line: nnnn\"\n\nNote: This crash was exposed by other bugs (to be addressed in future\ncommits) in OpenAFS large volume support.  However, there may\nbe other failure paths (unrelated to large volumes) that expose\nthis error as well.\n\nWhen VAllocVnode() must allocate a new vnode but fails while\nupdating the vnode index file (e.g. an \"addled bitmap\" due to other\nbugs in working with a vnode index larger than 2^31 bytes), it branches\nto common recovery logic at label error_encountered:.\n\nPart of this recovery is to call VFreeBitmapEntry_r().  Commit\n08ffe3e81d875b58ae5fe4c5733845d5132913a0 added a VOL_FREE_BITMAP_WAIT\nflag to VFreeBitmapEntry() in order to prevent races with VAllocBitmapEntry().\nIf the caller specifies VOL_FREE_BITMAP_WAIT, VFreeBitmapEntry_r will\ncall VCreateReservation_r() and VWaitExclusiveState_r().  However, the\nexit from VFreeBitmapEntry_r() calls VCancelReservation_r() unconditionally.\nThis works correctly with the majority of callers to VFreeBitmapEntry_r,\nwhich do specify the VOL_FREE_BITMAP_WAIT flag.\n\nHowever, the VAllocVnode() error_encountered logic must specify 0 for\nthis flag because the thread is already in an exclusive state\n(VOL_STATE_VNODE_ALLOC).  This correctly causes VFreeBitmapEntry_r() to\nforgo both the reservation and wait-for-exclusive-state.  However, before\nexit it erroneously calls VCancelReservation_r().  We now have unbalanced\nreservations (nWaiters); this causes an assert when the VAllocVnode()\nerror_encountered recovery code later calls VCancelReservation_r()\nfor what it believes is its own prior reservation.\n\nModify VFreeBitmapEntry_r() to make its final VCancelReservation_r()\nconditional on flag VOL_FREE_BITMAP_WAIT.\n\nChange-Id: Id6cf6b1279b11e6dfc4704bba5739912f663beca\nReviewed-on: http://gerrit.openafs.org/11983\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@auristor.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2014-03-27 06:36:59.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-02-22 23:23:38.000-05:00", "committer_id": 1894506, "message": "bozo: allow start of fs and dafs bnodes with options\n\nfs_create() and dafs_create() issue stat() to verify\nthe existence of each executable specified in the bnode.\nHowever, commit fda2bc874751ca479365dc6389c0eebb41a0bda1\ninadvertently removed the code that stripped any command\narguments before the stat().  Therefore, any bnode that\nspecifies arguments (e.g. /usr/afs/bin/dafileserver -d 5),\ncauses the stat() to fail and the bnode will not start.\n\nRename function AppendExecutableExtension() to a less\n\"window-ish\" name: PathToExecutable().\n\nModify the Windows version of PathToExecutable()\nto properly strip arguments.\n\nReimplement the Unix macro as function PathToExecutable()\nthat properly strips arguments.\n\nChange-Id: I04f7ce2afb8211bd12b9063db1335738bff1cc1e\nReviewed-on: http://gerrit.openafs.org/11934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2015-07-18 01:12:51.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2016-02-17 14:06:42.000-05:00", "committer_id": 1894506, "message": "viced: incorrect FID audit of BulkStatus and InlineBulkStatus\n\nThe audit code for object AUD_FIDS is off by one - we list the\nfirst FID twice and skip the last FID.\n\nRepair so all FIDs are properly audited.\n\nChange-Id: I99f4687e25031eb26ccd7e07b732217b098005de\nReviewed-on: http://gerrit.openafs.org/12191\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams <3chas3@gmail.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-02-16 14:55:03.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2015-12-21 18:14:35.000-05:00", "committer_id": 1894506, "message": "afs: incorrect types for AFSDB IPv4 addresses\n\nDNS lookup results were being handled with int types.\n\nFortunately, this seems to be harmless, due to use of\nmemcpy when the types don't match, and assignment only\nwhen both sides were int.\n\nHowever, to avoid any future unpleasantness, change\nthem to afs_uint32.\n\nNo functional change should be incurred.\n\nChange-Id: I31aeabb4ae3194a00b29a1fa767d05af167b4e4f\nReviewed-on: http://gerrit.openafs.org/12117\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams <3chas3@gmail.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2015-11-23 21:03:57.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2015-12-15 21:39:01.000-05:00", "committer_id": 1894506, "message": "afs: pioctl kernel memory overrun\n\nCVE-2015-8312:\nAny pioctl with an input buffer size (ViceIoctl->in_size)\nexactly equal to AFS_LRALLOCSIZE (4096 bytes) will cause\na one-byte overwrite of its kernel memory working buffer.\nThis may crash the operating system or cause other\nundefined behavior.\n\nThe attacking pioctl must be a valid AFS pioctl code.\nHowever, it need not specify valid arguments (in the ViceIoctl),\nsince only rudimentary checking is done in afs_HandlePioctl.\nMost argument validation occurs later in the individual\npioctl handlers.\n\nNor does the issuer need to be authenticated or authorized\nin any way, since authorization checks also occur much later,\nin the individual pioctl handlers.  An unauthorized user\nmay therefore trigger the overrun by either crafting his\nown malicious pioctl, or by issuing a privileged\ncommand, e.g. 'fs newalias', with appropriately sized but\notherwise arbitrary arguments.  In the latter case, the\nattacker will see the expected error message:\n \"fs: You do not have the required rights to do this operation\"\nbut in either case the damage has been done.\n\nPioctls are not logged or audited in any way (except those\nthat cause loggable or auditable events as side effects).\n\nroot cause:\nafs_HandlePioctli() calls afs_pd_alloc() to allocate two\ntwo afs_pdata structs, one for input and one for output.\nThe memory for these buffers is based on the requested\nsize, plus at least one extra byte for the null terminator\nto be set later:\n  requested size\tallocated\n  =================\t=================================\n  > AFS_LRALLOCSIZ\tosi_Alloc(size+1)\n  <= AFS_LRALLOCSIZ\tafs_AllocLargeSize(AFS_LRALLOCSIZ)\n\nafs_HandlePioctl then adds a null terminator to each buffer,\none byte past the requested size.  This is safe in all cases\nexcept one: if the requested in_size was _exactly_\nAFS_LRALLOCSIZ (4096 bytes), this null is one byte beyond\nthe allocated storage, zeroing a byte of kernel memory.\n\nCommit 6260cbecd0795c4795341bdcf98671de6b9a43fb introduced\nthe null terminators and they were correct at that time.\nBut the commit message warns:\n \"note that this works because PIGGYSIZE is always less than\n  AFS_LRALLOCSIZ\"\n\nCommit f8ed1111d76bbf36a466036ff74b44e1425be8bd introduced\nthe bug by increasing the maximum size of the buffers but\nfailing to account correctly for the null terminator in\nthe case of input buffer size == AFS_LRALLOCSIZ.\n\nCommit 592a99d6e693bc640e2bdfc2e7e5243fcedc8f93 (master\nversion of one of the fixes in the recent 1.6.13 security\nrelease) is the fix that drew my attention to this new\nbug.  Ironically, 592a99 (combined with this commit), will\nmake it possible to eliminate the \"offending\" null termination\nline altogether since it will now be performed automatically by\nafs_pd_alloc().\n\n[kaduk@mit.edu: adjust commit message for CVE number assignment,\nreduce unneeded churn in the diff.]\n\nChange-Id: I1a536b3a53ec4b6721fbd39a915207da4358720c", "repo_description": null, "generate_at": "2015-08-07 11:56:16.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2015-11-18 22:10:05.000-05:00", "committer_id": 1894506, "message": "vlserver: VL_GetEntryByName* requests undercounted\n\nCommit a14e791541bf19c6c377e68bc2f978fba34f94b1\nrefactored and corrected the counting of requests and aborts.\nHowever, it inadvertently introduced a new undercount for\nVL_GetEntryByName* requests, counting them only if\nNameIsId(volname), e.g. volname=\"536870911\".\n\nEnsure that the normal case of a non-\"numeric\" volname is\nalso counted.\n\nDiscovered during review of pullup to 1.6.x.\n\nChange-Id: Ic5dbc1a5871d0e0ff184dc4f3b11e92166c92f65\nReviewed-on: http://gerrit.openafs.org/12106\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2015-11-18 15:09:37.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2015-07-29 18:25:24.000-04:00", "committer_id": 144944, "message": "Solaris: setpag should verify that ngroups will not overflow\n\nOur ngroups management (since PAGs are still encoded as 2 groups) needs\nto ensure that we do not overflow what we are prepared to handle,\nand do not panic due to misheld mutexes if we have to return an error\nwhen handling it.\n\nFIXES 131878 (CVE-2015-3286)\n\nChange-Id: I044d5e7d3161de815b3c2dace9c211fbb4b51ffa", "repo_description": null, "generate_at": "2015-07-08 14:28:50.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2015-03-03 23:18:35.000-05:00", "committer_id": 206466, "message": "pioctl.c: restore required result variable\n\nCommit b9fb9c62a6779aa997259ddf2a83a90b08e04d5f refactored lpioctl()\nso that LINUX would have its own implementation. This also simplified\nthe other lpioctl() implementations by removing superfluous variable\n'rval'.\n\nUnfortunately, 'rval' was actually required for both DARWIN and SUN511.\nOn both of these platforms, the address of 'errcode' is passed\nto the respective ioctl_*() routine so its value may be passed back\nto lpioctl().   Therefore, 'errcode' must not also be used for the\nreturn value from these functions;  doing so results in the return\nvalue from the function overwriting the intended value of 'errcode' upon\nreturn to lpioctl().\n\nIn the case of Solaris 11, ioctl_sun_afs_syscall() always returns zero\n(as long as the ioctl device 'dev/afs' opened successfully).\nSo 'errcode' was always being set to zero, even if the pioctl had\nactually failed.  For example, without this fix, 'fs listcells'\nloops forever on Solaris 11, listing an infinite number of \"cells\",\nbecause it will never \"see\" the EDOM that informs it of the last defined\ncell.\n\nPartially revert b9fb9c62a6779aa997259ddf2a83a90b08e04d5f by restoring\nthe 'rval' variable and logic for DARWIN and SUN511.\n\nChange-Id: I4407af29d54813689cf8ccf2517bb2df4dd8eb25\nReviewed-on: http://gerrit.openafs.org/11734\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2015-02-09 18:16:16.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2015-01-04 21:47:35.000-05:00", "committer_id": 206466, "message": "fssync-debug: close test connection\n\nA valid fssync-debug query <volid> command issued against\na DAFS fileserver will produce the following error messages in FileLog:\n\n\tSYNC_getCom:  error receiving command\n\tFSYNC_com:  read failed; dropping connection (cnt=1)\n\nRoutine dafs_prolog() issues a tentative FSYNC_VOL_LISTVOLUMES operation\nto test for the presence of a DAFS fileserver.  If DAFS is detected,\nwe then call dafssync-debug for the original requested operation.\nHowever, the FSYNC connection for the tentative LISTVOLUMES operation\nis never closed. This results in the errors when the command completes.\n\nClose the test connection.\n\nChange-Id: I3c987289408407ba38cd184b7518e72ee1ae9cfc\nReviewed-on: http://gerrit.openafs.org/10476\nReviewed-by: Daria Brashear <shadow@your-file-system.com>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2013-11-20 15:05:21.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2014-12-03 01:10:33.000-05:00", "committer_id": 206466, "message": "kauth: fix klog principal name parsing\n\nIf a principal name is specified to the klog command, it is not\ncorrectly passed in the pw structure.  This in turn causes\nuninitialized storage to be passed to ka_UserAuthenticateGeneral.\nThis may either lead to a segmentation fault in klog, or cause\ngarbage to be passed to the kaserver, leading to garbage in some\nlog and audit messages.  In all cases it is impossible to authenticate\nto kaserver with a specified principal name.  However, klog\nstill works correctly when no principal name is specified.\n\nThis was introduced by commit 68ce3aa814a7e3085242e705f013f05ed5da2d5c\nwhich removed lclpw to eliminate a clang warning.  However, the clang\nwarning was misleading in this case, as lclpw was actually used\n(confusingly) to indirectly update the pw structure.\n\nInstead of reverting this commit, just update pw->pwname directly.\n\nChange-Id: I565360c6e2f970637422e8b01998d3fc29874ec4\nReviewed-on: http://gerrit.openafs.org/11145\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2014-05-13 19:18:57.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2014-10-29 17:30:27.000-04:00", "committer_id": 144944, "message": "viced: remove obsolete comment about alignment\n\nAlignment may have been historically relevant, but is no longer.\nRemove the comment.\n\nAlso remove the unneeded 'dummy' field which does not provide\npadding for a useful alignment.\n\nChange-Id: I447fb73c379e6f86facd955a29ffd80e8929ceff\nReviewed-on: http://gerrit.openafs.org/11289\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-06-12 14:20:24.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2014-08-13 10:01:45.000-04:00", "committer_id": 206466, "message": "opr: opr_AssertionFailed undefined in kernel module\n\nThe opr_Assert in opr_rbtree_remove is incompletely defined;\nthe opr_Assert macro is defined in opr.h, but the definition\nfor the opr_AssertionFailed routine it invokes is not included.\nThis allows the kernel module to build successfully even though\nit retains a hidden undefined reference for opr_AssertionFailed.\n\nHowever, the logic in obr_rbtree_remove ensures that this\nparticular opr_Assert can never fail - it is superfluous.\nSome compilers (e.g. gcc for Linux AFS kernel module\nbuilds) are able to recognize this and optimize it out.  Others\n(e.g. Solaris 5.12) do not, and when this happens the OpenAFS\nbuild appears to succeed but the kernel module will fail to load\ndue to the undefined symbol.\n\nRemove the superfluous opr_Assert.\n\nThis partially reverts commit 9f8b765bbdbb8913fcadbde8d3362039e9dc8e61.\n\nChange-Id: I4ed2b1873c434e41dce0f2e474926bf8b449b819\nReviewed-on: http://gerrit.openafs.org/11296\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Perry Ruiter <pruiter@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2014-06-06 19:27:04.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2014-08-06 10:29:36.000-04:00", "committer_id": 144944, "message": "afs: remove cruft from Solaris afs_freevfs\n\nRemove some unused variables left behind in a previous\nrefactor of flushing vcaches during afs_shutdown\n(commit 80fe111f0044aa7a67215ad92210dc72cb7eb2c0).\n\nChange-Id: Ie0a23cb08fc2946f1c400b8ce8e15ef3dc22ec20\nReviewed-on: http://gerrit.openafs.org/11310\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-06-29 16:27:37.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2014-06-05 07:20:56.000-04:00", "committer_id": 144944, "message": "afs: maintain afs_users buckets in sorted order\n\nModify afs_GetUser() to insert a new unixuser into an afs_users\nhash bucket in sorted order, by uid/PAG.  This is in support of\nother small optimizations in future commits.\n\nChange-Id: I68c51ab38733575290aa0c8aa2a306168c5483c0\nReviewed-on: http://gerrit.openafs.org/11071\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-04-07 18:56:26.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2014-06-05 07:20:40.000-04:00", "committer_id": 144944, "message": "afs: only reset access caches for the matching cell\n\nWhen an AFS user's tokens change (unlog, aklog) or expire,\nafs_ResetAccessCache() is called to reset all the access caches\nfor that uid/PAG.\n\nHowever, a user/PAG may have tokens for multiple cells, and they\nmay expire or be set/reset at different times.  Therefore, it is\nincorrect to assume that all access caches for a uid/PAG should\nbe discarded when only one cell's tokens have changed.\n\nModify afs_ResetAccessCache() to acccept a new argument 'cell',\nand only reset the access caches for a uid/PAG if the vcache\nresides in the specified cell.  If the caller really wants to\nreset all a user's access caches, specify cell=-1.\n\nFor cache managers that are running with multiple PAGs and multiple\ncells, this should improve performance because 1) it avoids\nscanning access caches chains for vcaches that are not part of the\ncurrent cell and 2) it avoids deleting access caches that may still\ngood, thus preventing unnecessary FetchStatus calls.\n\nChange-Id: Id4c138dab45fd48265a4029880a5d57947e67a52\nReviewed-on: http://gerrit.openafs.org/11070\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2014-04-03 16:37:51.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2014-02-05 06:47:41.000-08:00", "committer_id": 144944, "message": "vos: move convertROtoRW core logic to vsprocs\n\nCreate new vsprocs routine UV_ConvertRO in preparation for adding\nnew function to vos convertROtoRW.\n\nChange-Id: Ic66ecbf7cacb277891bec9f8783040995ce6ce17\nReviewed-on: http://gerrit.openafs.org/9277\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: D Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-02-15 16:58:16.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-12-18 14:43:04.000-08:00", "committer_id": 206466, "message": "viced: remove dead code CheckHost()\n\nRemove CheckHost().\n\nChange-Id: I618066d28ef64fdfe94d5ab08ef89adb08a99fd6\nReviewed-on: http://gerrit.openafs.org/10580\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2013-12-11 17:56:47.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-10-26 06:00:44.000-07:00", "committer_id": 144944, "message": "auth: prevent uninitialized key list in AFS config\n\n_afsconf_OpenInternal() may exit early for a number of reasons\nbefore properly initalizing afsconf_dir->listKeys.\nThis leads to a crash when _afsconf_CloseInternal() attempts\nto clean up listKeys.\n\nPrevent this situation by calling afsconf_InitKeys() before any\npossible exit from _afsconf_OpenInternal().\n\nChange-Id: I6911427817a2518a576c00a7ea56351f9fb4fd19\nReviewed-on: http://gerrit.openafs.org/10323\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-10-03 21:42:10.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-08-18 08:38:34.000-07:00", "committer_id": 144944, "message": "volser: repair volserver -udpsize and -sleep options\n\ncommit cd3492d0635708f141dbb9230471434268ef2188 accidentally\nbroke the parsing of the volserver -udpsize and -sleep options.\n\nChange-Id: Ia900e4d8fda1b4d5759b46932a4b62bf5591707b\nReviewed-on: http://gerrit.openafs.org/10088\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Marc Dionne <marc.c.dionne@gmail.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-07-16 17:27:05.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-07-12 10:36:09.000-07:00", "committer_id": 144944, "message": "vos: incorrectly defined alias for -cell parm\n\nCommit 5d42398298ad4af91a08a08ce607754f644b37dc specified\nan incorrect offset for the -c alias for the -cell common\nparameter.\n\nChange-Id: I5a3bbe9ceb8a9fd4c21970f4ef0c64d77e9cdea4\nReviewed-on: http://gerrit.openafs.org/10021\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2013-06-26 11:18:01.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-03-26 07:48:18.000-07:00", "committer_id": 144944, "message": "dafs: prevent corruption in large fsstate.dat files\n\nIf while writing to the fsstate.dat file, it exceeds the current\nsize of the file (multiples of FS_STATE_INIT_FILESIZE (8MiB)),\nwe call fs_stateResizeFile.  This un-mmaps, truncates, and\nre-mmaps the file.  Unfortunately, fs_stateMapFile() resets the\nstate->mmap.offset and .cursor, so any writes in flight over\nthe resize will overwrite the first bytes of the file (and leave\nzeros in the file where the data should have been written).\n\nUpon return from the write that caused a file resize, the offset\nis eventually corrected and the state dump continues with a\nsilent failure.  Eventually the state dump completes and the\nfile header is rewritten; this may conceal some or all of\nthe overwrite damage at offset 0.  However, any zeros near the 8MiB\noffset (and its multiples) remain as corruption.\n\nAdd a flag to fs_stateMapFile() to allow the caller to specify if\nthe offset and cursor should be preserved.  Modify fs_stateResizeFile()\nto use this capability.\n\ntesting note: temporarily reduced FS_STATE_INIT_FILESIZE to 256 bytes\nduring testing in order to make the problem easier to reproduce.\nThis problem would normally occur only on relatively large/active\nDAFS fileservers.\n\nChange-Id: I9b6c57ef7727837ae7cfc00d02192983355dad2b\nReviewed-on: http://gerrit.openafs.org/9599\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-03-12 22:13:20.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-03-25 11:47:51.000-07:00", "committer_id": 144944, "message": "salvager: prevent assertion during -orphans attach\n\nImprove JudgeEntry() detection of orphaned directories to\nprevent unintentional deletion of their '.' and '..' entries.\nThis in turn prevents a later assert (opr_Verify) when we try to\ndelete and re-add '..' in order to attach the orphan.\n\nIn JudgeEntry(), 2 sources of information about a\ndirectory entry are compared for consistency:\n - vnodeEssence (unique) from its vnode index entry\n - name, vnodeNumber and unique from its dir blob entry\n\nA directory entry may be ignored, deleted, or repaired/replaced,\nbased upon the results of these and other tests (e.g. dirOprhaned).\n\nThe '.' and '..' entries are treated as special cases because\nwe do not want to delete them at this point if this directory\nis orphaned.  However, the current test for orphanhood\n(vnodeEssence->unique == 0) is not sufficient; it could be\nzero for other reasons.  This commit now uses the dirOrphaned\nflag to test for this.\n\nHowever, we are still interested in doing the right thing\nfor '.' and '..' entries with vnodeEssence->unique == 0.\nThis may indicate that the dir blob entry is pointing at the\nwrong vnode, and that vnode has unique==0.  The current code\nincorrectly ignores (returns 0) this case.  This commit now\nnow falls through to the repair/replace code so that we can\nfind the correct vnode for this entry.\n\nThe current code assumes that the 'vnodeEssence == 0 &&\n!dirOrphaned' case doesn't exist.\n\nThanks to Andrew Deason for his assistance.\n\nChange-Id: Id7c466fcc0f031b8fccb52dc51493eeed040cf95\nReviewed-on: http://gerrit.openafs.org/9104\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-01-25 18:47:49.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-03-13 09:49:25.000-07:00", "committer_id": 144944, "message": "vos: noise messages when attempting to delete non-existent volume\n\nWith vos refactor commit f4e73067cdef990262c69c38ac98761620a63f25,\nsome formerly conditional volume deletes are now unconditional.\nThis regresses 'vos move' output with harmless \"error\" messages\nwhen AFSVolTransCreate() returns VNOVOL:\n  \"Failed to start transaction on <volume>\"\n  \"Volume not attached, does not exist, or not online\"\n\nModify DoVolDelete() to return early (and silently) with VNOVOL\nin this case, allowing the caller to handle this appropriately.\n\nChange-Id: I21a72e38f330335adf97ac50a7ac7d0fb97c1a9c\nReviewed-on: http://gerrit.openafs.org/9596\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2013-03-07 09:34:55.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-02-26 14:04:56.000-08:00", "committer_id": 206466, "message": "vos: Unrecognized or ambiguous switch '-c'\n\nThe documented abbreviation '-c' for '-cell' no longer works since\nthe -config option was added.  Add a parm alias '-c' to restore\ncompatibility with previous syntax.\n\nChange-Id: Ie98e470d204ea2186a95668bba2581cf3e88f729\nReviewed-on: http://gerrit.openafs.org/9276\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>", "repo_description": null, "generate_at": "2013-02-26 09:31:43.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-02-15 15:24:59.000-08:00", "committer_id": 144944, "message": "salvager: incorrect comment\n\nThe comment for the code handling the -showsuid option was incorrect.\n\nChange-Id: I0a63211cf5dd8a3b2636d4e4a2cc45a55c3bf62a\nReviewed-on: http://gerrit.openafs.org/9109\nReviewed-by: Jeffrey Altman <jaltman@your-file-system.com>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2013-02-14 10:51:34.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-02-05 03:48:42.000-08:00", "committer_id": 144944, "message": "dafs: preattach should wait for exclusive states\n\nIn rare circumstances an FSYNC_VOL_ON operation may fail silently,\nleaving the volume in its previous state.  The only clue is a FileLog\nmessage \"volume <nnnn> not in quiescent state\".\n\nThis is caused by a race condition in the volume package: an\nFSYNC_VOL_ON operation is attempting to preattach a volume\n(in VPreAttachVolumeByVp_r()) at the same time a fileserver RPC\n(e.g. FetchStatus) is detaching the volume (in VReleaseVolumeHandles_r())\nat the conclusion of attach2() logic.\n\nThe fix calls VWaitExclusiveState_r() before calling\nVPreAttachVolumeByVp_r().\n\nChange-Id: Ib66859381d29311fda3e08984dcb740eadafb340\nReviewed-on: http://gerrit.openafs.org/8814\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>", "repo_description": null, "generate_at": "2012-12-21 17:56:14.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2013-01-04 06:52:00.000-08:00", "committer_id": 144944, "message": "vol: correct old conditional for IH_CONDSYNC\n\nTwo places in the vol package performed IH_CONDSYNC(vp->linkHandle)\nonly if AFS_NT40_ENV.  This was correct when the namei implementation\nwas windows only; however, this ifdef was apparently overlooked\nwhen namei was implemented for UNIX.\n\nChange-Id: I0cbe2c5c0a65ece0485b8c2d5a5f92eeb53725fe\nReviewed-on: http://gerrit.openafs.org/8815\nReviewed-by: Derrick Brashear <shadow@your-file-system.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-12-21 18:26:18.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2012-09-05 09:56:26.000-07:00", "committer_id": 144944, "message": "vos: convertROtoRW - prevent VLDB corruption\n\nvos convertROtoRW incorrectly marks the first VLDB entry as the\nnew RW if the converted RO is not in the VLDB.  Correct this\nby creating a new valid RW site in the VLDB entry.\n\nChange-Id: I683ac10db90c2c41717c11c0d86eadc81a935e52\nReviewed-on: http://gerrit.openafs.org/8037\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-27 15:11:32.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2012-09-04 12:46:24.000-07:00", "committer_id": 144944, "message": "vos: convertROtoRW incorrect warning when RO not in VLDB\n\nvos convertROtoRW will issue an incorrect warning about a partition\nmismatch if the RO to convert is not in the VLDB.  Only check the\npartition if the RO is in the VLDB.\n\nChange-Id: Ib2726bc5bf6697898ad26dc1d817143da3286ba3\nReviewed-on: http://gerrit.openafs.org/8036\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-09-04 09:06:44.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2012-08-22 12:25:06.000-07:00", "committer_id": 144944, "message": "vos: convertROtoRW susceptible to VLDB changes during override prompt\n\nvos convertROtoRW obtains a VLDB entry, then peforms some setup logic\n(including a possible user prompt) before obtaining a volume lock.\nThis exposes the code to possible time-of-check/time-of-use issues.\nAfter obtaining the volume lock, get a second copy of the VLDB entry\nand compare it to the first copy; if it has changed, fail the conversion\nwith an error message asking the user to re-issue the vos convertROtoRW\ncommand.\n\nChange-Id: I9c1a634cea2e22188869d54b00b7831aed12b1cd\nReviewed-on: http://gerrit.openafs.org/8008\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-20 17:39:06.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2012-08-09 08:05:32.000-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create 2nd RW on a fileserver\n\nIf an RW is already present on disk on the target server (any partition),\n'vos convertROtoRW' will still convert the RO, creating a second RW on the server.\nDetect this and refuse to convert the RO by returning EXDEV (invalid cross-device link).\n\nChange-Id: Ide15a7c39f2a975fd8597e497094b6a67b448e4f\nReviewed-on: http://gerrit.openafs.org/7934\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-08-02 18:37:05.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2012-05-21 10:08:48.000-07:00", "committer_id": 144944, "message": "vos: volume lock not released on convertROtoRW error\n\nIf an error occurs during convertROtoRW, the volume lock may\nnot be released.\n\nChange-Id: Ic03af00676de836cade4e39a743b234a0dc9b6cf\nReviewed-on: http://gerrit.openafs.org/7389\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 15:03:46.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2012-05-21 10:08:30.000-07:00", "committer_id": 144944, "message": "vos: convertROtoRW does not respect volume lock\n\nvos convertROtoRW was not checking the return code from\nubik_VL_SetLock().\n\nChange-Id: I651c543f9a0070a9d34d9cca7583437e50e95dc8\nReviewed-on: http://gerrit.openafs.org/7388\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Alistair Ferguson <alistair.ferguson@mac.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 14:45:16.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2012-05-16 05:40:49.000-07:00", "committer_id": 144944, "message": "vos: convertROtoRW may create two RW volumes\n\nIf the RW volume is listed after the RO convert target in the VLDB,\nthe code failed to detect that an RW is already present and would\ncreate a second RW volume.\n\nChange-Id: Ia77004214c4d1b18699b5527bc1fc928e8e1143d\nReviewed-on: http://gerrit.openafs.org/7385\nReviewed-by: Chas Williams - CONTRACTOR <chas@cmf.nrl.navy.mil>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-08 10:01:12.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2012-05-12 06:33:15.000-07:00", "committer_id": 144944, "message": "vos: convertROtoRW misc error reporting problems\n\nFixes a few inconsistencies and bugs in some error messages.\n\nChange-Id: Ic4971c4cc3a3aa3623ee0f13161fd7793d3acb19\nReviewed-on: http://gerrit.openafs.org/7387\nReviewed-by: Derrick Brashear <shadow@dementix.org>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2012-05-08 12:38:38.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2012-05-11 17:19:11.000-07:00", "committer_id": 144944, "message": "DOC: vos convertROtoRW security requirements\n\nThey were copied from another command; corrected them.\n\nChange-Id: Ic77f1a91520ec4147e42864438d98942f6a7effc\nReviewed-on: http://gerrit.openafs.org/7305\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Ken Dreyer <ktdreyer@ktdreyer.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Derrick Brashear <shadow@dementix.org>", "repo_description": null, "generate_at": "2012-05-02 13:55:16.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-07-27 08:11:37.000-04:00", "committer_id": 1894506, "message": "ubik: log important messages at default log level\n\nMany important ubik messages (e.g., errors, warnings, sync state\nchanges) are logged at log level 5 (-d 5) or higher.  Many sites are\nreluctant to run ubik servers at a logging level higher than the default\ndue to the large number of extremely noisy informational messages at log\nlevel 5.  Therefore, many important log messages are never seen.\n\nInstead, issue critical errors, warnings, and other important messages\nat log level 0 so that they are always seen, even at the default logging\nlevel.\n\nIn addition, disambiguate the two \"I am no longer sync-site\" messages by\nadding a unique reason text to each.\n\nChange-Id: I057edf01e2502e39c5135836f1d0081d03559270\nReviewed-on: https://gerrit.openafs.org/12617\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-05-08 21:11:27.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-07-27 08:11:57.000-04:00", "committer_id": 1894506, "message": "ubik: urecovery_AbortAll diagnostic msgs\n\nAs a troubleshooting aid for developers, add a few counters and a log\nmsg so we know when transactions are being aborted (if any) by\nurecovery_AbortAll.\n\nChange-Id: I528df6d51acd5d10bb2de30f43b8d4415adc7f8a\nReviewed-on: https://gerrit.openafs.org/12618\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-03-17 18:12:23.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-07-27 08:13:25.000-04:00", "committer_id": 1894506, "message": "ubik: improve logging for database synchonizations\n\nAs an aid for debugging database synchronization issues, ensure that the\nlogging is consistent and unambiguous for both the client and server\nsides of DISK_GetFile and DISK_SendFile.  Add new error messages as\nrequired.\n\nIn addition, rework the \"recovery sending version to <IP>\" message in\nurecovery_Interact.  This message is misleading because the new version\ndatabase is only sent to a DB server if its version is not up to date.\nInstead, move this message into the version check block immediately\nbelow it.  Also reword it for clarity and promote its log level from 5\nto 0.  Finally, remove the now-superfluous \"recovery stating local\ndatabase\" log message.\n\nChange-Id: If8bbaa1215cab9fd24b157a0ee57759b34e77e9c\nReviewed-on: https://gerrit.openafs.org/13079\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Marcio Brito Barbosa <mbarbosa@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-05-04 17:32:51.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-01-01 17:42:57.000-05:00", "committer_id": 1894506, "message": "LINUX: create afs_linux_dget() compat wrapper\n\nFor dentry operations that cover multiple dentry aliases of\na single inode, create a compatibility wrapper to hide differences\nbetween the older dget_locked() and the current dget().\n\nNo functional change should be incurred by this commit.\n\nChange-Id: I2bb0d453417f37707018f6ba5859903c3d34c8ff\nReviewed-on: https://gerrit.openafs.org/12789\nReviewed-by: Andrew Deason <adeason@dson.org>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-11-30 16:08:38.000-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-01-01 18:39:54.000-05:00", "committer_id": 1894506, "message": "LINUX: add afs_d_alias_lock & _unlock compat wrappers\n\nSimplify some #ifdefs for HAVE_DCACHE_LOCK by pushing them down into\nnew helpers in osi_compat.h.\n\nNo functional change should be incurred by this commit.\n\nChange-Id: Ia0dc560bc84c8db4b84ddcc77a17bab5fbf93af9\nReviewed-on: https://gerrit.openafs.org/12790\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-11-30 16:46:16.000-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-01-01 16:02:34.000-05:00", "committer_id": 1894506, "message": "Revert \"LINUX: eliminate unused variable warning\"\n\nThis reverts commit 19599b5ef5f7dff2741e13974692fe4a84721b59\nto allow also reverting commit\nc3bbf0b4444db88192eea4580ac9e9ca3de0d286 .\n\nChange-Id: I2780fe68d352f0f1def198f21127ec944d1d2c1d\nReviewed-on: https://gerrit.openafs.org/12787\nReviewed-by: Andrew Deason <adeason@dson.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-11-30 14:04:48.000-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-01-01 16:53:32.000-05:00", "committer_id": 1894506, "message": "Revert \"LINUX: do not use d_invalidate to evict dentries\"\n\nLinux recently changed the semantics of d_invalidate() to:\n- return void\n- invalidate even a current working directory\n\nOpenAFS commit c3bbf0b4444db88192eea4580ac9e9ca3de0d286 switched libafs\nto use d_prune_aliases() instead.\n\nHowever, since that commit, several things have happened:\n- RHEL 7.4 changed the semantics of d_invalidate() such that it\n  invalidates the cwd, but did NOT change the return type to void.\n  This broke our autoconf test for detecting the new semantics.\n- Further research reveals that d_prune_aliases() was not the best\n  choice for replacing d_invalidate().  This is because for directories,\n  d_prune_aliases() doesn't invalidate dentries when they are referenced\n  by its children, and it doesn't walk the tree trying to invalidate\n  child dentries.  So it can leave dentries dangling, if the only\n  references to thos dentries are via children.\n\nIn preparation for future commits, revert\nc3bbf0b4444db88192eea4580ac9e9ca3de0d286 .\n\nChange-Id: Iafbef23a6070180c0e21eb01a2d59385ef52f55c\nReviewed-on: https://gerrit.openafs.org/12788\nReviewed-by: Andrew Deason <adeason@dson.org>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-11-30 13:45:27.000-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-01-01 22:05:09.000-05:00", "committer_id": 1894506, "message": "LINUX: consolidate duplicate code in osi_TryEvictDentries\n\nThe two stanzas for HAVE_DCACHE_LOCK are now functionally identical;\nremove the preprocessor conditionals and duplicate code.\n\nMinor functional change is incurrred for very old (before 2.6.38) Linux\nversions that have dcache_lock; we are now obtaining the d_lock as well.\n\nThis is safe because d_lock is also quite old (pre-git, 2.6.12), and it\nis a spinlock that's only held for checking d_unhashed.  Therefore, it\nshould have negligible performance impact.  It cannot cause deadlocks or\nviolate locking order, because spinlocks can't be held across sleeps.\n\nChange-Id: I08faf204e6bd82c4401cdf6048d12cd551dd18fc\nReviewed-on: https://gerrit.openafs.org/12792\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@dson.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-11-30 17:56:13.000-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-01-01 22:50:39.000-05:00", "committer_id": 1894506, "message": "LINUX: Avoid d_invalidate() during afs_ShakeLooseVCaches()\n\nWith recent changes to d_invalidate's semantics (it returns void in Linux 3.11,\nand always returns success in RHEL 7.4), it has become increasingly clear that\nd_invalidate() is not the best function for use in our best-effort\n(nondisruptive) attempt to free up vcaches that is afs_ShakeLooseVCaches().\nThe new d_invalidate() semantics always force the invalidation of a directory\ndentry, which contradicts our desire to be nondisruptive, especially when\nthat directory is being used as the current working directory for a process.\nOur call to d_invalidate(), intended to merely probe for whether a dentry\ncan be discarded without affecting other consumers, instead would cause\nprocesses using that dentry as a CWD to receive ENOENT errors from getcwd().\n\nA previous commit (c3bbf0b4444db88192eea4580ac9e9ca3de0d286) tried to address\nthis issue by calling d_prune_aliases() instead of d_invalidate(), but\nd_prune_aliases() does not recursively descend into children of the given\ndentry while pruning, leaving it an incomplete solution for our use-case.\n\nTo address these issues, modify the shakeloose routine TryEvictDentries() to\ncall shrink_dcache_parent() and maybe __d_drop() for directories, and\nd_prune_aliases() for non-directories, instead of d_invalidate().  (Calls to\nd_prune_aliases() for directories have already been removed by reverting commit\nc3bbf0b4444db88192eea4580ac9e9ca3de0d286.)\n\nJust like d_invalidate(), shrink_dcache_parent() has been around \"forever\"\n(since pre-git v2.6.12).  Also like d_invalidate(), it \"walks\" the parent\ndentry's subdirectories and \"shrinks\" (unhashes) unused dentries.  But unlike\nd_invalidate(), shrink_dcache_parent() will not unhash an in-use dentry, and\nhas never changed its signature or semantics.\n\nd_prune_aliases() has also been available \"forever\", and has also never changed\nits signature or semantics.  The lack of recursive descent is not an issue for\nnon-directories, which cannot have such children.\n\n[kaduk@mit.edu: apply review feedback to fix locking and avoid extraneous\nchanges, and reword commit message]\n\nChange-Id: Icb6138ee5785e0ef82a9b85b1d2651dfd0830043\nReviewed-on: https://gerrit.openafs.org/12830\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-11-30 20:26:46.000-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-01-01 21:06:07.000-05:00", "committer_id": 1894506, "message": "LINUX: consolidate duplicate code in canonical_dentry\n\nThe two stanzas for HAVE_DCACHE_LOCK are now identical;\nremove the preprocessor conditionals and duplicate code.\n\nNo functional change should be incurred by this commit.\n\nChange-Id: I15cd4631d1932dcfb920313acb82fcbe570087e8\nReviewed-on: https://gerrit.openafs.org/12791\nReviewed-by: Andrew Deason <adeason@dson.org>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-11-30 16:51:32.000-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-02-04 09:14:56.000-05:00", "committer_id": 1894506, "message": "SOLARIS: Avoid vcache locks when flushing pages for RO vnodes\n\nWe have multiple code paths that hold the following locks at the same\ntime:\n\n    - avc->lock for a vcache\n    - The page lock for a page in 'avc'\n\nIn order to avoid deadlocks, we need a consistent ordering for obtaining\nthese two locks. The code in afs_putpage() currently obtains avc->lock\nbefore the page lock (Obtain*Lock is called before pvn_vplist_dirty).\n\nThe code in afs_getpages() also obtains avc->lock before the page lock,\nbut it does so in a loop for all requested pages (via pvn_getpages()).\nOn the second iteration of that loop, it obtains avc->lock, and the page\nfrom the first iteration of the loop is still locked. Thus, it obtains a\npage lock before locking avc->lock in some cases.\n\nSince we have two code paths that obtain those two locks in a different\norder, a deadlock can occur. Fixing this properly requires changing at\nleast one of those code paths, so the locks are taken in a consistent\norder. However, doing so is complex and will be done in a separate\nfuture commit.\n\nFor this commit, we can avoid the deadlock for RO volumes by simply\navoiding taking avc->lock in afs_putpages() at all while the pages are\nlocked. Normally, we lock avc->lock because pvn_vplist_dirty() will call\nafs_putapage() for each dirty page (and afs_putapage() requires\navc->lock held). But for RO volumes, we will have no dirty pages\n(because RO volumes cannot be written to from a client), and so\nafs_putapage() will never be called.\n\nSo to avoid this deadlock issue for RO volumes, avoid taking avc->lock\nacross the pvn_vplist_dirty() call in afs_putpage(). We now pass a dummy\npageout callback function to pvn_vplist_dirty() instead, which should\nnever be called, and which panics if it ever is.\n\nWe still need to hold avc->lock a few other times during afs_putpage()\nfor other minor reasons, but none of these hold page locks at the same\ntime, so the deadlock issue is still avoided.\n\n[mmeffie: comments, and fix missing write lock, fix lock releases]\n[adeason: revised commit message]\n\nChange-Id: Iec11101147220828f319dae4027e7ab1f08483a6\nReviewed-on: https://gerrit.openafs.org/12247\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@dson.org>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2015-06-30 01:54:21.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-05-25 22:05:14.000-04:00", "committer_id": 1894506, "message": "afs: fix broken volume callbacks (e.g. vos release)\n\nCommit e99bfcfaa3bca3e65f03928718c2c9eb5eff7c8c ('afs: use jenkins hash\nfor dcache, vcache tables') introduced new hashing implementations for\nthe dcache and vcache hash tables.  Unfortunately, a typo introduced a\nbug into the VCHashV hash function; instead of hashing by volume id, it\ncurrently hashes by vnode.\n\nThe most common symptom is that volume callbacks (RXAFSCB_Callback with\nfid <volid>:0:0) fail to find and invalidate all the files for the\nspecified volume.  This typically manifests as persistent stale RO\ncontent after a 'vos release' for new RW content.\n\nThis bug only affects the Unix cache manager; the Windows cache manager\nimplementation of RXAFSCB_Callback was unaffected.\n\nChange-Id: I7edca660671b880a69f0c499d54adffbbe62d2b2\nReviewed-on: https://gerrit.openafs.org/13090\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-05-25 17:05:28.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-05-25 07:00:32.000-04:00", "committer_id": 1894506, "message": "ubik: death to orphaned signals\n\nubik has a few very old \"orphaned\" LWP events that are signalled via\nLWP_NoYieldSignal, but have no matching waits (LWP_WaitProcess).\n\nEach \"signal\" runs the LWP waiting element list for each LWP on the\nblocked queue; this may add up to substantial wasted overhead on a\nheavily loaded ubik server.\n\nRemove the orphaned signals.\n\nNo functional difference should be incurred by this commit.\n\nChange-Id: I66eba45975a829216e7af1927e51ec6aab63f570\nReviewed-on: https://gerrit.openafs.org/12620\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Marcio Brito Barbosa <mbarbosa@sinenomine.net>\nReviewed-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-05-17 16:32:20.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-05-25 07:44:29.000-04:00", "committer_id": 1894506, "message": "ubik: remove redundant memset from udisk_write\n\nWhen udisk_write is extending the database, DRead will return a null\nbuffer.  udisk_write then calls DNew to get a brand new buffer for the\nextension write, and clears it with memset.  However, this is redundant,\nsince DNew has already cleared the new buffer.\n\nRemove the redundant memset.\n\nNo functional change should be incurred by this commit.\n\nChange-Id: Ia6768098fb3c67475c8948c874b92b91bf17cdb7\nReviewed-on: https://gerrit.openafs.org/12621\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Marcio Brito Barbosa <mbarbosa@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-05-19 16:34:21.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-05-25 09:09:16.000-04:00", "committer_id": 1894506, "message": "ptserver: improve PR_GetHostCPS logging\n\nThe IP address of the host is logged as a signed number.  Instead, log\nit as the unsigned (and hex) representation of the host IP addr.\n\nChange-Id: Ic8b2b7da852a3dc7e9984b63da70d0403845452e\nReviewed-on: https://gerrit.openafs.org/13043\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-04-24 14:41:11.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-03-08 21:25:38.000-05:00", "committer_id": 1894506, "message": "LINUX: fix RedHat 7.5 ENOTDIR issues\n\nRed Hat Linux 7.5 beta introduces a new file->f_mode flag\nFMODE_KABI_ITERATE as a means for certain in-tree filesystems to\nindicate that they have implemented file operation iterate() instead of\nreaddir().  The kernel routine iterate_dir() tests this flag to decide\nwhether to invoke the file operation iterate() or readdir().\n\nThe OpenAFS configure script detects that the file operation iterate()\nis available under RH7.5 and so implements iterate() as\nafs_linux_readdir().  However, since OpenAFS does not set\nFMODE_KABI_ITERATE on any of its files, the kernel's iterate_dir() will\nnot invoke iterate() for any OpenAFS files.  OpenAFS has also not\nimplemented readdir(), so iterate_dir() must return -ENOTDIR.\n\nInstead, modify OpenAFS to fall back to readdir() in this case.\n\nChange-Id: I242276150ab2a506e1e9c5c752e3f17d36c98935\nReviewed-on: https://gerrit.openafs.org/12935\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-03-01 23:16:56.000-05:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2018-02-04 09:14:56.000-05:00", "committer_id": 1894506, "message": "SOLARIS: Avoid vcache locks when flushing pages for RO vnodes\n\nWe have multiple code paths that hold the following locks at the same\ntime:\n\n    - avc->lock for a vcache\n    - The page lock for a page in 'avc'\n\nIn order to avoid deadlocks, we need a consistent ordering for obtaining\nthese two locks. The code in afs_putpage() currently obtains avc->lock\nbefore the page lock (Obtain*Lock is called before pvn_vplist_dirty).\n\nThe code in afs_getpages() also obtains avc->lock before the page lock,\nbut it does so in a loop for all requested pages (via pvn_getpages()).\nOn the second iteration of that loop, it obtains avc->lock, and the page\nfrom the first iteration of the loop is still locked. Thus, it obtains a\npage lock before locking avc->lock in some cases.\n\nSince we have two code paths that obtain those two locks in a different\norder, a deadlock can occur. Fixing this properly requires changing at\nleast one of those code paths, so the locks are taken in a consistent\norder. However, doing so is complex and will be done in a separate\nfuture commit.\n\nFor this commit, we can avoid the deadlock for RO volumes by simply\navoiding taking avc->lock in afs_putpages() at all while the pages are\nlocked. Normally, we lock avc->lock because pvn_vplist_dirty() will call\nafs_putapage() for each dirty page (and afs_putapage() requires\navc->lock held). But for RO volumes, we will have no dirty pages\n(because RO volumes cannot be written to from a client), and so\nafs_putapage() will never be called.\n\nSo to avoid this deadlock issue for RO volumes, avoid taking avc->lock\nacross the pvn_vplist_dirty() call in afs_putpage(). We now pass a dummy\npageout callback function to pvn_vplist_dirty() instead, which should\nnever be called, and which panics if it ever is.\n\nWe still need to hold avc->lock a few other times during afs_putpage()\nfor other minor reasons, but none of these hold page locks at the same\ntime, so the deadlock issue is still avoided.\n\n[mmeffie: comments, and fix missing write lock, fix lock releases]\n[adeason: revised commit message]\n\nChange-Id: Iec11101147220828f319dae4027e7ab1f08483a6\nReviewed-on: https://gerrit.openafs.org/12247\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@dson.org>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2015-06-30 01:54:21.000-04:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2018-01-01 22:50:39.000-05:00", "committer_id": 1894506, "message": "LINUX: Avoid d_invalidate() during afs_ShakeLooseVCaches()\n\nWith recent changes to d_invalidate's semantics (it returns void in Linux 3.11,\nand always returns success in RHEL 7.4), it has become increasingly clear that\nd_invalidate() is not the best function for use in our best-effort\n(nondisruptive) attempt to free up vcaches that is afs_ShakeLooseVCaches().\nThe new d_invalidate() semantics always force the invalidation of a directory\ndentry, which contradicts our desire to be nondisruptive, especially when\nthat directory is being used as the current working directory for a process.\nOur call to d_invalidate(), intended to merely probe for whether a dentry\ncan be discarded without affecting other consumers, instead would cause\nprocesses using that dentry as a CWD to receive ENOENT errors from getcwd().\n\nA previous commit (c3bbf0b4444db88192eea4580ac9e9ca3de0d286) tried to address\nthis issue by calling d_prune_aliases() instead of d_invalidate(), but\nd_prune_aliases() does not recursively descend into children of the given\ndentry while pruning, leaving it an incomplete solution for our use-case.\n\nTo address these issues, modify the shakeloose routine TryEvictDentries() to\ncall shrink_dcache_parent() and maybe __d_drop() for directories, and\nd_prune_aliases() for non-directories, instead of d_invalidate().  (Calls to\nd_prune_aliases() for directories have already been removed by reverting commit\nc3bbf0b4444db88192eea4580ac9e9ca3de0d286.)\n\nJust like d_invalidate(), shrink_dcache_parent() has been around \"forever\"\n(since pre-git v2.6.12).  Also like d_invalidate(), it \"walks\" the parent\ndentry's subdirectories and \"shrinks\" (unhashes) unused dentries.  But unlike\nd_invalidate(), shrink_dcache_parent() will not unhash an in-use dentry, and\nhas never changed its signature or semantics.\n\nd_prune_aliases() has also been available \"forever\", and has also never changed\nits signature or semantics.  The lack of recursive descent is not an issue for\nnon-directories, which cannot have such children.\n\n[kaduk@mit.edu: apply review feedback to fix locking and avoid extraneous\nchanges, and reword commit message]\n\nChange-Id: Icb6138ee5785e0ef82a9b85b1d2651dfd0830043\nReviewed-on: https://gerrit.openafs.org/12830\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2017-11-30 20:26:46.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2018-01-01 22:05:09.000-05:00", "committer_id": 1894506, "message": "LINUX: consolidate duplicate code in osi_TryEvictDentries\n\nThe two stanzas for HAVE_DCACHE_LOCK are now functionally identical;\nremove the preprocessor conditionals and duplicate code.\n\nMinor functional change is incurrred for very old (before 2.6.38) Linux\nversions that have dcache_lock; we are now obtaining the d_lock as well.\n\nThis is safe because d_lock is also quite old (pre-git, 2.6.12), and it\nis a spinlock that's only held for checking d_unhashed.  Therefore, it\nshould have negligible performance impact.  It cannot cause deadlocks or\nviolate locking order, because spinlocks can't be held across sleeps.\n\nChange-Id: I08faf204e6bd82c4401cdf6048d12cd551dd18fc\nReviewed-on: https://gerrit.openafs.org/12792\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Andrew Deason <adeason@dson.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2017-11-30 17:56:13.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2018-01-01 21:06:07.000-05:00", "committer_id": 1894506, "message": "LINUX: consolidate duplicate code in canonical_dentry\n\nThe two stanzas for HAVE_DCACHE_LOCK are now identical;\nremove the preprocessor conditionals and duplicate code.\n\nNo functional change should be incurred by this commit.\n\nChange-Id: I15cd4631d1932dcfb920313acb82fcbe570087e8\nReviewed-on: https://gerrit.openafs.org/12791\nReviewed-by: Andrew Deason <adeason@dson.org>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2017-11-30 16:51:32.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2018-01-01 18:39:54.000-05:00", "committer_id": 1894506, "message": "LINUX: add afs_d_alias_lock & _unlock compat wrappers\n\nSimplify some #ifdefs for HAVE_DCACHE_LOCK by pushing them down into\nnew helpers in osi_compat.h.\n\nNo functional change should be incurred by this commit.\n\nChange-Id: Ia0dc560bc84c8db4b84ddcc77a17bab5fbf93af9\nReviewed-on: https://gerrit.openafs.org/12790\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2017-11-30 16:46:16.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2018-01-01 17:42:57.000-05:00", "committer_id": 1894506, "message": "LINUX: create afs_linux_dget() compat wrapper\n\nFor dentry operations that cover multiple dentry aliases of\na single inode, create a compatibility wrapper to hide differences\nbetween the older dget_locked() and the current dget().\n\nNo functional change should be incurred by this commit.\n\nChange-Id: I2bb0d453417f37707018f6ba5859903c3d34c8ff\nReviewed-on: https://gerrit.openafs.org/12789\nReviewed-by: Andrew Deason <adeason@dson.org>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2017-11-30 16:08:38.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2018-01-01 16:53:32.000-05:00", "committer_id": 1894506, "message": "Revert \"LINUX: do not use d_invalidate to evict dentries\"\n\nLinux recently changed the semantics of d_invalidate() to:\n- return void\n- invalidate even a current working directory\n\nOpenAFS commit c3bbf0b4444db88192eea4580ac9e9ca3de0d286 switched libafs\nto use d_prune_aliases() instead.\n\nHowever, since that commit, several things have happened:\n- RHEL 7.4 changed the semantics of d_invalidate() such that it\n  invalidates the cwd, but did NOT change the return type to void.\n  This broke our autoconf test for detecting the new semantics.\n- Further research reveals that d_prune_aliases() was not the best\n  choice for replacing d_invalidate().  This is because for directories,\n  d_prune_aliases() doesn't invalidate dentries when they are referenced\n  by its children, and it doesn't walk the tree trying to invalidate\n  child dentries.  So it can leave dentries dangling, if the only\n  references to thos dentries are via children.\n\nIn preparation for future commits, revert\nc3bbf0b4444db88192eea4580ac9e9ca3de0d286 .\n\nChange-Id: Iafbef23a6070180c0e21eb01a2d59385ef52f55c\nReviewed-on: https://gerrit.openafs.org/12788\nReviewed-by: Andrew Deason <adeason@dson.org>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2017-11-30 13:45:27.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2018-01-01 16:02:34.000-05:00", "committer_id": 1894506, "message": "Revert \"LINUX: eliminate unused variable warning\"\n\nThis reverts commit 19599b5ef5f7dff2741e13974692fe4a84721b59\nto allow also reverting commit\nc3bbf0b4444db88192eea4580ac9e9ca3de0d286 .\n\nChange-Id: I2780fe68d352f0f1def198f21127ec944d1d2c1d\nReviewed-on: https://gerrit.openafs.org/12787\nReviewed-by: Andrew Deason <adeason@dson.org>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2017-11-30 14:04:48.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2017-04-05 10:17:47.000-04:00", "committer_id": 1894506, "message": "Linux v4.11: cred.h is no longer included in sched.h\n\nWith Linux commit e26512fea5bcd6602dbf02a551ed073cd4529449, cred.h is no\nlonger included in sched.h.\n\nSeveral components of libafs which require cred.h were picking it by\nincluding sched.h.\n\nInstead, explicitly add an include for cred.h. cred.h begins with a\ncustomary one-shot to prevent multiple loads:\n\n #ifndef _LINUX_CRED_H\n #define _LINUX_CRED_H\n\nTherefore we don't need a new autoconf test or preprocessor conditional\nto prevent redundant includes on older Linux releases.\n\nChange-Id: Ifc496c83141d2cfbd417133feb6d87c1146e5014\nReviewed-on: https://gerrit.openafs.org/12574\nTested-by: Mark Vitale <mvitale@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Joe Gorse <jhgorse@gmail.com>\nTested-by: Joe Gorse <jhgorse@gmail.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>", "repo_description": null, "generate_at": "2017-03-23 18:36:44.000-07:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2017-04-05 10:17:38.000-04:00", "committer_id": 1894506, "message": "Linux v4.11: signal stuff moved to sched/signal.h\n\nIn Linux commit c3edc4010e9d102eb7b8f17d15c2ebc425fed63c, signal_struct\nand other signal handling declarations were moved from sched.h to\nsched/signal.h.\n\nThis breaks existing OpenAFS autoconf tests for recalc_sigpending() and\ntask_struct.signal->rlim, so that the OpenAFS kernel module can no\nlonger build.\n\nModify OpenAFS autoconfig tests to cope.\n\nChange-Id: Ic9f174b92704eabcbd374feffe5fbeb92c8987ce\nReviewed-on: https://gerrit.openafs.org/12573\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Joe Gorse <jhgorse@gmail.com>\nTested-by: Joe Gorse <jhgorse@gmail.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>", "repo_description": null, "generate_at": "2017-03-23 15:10:03.000-07:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2017-03-11 14:14:23.000-05:00", "committer_id": 1894506, "message": "SOLARIS: prevent BAD TRAP panic with Studio 12.5\n\nStarting with Solaris Studio 12.3, it is documented that Solaris kernel\nmodules (such as libafs) must not use any floating point, vector, or\nSIMD/SSE instructions on x86 hardware.  However, each new Studio\ncompiler release (12.4 and especially 12.5) is more likely to use these\ntypes of instructions by default.\n\nIf the libafs kernel module includes any forbidden kernel instructions,\nSolaris will panic the system with:\n  BAD TRAP:  type=7 (#nm Device not available)\n\nProvide a new autoconfig test to specify the required compiler options\n(-xvector=%none -xregs=no%float) when building the OpenAFS kernel module\nfor Solaris, so that no invalid x86 instructions are used.\n\nIn addition, reinstate default kernel module optimization for Solaris.\nIt had been disabled in commit 80592c53cbb0bce782eb39a5e64860786654be9f\nto address this same issue in Studio 12.3 and 12.4.  However, Studio\n12.5 started using some SSE instructions even with no optimization.\n\nThis commit has been tested with OpenAFS master and Studio 12.5 at all\noptimization levels (none, -xO1 through -xO5) and verified to contain no\nXMM register instructions via the following command:\n  $ gobjdump -dlr libafs64.o | grep xmm | wc -l\n\nChange-Id: Ic3c7860f7d524162fd9178a1dab5dd223722ee43\nReviewed-on: https://gerrit.openafs.org/12558\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2017-02-28 18:02:39.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2017-03-09 19:45:26.000-05:00", "committer_id": 1894506, "message": "DAFS: do not save or restore host state if CPS in progress\n\nIf a fileserver is shutdown while one or more PR_GetHostCPS calls\nare in progress, this state is saved in the fsstate.dat file as\nhostFlags HCPS_WAITING, HCPS_INPROGRESS.  Other hosts that are\nmerely waiting will have HCPS_WAITING recorded.\n\nHowever, it makes no sense to restore host structs in this state,\nbecause the GetCPS calls will no longer be in progress.  Once these\nhosts become active, they will block server threads and quickly cause\nall server threads to be exhausted as other CPS requests are blocked\nbehind them.\n\nInstead, exclude these states from both save and restore.\n\nChange-Id: I3fad67b70c96dc967d6f8e3a7b393cfda076c91d\nReviewed-on: https://gerrit.openafs.org/12561\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": null, "generate_at": "2017-02-20 20:16:47.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 122727568, "repo_owner_id": 3272249, "commit_at": "2017-02-22 23:23:12.000-05:00", "committer_id": 1894506, "message": "Linux 4.10: have_submounts is gone\n\nLinux commit f74e7b33c37e vfs: remove unused have_submounts() function\n(v4.10-rc2) removes have_submounts from the tree after providing a\nreplacement (path_has_submounts) for its last in-tree caller, autofs.\n\nHowever, it turns out that OpenAFS is better off not using the new\npath_has_submounts.  Instead, OpenAFS could/should have stopped using\nhave_submounts() much earlier, back in Linux v3.18 when d_invalidate\nbecame void.  At that time, most in-tree callers of have_submounts had\nalready been converted to use check_submounts_and_drop back in v3.12.\nAt v3.18, a series of commits modified check_submounts_and_drop to\nautomatically remove child submounts (instead of returning -EBUSY if a\nsubmount was detected), then subsumed it into d_invalidate.  The end\nresult was that VFS now implicitly handles much of the housekeeping\npreviously called explicitly by the various filesystem d_revalidate\nroutines:\n- shrink_dcache_parent\n- check_submounts_and_drop\n- d_drop\n- d_invalidate\nAll in-tree filesystem d_revalidate routines were updated to take\nadvantage of this new VFS support.\n\nModify afs_linux_dentry_revalidate to no longer perform any special\nhandling for invalid dentries when D_INVALIDATE_IS_VOID.  Instead, allow\nour VFS caller to properly clean up any invalid dentry when we return 0.\n\nChange-Id: I0c4d777e6d445857c395a7b5f9a43c9024b098e9\nReviewed-on: https://gerrit.openafs.org/12506\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": null, "generate_at": "2016-12-07 11:11:45.000-05:00", "author_id": 7241786, "repo_name": "LlsDimple/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-06-09 15:47:45.000-04:00", "committer_id": 1894506, "message": "ubik: remove unused ContactQuorum_DISK_Write\n\nThis function is not used; remove it.\n\nNo functional change is incurred by this commit.\n\nChange-Id: I7e3bb26fb62b0e28c8703154eb3df384d4dbc32d\nReviewed-on: https://gerrit.openafs.org/13077\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Michael Meffie <mmeffie@sinenomine.net>\nReviewed-by: Marcio Brito Barbosa <mbarbosa@sinenomine.net>\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-05-09 16:50:55.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-06-09 17:07:09.000-04:00", "committer_id": 1894506, "message": "ubik: make ContactQuorum_* routines static\n\nMost of the ContactQuorum_* routines are only used in ubik.c, so make\nthem all static - except for ContactQuorum_DISK_SetVersion, which is\ncalled from disk.c.\n\nChange-Id: I7d1ccd839e01ea8ee8d768dd369a892773361b05\nReviewed-on: https://gerrit.openafs.org/13078\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-05-04 15:42:14.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-06-08 10:09:26.000-04:00", "committer_id": 1894506, "message": "xdr: remove dead code, whitespace from xdr_enum\n\nThe 'enum sizecheck' declaration has been unused since openafs-ibm-1_0; it is\napparently vestigial from the original XDR code.  Remove it, along with some\nextraneous whitespace.\n\nNo functional change is incurred by this commit.\n\nChange-Id: I9f725ab6aff6cafa911975e9edaed8f07c8a328a\nReviewed-on: https://gerrit.openafs.org/13076\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-06-05 14:12:20.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-06-08 10:08:47.000-04:00", "committer_id": 1894506, "message": "xdr: avoid xdr_enum memory overrun\n\nSince openafs-ibm-1_0, xdr_enum has used xdr_long to read and write, even\nthough enum_t is defined as int.  For systems where sizeof(int) ==\nsizeof(long), this works by accident.  But other systems (e.g., DARWIN\nARCHFLAGS=x86_64) xdr_enum will overrun its int-sized second parameter.  For\nXDR_DECODE, this results in memory corruption.\n\nThis was first noticed with OpenAFS 1.8.0 on macOS 10.13; if aklog is issued\nwhile already holding a token, it will fail in token_SetsEquivalent with a\nsegfault in decodeToken.  The root cause is that the address passed to\ndecodeToken had been overwritten by a previous call to tokenType -> xdr_enum ->\nxdr_long.\n\nInstead, modify xdr_enum to use xdr_int for its work.\n\nChange-Id: I671d55588d88e0640f365624b83bd04b53dc97cc\nReviewed-on: https://gerrit.openafs.org/13075\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-06-06 15:23:26.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-06-08 19:42:01.000-04:00", "committer_id": 1894506, "message": "ubik: disambiguate \"Synchonize database with server\" msgs\n\nUbik issues the same message in two very different cases:\n- sync server issues DISK_GetFile to obtain the latest version\n- non-sync server receives DISK_SendFile from the sync server\n\nModify the messages so they provide more information and are\ndistinguishable from each other.\n\nChange-Id: I99e8adc7229260f478a0df15791216e090d2e113\nReviewed-on: https://gerrit.openafs.org/12615\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Andrew Deason <adeason@sinenomine.net>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-05-08 17:50:00.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-06-18 23:24:00.000-04:00", "committer_id": 1894506, "message": "afs: remove dead code\n\nafs_CheckLocks has been dead code since openafs-ibm-1_0.\n\nNo functional change incurred.\n\nChange-Id: I9d57cf3bbbddef182fb128f65b04465bfe0fb492\nReviewed-on: https://gerrit.openafs.org/13210\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-06-14 14:38:54.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-06-18 23:23:54.000-04:00", "committer_id": 1894506, "message": "vol: remove dead code\n\nPartitionID has been dead code since openafs-ibm-1_0.\n\nNo functional change incurred.\n\nChange-Id: I93da25ef853716db7a0b7f945f8b19a15a055a43\nReviewed-on: https://gerrit.openafs.org/13209\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-06-14 14:03:45.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-06-22 08:18:17.000-04:00", "committer_id": 1894506, "message": "ubik: log when a server is marked down, and why\n\nIn order to better manage voting and recovery, each ubik server tracks\n(in array ubik_servers) which of its fellow quorum members are 'up' or\nnot.  However, ubik currently logs only when a server is \"back up\"; that\nis, ubik_server->up transitions from 0 to 1.\n\nAdd new log messages to identify the time and reason when a server is\n\"marked down\" (i.e., ubik_server->up transitions from 1 to 0).\n\nAlso modify two existing messages to have consistent wording with the\nnew \"marked down\" messages.  Also change them to ViceLog (log level\n0) so they will always be logged.\n\nChange-Id: I29ee93e96cb7b28b943171d1477671c540a10d78\nReviewed-on: https://gerrit.openafs.org/12616\nTested-by: BuildBot <buildbot@rampaginggeek.com>\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2017-03-17 21:42:31.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}, {"repo_id": 364443, "repo_owner_id": 150141, "commit_at": "2018-07-01 00:21:50.000-04:00", "committer_id": 1894506, "message": "rxevent: prevent negative rx_connection refCount\n\nrxi_ChallengeEvent is called directly from rxi_ChallengeOn to start the\nfirst challenge; subsequent calls to rxi_ChallengeEvent are from the\nevent handler.  When called as an event, we must putConnection the\nreference held by the event.  But when called directly for the first\ntime, the event has not been scheduled yet and so has not taken a\nreference on the connection.  For this case, we must not putConnection\nor the rx_connection refCount will go negative.\n\nOne reported symptom of this bug is a fileserver crash with:\n  'Assertion failed! file rx.c, line 1327.'\n\nIntroduced by commit 304d758983b499dc568d6ca57b6e92df24b69de8\n('Standardize rx_event usage').\n\nChange-Id: I67122ff84ac9b1b6445ad4005e76e5f8482fd7be\nReviewed-on: https://gerrit.openafs.org/13228\nReviewed-by: Benjamin Kaduk <kaduk@mit.edu>\nTested-by: BuildBot <buildbot@rampaginggeek.com>", "repo_description": "Fork of OpenAFS from git.openafs.org for visualization", "generate_at": "2018-06-30 17:35:09.000-04:00", "author_id": 7241786, "repo_name": "openafs/openafs"}], "bio": null, "commits": 354, "company": "Sine Nomine Associates", "following_list": [], "public_gists": 0, "name": "Mark Vitale", "created_at": "2014-04-09 17:50:16", "email": "mvitale@sinenomine.net", "following": 0, "login": "mvita", "repo_list": []}